<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fitzeng</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fitzeng.org/"/>
  <updated>2017-08-03T04:29:21.000Z</updated>
  <id>http://fitzeng.org/</id>
  
  <author>
    <name>fitzeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Why Marvel ?</title>
    <link href="http://fitzeng.org/2017/08/03/WhyMarvel/"/>
    <id>http://fitzeng.org/2017/08/03/WhyMarvel/</id>
    <published>2017-08-02T16:00:00.000Z</published>
    <updated>2017-08-03T04:29:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>先给自己挖个坑, 记录一下从 12 - 17 这五年间的点点滴滴.很久之前就很想写写自己心中的 Marvel. 人走的有些爱好是与理想相关的, 不是吗?</p>
</blockquote>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;先给自己挖个坑, 记录一下从 12 - 17 这五年间的点点滴滴.很久之前就很想写写自己心中的 Marvel. 人走的有些爱好是与理想相关的, 不是吗?&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Life" scheme="http://fitzeng.org/tags/Life/"/>
    
      <category term="Marvel" scheme="http://fitzeng.org/tags/Marvel/"/>
    
  </entry>
  
  <entry>
    <title>重拾数据结构</title>
    <link href="http://fitzeng.org/2017/08/02/reDS/"/>
    <id>http://fitzeng.org/2017/08/02/reDS/</id>
    <published>2017-08-01T16:00:00.000Z</published>
    <updated>2017-08-04T09:16:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>在大三到大四过渡期中, 从四月到七月, 经历过几场面试, 找实习. (如果八月份拿到[真.offer]的话我也想把这段经历记录下来) 结果很悲剧, 觉得方向不是什么障碍, 基础比较重, 所以要重拾数据结构不涉及算法具体实现, 因为是重拾, 所以先前有一定基础, 只要有一点提示便能唤醒无限回忆. 这里主要是记录各种数据结构的结构体, 这是经过重重思维过程得出的精华, 十分有价值. 至于具体实现和讲解日后回会以链接形式提供, 这里只提供一个思维树, 建立一个数据机构的思维体系, 后续更新欢迎关注 <a href="https://github.com/mk43/Algo-Math" target="_blank" rel="external">GitHub</a> 的更新.</p>
</blockquote>
<a id="more"></a>
<h3 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h3><ul>
<li>动态分配空间</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	ElemType * elem;</div><div class="line">	<span class="keyword">int</span> length;</div><div class="line">	<span class="keyword">int</span> listsize;</div><div class="line">&#125; SqList;</div></pre></td></tr></table></figure>
<ul>
<li>线性链表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></div><div class="line">	ElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> * <span class="title">next</span>;</span></div><div class="line">&#125; LNode, * LinkList;</div></pre></td></tr></table></figure>
<ul>
<li>静态链表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	ElemType data;</div><div class="line">	<span class="keyword">int</span> cur;	<span class="comment">// 游标指向下一个元素的数组下标</span></div><div class="line">&#125; component, SlinkList[MAXSIZE];</div></pre></td></tr></table></figure>
<ul>
<li>循环链表 &amp; 双向链表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">DuLNode</span>&#123;</span></div><div class="line">	ElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">DuLNode</span> * <span class="title">prior</span>;</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">DuLNode</span> * <span class="title">next</span>;</span></div><div class="line">&#125; DuLNode, * DuLinkList;</div></pre></td></tr></table></figure>
<h3 id="栈和队列"><a href="#栈和队列" class="headerlink" title="栈和队列"></a>栈和队列</h3><ul>
<li>栈</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	SELemType * base;</div><div class="line">	SElemType * top;</div><div class="line">	<span class="keyword">int</span> stacksize;</div><div class="line">&#125; SqStack;</div></pre></td></tr></table></figure>
<blockquote>
<p>应用: 主要是利用先进后出的特性</p>
<ul>
<li><p>数制转换</p>
</li>
<li><p>括号匹配检测</p>
</li>
<li><p>行编辑程序</p>
</li>
<li><p>迷宫非递归求解</p>
</li>
<li><p>表达式求值</p>
</li>
<li><p>Hanoi塔问题</p>
</li>
</ul>
</blockquote>
<ul>
<li><p>队列</p>
<ul>
<li><p>链队列</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QNode</span> &#123;</span></div><div class="line">	QElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">QNode</span> * <span class="title">next</span>;</span></div><div class="line">&#125; QNode, * QueuePtr;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	QueuePtr front;</div><div class="line">	QueuePtr rear;</div><div class="line">&#125; LinkQueue;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 循环队列

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	QElemType * base;</div><div class="line">	<span class="keyword">int</span> front;</div><div class="line">	<span class="keyword">int</span> rear;</div><div class="line">&#125; SqQueue;</div></pre></td></tr></table></figure>
</code></pre><h3 id="串"><a href="#串" class="headerlink" title="串"></a>串</h3><ul>
<li>定长串</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> SString[MAXSTRLEN + <span class="number">1</span>];</div><div class="line">SString s;</div></pre></td></tr></table></figure>
<ul>
<li><p>变长</p>
<ul>
<li><p>堆分配存储</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	<span class="keyword">char</span> * ch;</div><div class="line">	<span class="keyword">int</span> length;</div><div class="line">&#125;HString;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 块链存储

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span>&#123;</span></div><div class="line">	<span class="keyword">char</span> ch[CHUNKSIZE];</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Chunk</span> * <span class="title">next</span>;</span></div><div class="line">&#125; Chunk;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	Chunk * head;</div><div class="line">	Chunk * tail;</div><div class="line">	<span class="keyword">int</span> curlen;</div><div class="line">&#125; LString;</div></pre></td></tr></table></figure>
</code></pre><blockquote>
<p>应用</p>
<ul>
<li>子串定位 (KMP)</li>
</ul>
</blockquote>
<h3 id="数组和广义表"><a href="#数组和广义表" class="headerlink" title="数组和广义表"></a>数组和广义表</h3><ul>
<li>数组顺序存储</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	ElemType * base;</div><div class="line">	<span class="keyword">int</span> dim;    <span class="comment">// 数组维数</span></div><div class="line">	<span class="keyword">int</span> * bounds;    <span class="comment">// 维界基址</span></div><div class="line">	<span class="keyword">int</span> * constants;    <span class="comment">// 印象函数常量基址</span></div><div class="line">&#125; Array;</div></pre></td></tr></table></figure>
<ul>
<li><p>矩阵</p>
<blockquote>
<p>讨论稀疏矩阵的存储</p>
<ul>
<li>三元顺序表</li>
</ul>
</blockquote>
  <figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">int</span> j;</div><div class="line">	ElemType e;</div><div class="line">&#125; Triple;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	Triple data[MAXSIZE + <span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> mu;    <span class="comment">// 行</span></div><div class="line">	<span class="keyword">int</span> nu;    <span class="comment">// 列</span></div><div class="line">	<span class="keyword">int</span> tu;    <span class="comment">// 非零个数</span></div><div class="line">&#125;TSMatrix;</div></pre></td></tr></table></figure>
</li>
</ul>
<pre><code>+ 行逻辑链接

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	Triple data[MAXSIZE + <span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> rpos[MAXRC + <span class="number">1</span>];    <span class="comment">// 各行第一个非零元素位置表</span></div><div class="line">	<span class="keyword">int</span> mu, nu, tu;</div><div class="line">&#125; RLSMatrix;</div></pre></td></tr></table></figure>


+ 十字链表

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">OLNode</span> &#123;</span></div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">int</span> j;</div><div class="line">	ElemType e;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">OLNode</span> * <span class="title">right</span>;</span>    <span class="comment">// 该非零元素所在行的右链域</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">OLNode</span> * <span class="title">down</span>;</span>    <span class="comment">// 该非零元素所在列的下链域</span></div><div class="line">&#125; OLNode, * OLink;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	OLink * rhead;    <span class="comment">// 行链表头指针地址</span></div><div class="line">	OLink * chead;    <span class="comment">// 列链表头指针地址</span></div><div class="line">	<span class="keyword">int</span> mu, nu, tu;</div><div class="line">&#125; CrossLink;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>广义表</p>
<blockquote>
<p>表中有表</p>
</blockquote>
<ul>
<li><p>头尾链表存储</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123; ATOM, LIST &#125; ElemTag;    <span class="comment">// 0 : 原子, 1 : 子表</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> &#123;</span></div><div class="line">	ElemTag tag;</div><div class="line">	<span class="keyword">union</span> &#123;</div><div class="line">		AtomType atom;</div><div class="line">		<span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">			<span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> * <span class="title">hp</span>;</span>    <span class="comment">// 表头</span></div><div class="line">			<span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> * <span class="title">tp</span>;</span>    <span class="comment">// 表尾</span></div><div class="line">		&#125; ptr;    <span class="comment">// 表节点指针域</span></div><div class="line">	&#125;;</div><div class="line">&#125; * GList;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 扩展线性链表存储

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123; ATOM, LIST &#125; ElemTag;    <span class="comment">// 0 : 原子, 1 : 子表</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> &#123;</span></div><div class="line">	ElemTag tag;</div><div class="line">	<span class="keyword">union</span> &#123;</div><div class="line">		AtomType atom;</div><div class="line">		<span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">			<span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> * <span class="title">hp</span>;</span>    <span class="comment">// 表头</span></div><div class="line">		&#125; ptr;    <span class="comment">// 表节点指针域</span></div><div class="line">	&#125;;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">GLNode</span> * <span class="title">tp</span>;</span>    <span class="comment">// 表尾, 相当于 next.</span></div><div class="line">&#125; * GList;</div></pre></td></tr></table></figure>
</code></pre><h3 id="树和二叉树"><a href="#树和二叉树" class="headerlink" title="树和二叉树"></a>树和二叉树</h3><ul>
<li><p>二叉树存储结构</p>
<ul>
<li><p>顺序存储结构</p>
<blockquote>
<p>数组, 利用下标寻址</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> TElemType SqBiTree[MAX_TREE_SIZE];</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 链式存储结构

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> &#123;</span></div><div class="line">	TElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> * <span class="title">lchild</span>;</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> * <span class="title">rchild</span>;</span></div><div class="line">&#125; BiTNode, * BiTree;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>遍历二叉树</p>
<ul>
<li><p>先序遍历</p>
<blockquote>
<p>根节点 -&gt; 左子树 -&gt; 右子树</p>
</blockquote>
</li>
<li><p>中序遍历</p>
<blockquote>
<p>左子树 -&gt; 根节点 -&gt; 右子树</p>
</blockquote>
</li>
<li><p>后序遍历</p>
<blockquote>
<p>左子树 -&gt; 右子树 -&gt; 根节点</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>算数表达式 a + b * (c - d) - e / f</p>
<p>前缀表达式-先序遍历(逆波兰 : - + a * b - cd / ef)</p>
<p>中缀表达式-中序遍历(原表达式 : a + b * (c - d) - e / f)</p>
<p>后缀表达式-后续遍历(逆波兰式 : abcd - * + ef / -)</p>
</blockquote>
<ul>
<li>线索二叉树</li>
</ul>
<blockquote>
<p>保存比遍历过程中的节点相关性结果</p>
<p>前驱后继节点和左右孩子指示</p>
<table>
<thead>
<tr>
<th>lchild</th>
<th>LTag</th>
<th>data</th>
<th>RTag</th>
<th>rchild</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
<p>LTag 0 : lchild 域指示左孩子 1 : lchild 域指示前驱节点</p>
<p>RTag 0 : rchild 域指示右孩子 1 : rchild 域指示后继节点</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> PointerTag &#123;Link, Thread&#125;;    <span class="comment">// 0 : 指针 1 : 线索</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> &#123;</span></div><div class="line">	TElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> * <span class="title">lchild</span>;</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiThrNode</span> * <span class="title">rchild</span>;</span></div><div class="line">	PointerTag LTag;</div><div class="line">	PointerTag RTag;</div><div class="line">&#125; BiThrNode, * BiThrTree;</div></pre></td></tr></table></figure>
<ul>
<li><p>树和森林</p>
<ul>
<li><p>双亲表示法</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PTNode</span> &#123;</span></div><div class="line">	TElemType data;</div><div class="line">	<span class="keyword">int</span> parent;</div><div class="line">&#125; PTNode;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	PTNode nodes[MAX_TREE_SIZE];</div><div class="line">	<span class="keyword">int</span> r;    <span class="comment">// 根的位置</span></div><div class="line">	<span class="keyword">int</span> n;    <span class="comment">// 节点数</span></div><div class="line">&#125; PTree;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 孩子表示法

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span> &#123;</span>    <span class="comment">// 孩子节点</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span> * <span class="title">next</span>;</span></div><div class="line">	<span class="keyword">int</span> child;</div><div class="line">&#125; * ChildPtr;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	TElemType data;</div><div class="line">	ChildPtr firstchild;    <span class="comment">// 孩子链表头指针</span></div><div class="line">&#125; CTBox;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	CTBox nodes[MAX_TREE_SIZE];</div><div class="line">	<span class="keyword">int</span> r;    <span class="comment">// 根的位置</span></div><div class="line">	<span class="keyword">int</span> n;    <span class="comment">// 节点数</span></div><div class="line">&#125; CTree;</div></pre></td></tr></table></figure>


+ 孩子兄弟表示法

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span> &#123;</span></div><div class="line">	ElemType data;</div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span> * <span class="title">firstchild</span>;</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">CSNode</span> * <span class="title">nextsibling</span>;</span></div><div class="line">&#125; CSNode, * CSTree;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>二叉树和森林互换</p>
<ul>
<li><p>森林转换成二叉树</p>
<blockquote>
<p>左孩子右兄弟(左右是对二叉树而言, 孩子兄弟是对森林而言, 下面同理) </p>
</blockquote>
</li>
<li><p>二叉树转换成森林</p>
<blockquote>
<p>左孩子转换成孩子, 右孩子转换成兄弟</p>
</blockquote>
</li>
</ul>
</li>
<li><p>树和森林遍历</p>
<ul>
<li><p>先序遍历森林</p>
<blockquote>
<ol>
<li><p>第一棵树的根</p>
</li>
<li><p>先序遍历第一棵树中根节点的子树森林</p>
</li>
<li><p>先序遍历除第一棵树剩余的树构成的森林</p>
</li>
</ol>
</blockquote>
</li>
<li><p>中序遍历森林</p>
<blockquote>
<ol>
<li><p>中序遍历第一棵树中根节点的子树森林</p>
</li>
<li><p>第一棵树的根</p>
</li>
<li><p>中序遍历除第一棵树剩余的树构成的森林</p>
</li>
</ol>
</blockquote>
</li>
</ul>
</li>
</ul>
<h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><ul>
<li><p>图的存储结构</p>
<ul>
<li><p>数组表示法</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123;DG, DN, UDG, UDN&#125; GraphKind;    <span class="comment">// &#123;有向图, 有向网, 无向图, 无向网&#125;</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ArcCell</span> &#123;</span></div><div class="line">	VRType adj;    <span class="comment">// 顶点相关类型. 无权图 : 1/0 表示相邻与否 带权图 : 权值信息</span></div><div class="line">	InfoType * info;    <span class="comment">// 该弧相关的指针</span></div><div class="line">&#125; ArcCell, AdjMatrix[MAX_VERTEX_NUM][MAX_VERTEX_NUM];</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	VertexType vexs[MAX_VERTEX_NUM];    <span class="comment">// 顶点向量</span></div><div class="line">	AdjMatrix arcs;    <span class="comment">// 邻接矩阵</span></div><div class="line">	<span class="keyword">int</span> vexnum;    <span class="comment">// 顶点数</span></div><div class="line">	<span class="keyword">int</span> arcnum;    <span class="comment">// 弧数</span></div><div class="line">	GraphKind kind;    <span class="comment">// 图的种类标志</span></div><div class="line">&#125; MGraph;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 邻接表

&gt;  表节点
&gt; 
&gt; | adjvex | nextarc | info |
&gt; |--------|---------|------|
&gt; 
&gt; 头结点
&gt; 
&gt; | data | firstarc |
&gt; |------|----------|

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ArcNode</span> &#123;</span></div><div class="line">	<span class="keyword">int</span> adjvex;    <span class="comment">// 该弧所指向顶点位置</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">ArcNode</span> * <span class="title">nextarc</span>;</span>    <span class="comment">// 指向下一条弧的指针</span></div><div class="line">	InfoType * info;    <span class="comment">// 该弧相关信息的指针</span></div><div class="line">&#125; ArcNode;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VNode</span> &#123;</span></div><div class="line">	VertexType data;    <span class="comment">// 顶点信息</span></div><div class="line">	ArcNode * firstarc;    <span class="comment">// 指向第一条依附该顶点的弧的指针</span></div><div class="line">&#125; VNode, AdjList[MAX_VERTEX_NUM];</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	AdjList vertices;</div><div class="line">	<span class="keyword">int</span> vexnum;    <span class="comment">// 顶点数</span></div><div class="line">	<span class="keyword">int</span> arcnum;    <span class="comment">// 弧数</span></div><div class="line">	<span class="keyword">int</span> kind;    <span class="comment">// 种类标记</span></div><div class="line">&#125; ALGraph;</div></pre></td></tr></table></figure>


+ 十字链表

&gt; 弧节点
&gt; 
&gt; | tailvex | headvex | hlink | tlink | info |
&gt; |---------|---------|-------|-------|------|
&gt; 
&gt; 顶点节点
&gt; 
&gt; | data | firstin | firstout |
&gt; |------|---------|----------|
&gt;

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ArcBox</span> &#123;</span></div><div class="line">	<span class="keyword">int</span> tailvex;    <span class="comment">// 该弧的尾顶点位置</span></div><div class="line">	<span class="keyword">int</span> headvex;    <span class="comment">// 该弧的头顶点位置</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">ArcBox</span> * <span class="title">hlink</span>;</span>    <span class="comment">// 弧头相同的弧的链域</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">ArcBox</span> * <span class="title">tlink</span>;</span>    <span class="comment">// 弧尾相同的弧的链域</span></div><div class="line">	InfoType * info;    <span class="comment">// 该弧相关信息指针</span></div><div class="line">&#125; ArcBox;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VexNode</span> &#123;</span></div><div class="line">	VertexType data;</div><div class="line">	ArcBox * firstin;    <span class="comment">// 指向该节点第一条入弧</span></div><div class="line">	ArcBox * firstout;    <span class="comment">// 指向该节点第一条出弧</span></div><div class="line">&#125; VexNode;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	VexNode xlist[MAX_VERTEX_NUM];    <span class="comment">// 表头向量</span></div><div class="line">	<span class="keyword">int</span> vexnum;    <span class="comment">// 有向图的当前顶点数</span></div><div class="line">	<span class="keyword">int</span> arcnum;    <span class="comment">// 有向图的当前弧数</span></div><div class="line">&#125; OLGraph;</div></pre></td></tr></table></figure>


+ 邻接多重表

&gt; 每一条边用一个节点表示
&gt; 
&gt; | mark | ivex | ilink | jvex | jlink | info |
&gt; |------|------|-------|------|-------|------|
&gt; 
&gt; 每个顶点用一个节点表示
&gt; 
&gt; | data | firstedge |
&gt; |------|-----------|
&gt;

<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123;unvisited, visited&#125; VisitIf;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">EBox</span> &#123;</span></div><div class="line">	VisitIf mark;    <span class="comment">// 访问标记</span></div><div class="line">	<span class="keyword">int</span> ivex;    <span class="comment">// 依附顶点位置</span></div><div class="line">	<span class="keyword">int</span> jvex;    <span class="comment">// 依附顶点位置</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">EBox</span> * <span class="title">ilink</span>;</span>    <span class="comment">// 依附顶点的下一边</span></div><div class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">EBox</span> * <span class="title">jlink</span>;</span>    <span class="comment">// 依附顶点的下一边</span></div><div class="line">	InfoType * info;    <span class="comment">// 该边的信息指针</span></div><div class="line">&#125; EBox;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">VexBox</span> &#123;</span></div><div class="line">	VertexType data;</div><div class="line">	EBox * firstedge;    <span class="comment">// 指向第一条依附该顶点的边</span></div><div class="line">&#125; VexBox;</div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">	VexBox adjmulist[MAX_VERTEX_NUM];</div><div class="line">	<span class="keyword">int</span> vexnum;    <span class="comment">// 无向图的顶点数</span></div><div class="line">	<span class="keyword">int</span> edgenum;    <span class="comment">// 无向图的边数</span></div><div class="line">&#125; AMLGraph</div></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>图的遍历</p>
<ul>
<li><p>深度优先搜索</p>
<blockquote>
<p>以迷宫为例子(面试中被问到, 印象比较深刻). 深度优先就是一条路走到黑, 所以返回的第一条路径不保证是最优解. </p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">Boolean visited[MAX];    // 访问标志数组</div><div class="line">Status (* VisiteFunc) (int v);    // 韩阿叔变量</div><div class="line"></div><div class="line">void DFSTraverse(Graph G, Status (* Visit)(int v)) &#123;    // 深度优先遍历</div><div class="line">	VisitFunc = Visit;    // 使用全局变量 VisitFunc, 使 DFS 不必设置函数指针参数</div><div class="line">	for (v = 0; v &lt; G.vexnum; ++v) &#123;</div><div class="line">		visited[v] = FALSE;    // 访问数组标志初始化</div><div class="line">	&#125;</div><div class="line">	for (v = 0; v &lt; G.vexnum; ++v) &#123;</div><div class="line">		if (!visited[v]) &#123;</div><div class="line">			DFS(G, v);    // 对未访问的顶点调用 DFS</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void DFS(Graph G, int v) &#123;    // 从第 v 个顶点出发递归的深度优先遍历图 G.</div><div class="line">	visited[v] = TRUE;</div><div class="line">	VisitFunc(v);    // 访问第 v 个顶点</div><div class="line">	for (w = FirstAdjVex(G, v); w &gt;= 0; w = NextAdjVex(G, v, w)) &#123;</div><div class="line">		if (!visited[w]) &#123;</div><div class="line">			DFS(G, w);    // 对 v 的尚未访问的邻接顶点 w 递归调用 DFS.</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<pre><code>+ 广度优先搜索

&gt; 而广度优先就是 &apos;雨露均沾&apos; , 遍历完所有情况(可优化使得有些情况可以舍弃)然后比较得出最优解. 以上均为个人看法, 如有异议指出欢迎讨论.
&gt; 

<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">void BFSTraverse(Graph G, Status (* Visit)(int v)) &#123;</div><div class="line">	// 按广度优先非递归遍历图 G, 使用辅助队列 Q 和访问标志数组 visited. </div><div class="line">	for (v = 0; v &lt; G.vexnum; ++v) &#123;</div><div class="line">		visited[v] FALSE;</div><div class="line">	&#125;</div><div class="line">	InitQueue(Q);    // 置空辅助队列</div><div class="line">	for (v = 0; v &lt; G.vexnum; ++v) &#123;</div><div class="line">		if (!visited[v]) &#123;</div><div class="line">			visited[v] = TRUE;</div><div class="line">			Visit(v);</div><div class="line">			EnQueue(Q, v);    // v 入队列</div><div class="line">			while (!QueueEmpty(Q)) &#123;</div><div class="line">				DeQueue(Q, u);    // 队头元素出队列置 u.</div><div class="line">				for (w = FirstAdjVex(G, v); w &gt;= 0; w = NextAdjVex(G, u, w)); &#123;</div><div class="line">					if (!visited[w]) &#123;    // w 为 u 尚未访问的邻接顶点</div><div class="line">						visited[w] = TRUE;</div><div class="line">						Visit(w);</div><div class="line">						EnQueue(Q, w);</div><div class="line">					&#125; // if</div><div class="line">				&#125; // for</div><div class="line">			&#125; // while</div><div class="line">		&#125; // if</div><div class="line">	&#125; // for</div><div class="line">&#125; // BFSTraverse</div></pre></td></tr></table></figure>
</code></pre><p>// 以下待填</p>
<ul>
<li><p>图的连通性问题</p>
<ul>
<li>无向图的连通分量和生成树</li>
<li>有向图的强连通分量</li>
</ul>
</li>
<li><p>最小生成树</p>
<ul>
<li>各种算法</li>
</ul>
</li>
</ul>
<h3 id="动态存储管理"><a href="#动态存储管理" class="headerlink" title="动态存储管理"></a>动态存储管理</h3><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在大三到大四过渡期中, 从四月到七月, 经历过几场面试, 找实习. (如果八月份拿到[真.offer]的话我也想把这段经历记录下来) 结果很悲剧, 觉得方向不是什么障碍, 基础比较重, 所以要重拾数据结构不涉及算法具体实现, 因为是重拾, 所以先前有一定基础, 只要有一点提示便能唤醒无限回忆. 这里主要是记录各种数据结构的结构体, 这是经过重重思维过程得出的精华, 十分有价值. 至于具体实现和讲解日后回会以链接形式提供, 这里只提供一个思维树, 建立一个数据机构的思维体系, 后续更新欢迎关注 &lt;a href=&quot;https://github.com/mk43/Algo-Math&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 的更新.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Algo" scheme="http://fitzeng.org/tags/Algo/"/>
    
      <category term="Math" scheme="http://fitzeng.org/tags/Math/"/>
    
      <category term="C/C++" scheme="http://fitzeng.org/tags/C-C/"/>
    
      <category term="DataStruct" scheme="http://fitzeng.org/tags/DataStruct/"/>
    
  </entry>
  
  <entry>
    <title>Android 单元测试工具 Robolectric 中文文档</title>
    <link href="http://fitzeng.org/2017/07/31/robolectric/"/>
    <id>http://fitzeng.org/2017/07/31/robolectric/</id>
    <published>2017-07-30T16:00:00.000Z</published>
    <updated>2017-07-31T04:40:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2017/07/31/robolectric/robolectric-cn.png" alt=""></p>
<h3 id="为什么要翻译文档"><a href="#为什么要翻译文档" class="headerlink" title="为什么要翻译文档?"></a>为什么要翻译文档?</h3><blockquote>
<p>由于在大三暑假时间算是比较充裕的, 然后加上自己英语比较渣, 又对 gitbook 有兴趣, 所以就想翻译一些文档. 平时也是一直看别人的干货, 所以也想自己做点贡献, 希望能帮助英语是短板的部分人. </p>
</blockquote>
<a id="more"></a>
<h3 id="为什么是-Robolectric"><a href="#为什么是-Robolectric" class="headerlink" title="为什么是 Robolectric?"></a>为什么是 Robolectric?</h3><blockquote>
<p>其实原因很简单, 就是我之前写过一篇 <a href="http://fitzeng.org/2017/05/14/Android%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%92%8C%20Robolectric%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/">Android 单元测试和 Robolectric 源码解析</a> 的文章, 直接看的二手资料, 感觉这种学习方式太被动了, 要自己尝试去啃第一手资料. 而正好网上没有对应的中文文档加上内容少, 一个人可以完成, 再加上前面的第一点就直接开始行动了.</p>
</blockquote>
<h3 id="阅读建议"><a href="#阅读建议" class="headerlink" title="阅读建议"></a>阅读建议</h3><blockquote>
<p>我自知自己水平很渣, 所以一些实在想不通的直接给出了原文对应的英文文档供大家参考, 如果你已经是有了 4/6 级的水平, 推荐你直接看英文文档, 这份可以作参考. 当然如果可以的话, 欢迎大家留言提出修改意见. 对于翻译难理解, 有歧义, 有错误的地方欢迎大家指出来. 我在此先表示感谢. </p>
</blockquote>
<h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><blockquote>
<ul>
<li><p><a href="http://robolectric.org/" target="_blank" rel="external">Robolectric</a></p>
</li>
<li><p><a href="https://robolectric-cn.com/" target="_blank" rel="external">Robolectric-cn</a></p>
</li>
<li><p><a href="https://github.com/mk43/robolectric-cn" target="_blank" rel="external">GitHub</a></p>
</li>
<li><p><a href="https://www.gitbook.com/@mk43" target="_blank" rel="external">GitBook</a></p>
</li>
</ul>
</blockquote>
<h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><blockquote>
<p>目前是一个 Android 开发者, 即将毕业面临就业, 希望在毕业前做一些自己喜欢的事情. 同时也希望能贡献自己的一份力, 和大家探讨学习.</p>
<ul>
<li><p><a href="http://fitzeng.org/">Blog</a></p>
</li>
<li><p><a href="https://github.com/mk43" target="_blank" rel="external">GitHub</a></p>
</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2017/07/31/robolectric/robolectric-cn.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;为什么要翻译文档&quot;&gt;&lt;a href=&quot;#为什么要翻译文档&quot; class=&quot;headerlink&quot; title=&quot;为什么要翻译文档?&quot;&gt;&lt;/a&gt;为什么要翻译文档?&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;由于在大三暑假时间算是比较充裕的, 然后加上自己英语比较渣, 又对 gitbook 有兴趣, 所以就想翻译一些文档. 平时也是一直看别人的干货, 所以也想自己做点贡献, 希望能帮助英语是短板的部分人. &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="Android Unit Test" scheme="http://fitzeng.org/tags/Android-Unit-Test/"/>
    
  </entry>
  
  <entry>
    <title>JavaTips</title>
    <link href="http://fitzeng.org/2017/07/25/JavaTips/"/>
    <id>http://fitzeng.org/2017/07/25/JavaTips/</id>
    <published>2017-07-25T03:27:00.000Z</published>
    <updated>2017-08-01T15:04:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>这篇文章主要是个人在二次学习 Java 过程中, 对 Java 的一些常见特性误解的分析. </p>
<p>主要是以测试代码加测试结果的形式来记录. 这里只做收集整理和简单分析, 详情请见参考链接, 支持原作者.</p>
</blockquote>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li>基本类型<ul>
<li>== 和 equals</li>
<li>String, StringBuffer 和 StringBuilder</li>
<li>Array</li>
<li>ArrayList</li>
<li>LinkedList</li>
<li>Exception</li>
<li>Collction</li>
</ul>
</li>
</ul>
<a id="more"></a>
<h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><h4 id="和-equals"><a href="#和-equals" class="headerlink" title="== 和 equals"></a>== 和 equals</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">TestCode:</div><div class="line">Integer a = <span class="number">100</span>;</div><div class="line">Integer b = <span class="number">100</span>;</div><div class="line">System.out.println(a == b);</div><div class="line"></div><div class="line">Integer c = <span class="number">1000</span>;</div><div class="line">Integer d = <span class="number">1000</span>;</div><div class="line">System.out.println(c == d);</div><div class="line"></div><div class="line">Output:</div><div class="line"><span class="keyword">true</span></div><div class="line"><span class="keyword">false</span></div></pre></td></tr></table></figure>
<blockquote>
<p>其中 == 结果不一致是因为 Integer 类对在 -128 到 127 之间的数值进行了缓存. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">TestCode:</div><div class="line">Integer e = new Integer(100);</div><div class="line">Integer f = new Integer(100);</div><div class="line">System.out.println(e == f);</div><div class="line"></div><div class="line">Output:</div><div class="line">false</div></pre></td></tr></table></figure>
<blockquote>
<p><code>Integer a = 100;</code>涉及到自动装箱问题, 反编译之后就是 <code>Integer a = Integer.valueOf(100);</code>.<br>而<code>Integer e = new Integer(100);</code> 反编译不改变. 所以在 a 和 e 这两个对象引用的堆区域一个是通过<code>valueOf()</code>获得, 另一个是通过<code>new</code>获得. 毫无疑问 <code>new</code> 出来的肯定不会是同一块区域. 而 <code>valueOf()</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">&gt; 	<span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</div><div class="line">&gt; 		<span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</div><div class="line">&gt; 	<span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</div><div class="line">&gt; &#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>这里就解释了前面的<code>Integer 类对在 -128 到 127 之间的数值进行了缓存</code>. 详情见源码.</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">TestCode:</div><div class="line">String s1 = <span class="string">"1234"</span>;</div><div class="line">String s2 = <span class="string">"1234"</span>;</div><div class="line">System.out.println(s1 == s2);</div><div class="line"></div><div class="line">String s3 = <span class="keyword">new</span> String(<span class="string">"1234"</span>);</div><div class="line">String s4 = <span class="keyword">new</span> String(<span class="string">"1234"</span>);</div><div class="line">System.out.println(s3 == s4);</div><div class="line"></div><div class="line">Output:</div><div class="line"><span class="keyword">true</span></div><div class="line"><span class="keyword">false</span></div></pre></td></tr></table></figure>
<p>这个比较简单, 就是在 JVM 中存在常量池. 还有要注意的是两种初始化方式的不同才造成了这个差异. </p>
<p>下面分析 equals ,详情见参考.这里只提几点易混淆的地方.</p>
<blockquote>
<p>equals 是属于类方法, 而且是 Object 类的. 而 Object 类的实现就是判断引用是否相等.</p>
<p>而对于某个类来说判断相等一般是判断里面的某些成员变量是否相等. 所以就要重写父类方法.这里要区分重写和重载.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&gt; 重写:</div><div class="line">&gt; <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;&#125;</div><div class="line">&gt; 重载:</div><div class="line">&gt; <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(MyObject myObj)</span> </span>&#123;&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>所以要想实现自己想要的 equals 方法应该是重写.</p>
<p>其实这里面的主要内容就是了解了自动拆装箱和 JVM 内分配就不难了.</p>
<ul>
<li>第一类：整型 byte Byte | short Short | int Integer | long Long</li>
<li>第二类：浮点型 float Float | double Double</li>
<li>第三类：逻辑型 boolean Boolean</li>
<li>第四类：字符型 char Character</li>
</ul>
<p>在支持 equals 特性的时候, 往往还要支持 hashCode </p>
</blockquote>
<p>参考: </p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27562748" target="_blank" rel="external">让人疑惑的Java代码</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27570687" target="_blank" rel="external">Java字符串那些事儿</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27573287" target="_blank" rel="external">说说Java里的equals（上）</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27657548" target="_blank" rel="external">Java自动装箱/拆箱</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27741179" target="_blank" rel="external">说说Java里的equals（中）</a></li>
</ul>
<h4 id="String-StringBuffer-和-StringBuilder"><a href="#String-StringBuffer-和-StringBuilder" class="headerlink" title="String, StringBuffer 和 StringBuilder"></a>String, StringBuffer 和 StringBuilder</h4><ul>
<li>String</li>
</ul>
<blockquote>
<p>final 类.</p>
<p>String s=”sss”;    会在静态常量池中查找</p>
<p>String s = new String(“sss”);    直接在堆中开辟内存</p>
<p>使用场合: 在字符串不经常变化的场景中可以使用 String 类, 如: 常量的声明, 少量的变量运算等</p>
</blockquote>
<ul>
<li>StringBuffer</li>
</ul>
<blockquote>
<p>线程安全, 可自身修改</p>
<p>必须通过构造函数初始化</p>
<p>使用场合: 在频繁进行字符串的运算(拼接, 替换, 删除等), 并且运行在多线程的环境中, 则可以考虑使用 StringBuffer, 例如 XML 解析, HTTP 参数解析和封装等</p>
</blockquote>
<ul>
<li>StringBuilder</li>
</ul>
<blockquote>
<p>线程不安全, 操作最快</p>
<p>使用场合: 和 StringBuffer 类似的不要求线程安全场景, 效率比 StringBuffer 高</p>
</blockquote>
<h4 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h4><blockquote>
<p>是一个在 JVM 中的特殊对象, 可以使用反射查看</p>
<p>拷贝时注意深拷贝还是浅拷贝</p>
</blockquote>
<h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h4><blockquote>
<p>首先要知道的是这是一个 Array 所以在进行修改操作时十分不方便的. 特别是增加或者删除元素, 扩大存储等方式相比链表结构来说麻烦太多.知道这个为出发点, 对于源码实现的理解就理所当然了.<br>应该了解的几个点</p>
<ul>
<li>在 ArrayList 中从有元素开始就会分配 10 的对象大小容量. 接下来以 <code>currentSize * 1.5</code> 的大小扩容.</li>
<li>对于修改空间是以 System.arraycopy() 形式修改的. 为了提高效率采用的是 native 方法.</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">arraycopy</span><span class="params">(Object src, </span></span></div><div class="line">&gt; 		<span class="keyword">int</span>  srcPos, Object dest, <span class="keyword">int</span> destPos, <span class="keyword">int</span> length);</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<p>详情源码分析见参考.</p>
</blockquote>
<p>参考: </p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/27873515" target="_blank" rel="external">ArrayList初探</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27878015" target="_blank" rel="external">再探ArrayList（ArrayList的扩容）</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/27938717" target="_blank" rel="external">三顾ArrayList</a></li>
</ul>
<h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h4><blockquote>
<p>实现方式是双向链表</p>
</blockquote>
<h4 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h4><p><img src="http://img.my.csdn.net/uploads/201212/02/1354439580_6933.PNG" alt=""></p>
<ul>
<li>尽可能的减小try块</li>
<li>保证所有资源都被正确释放, 充分运用finally关键词</li>
<li>catch语句应当尽量指定具体的异常类型, 而不应该指定涵盖范围太广的 Exception 类. 不要一个Exception试图处理所有可能出现的异常</li>
<li>既然捕获了异常, 就要对它进行适当的处理</li>
<li>在异常处理模块中提供适量的错误原因信息, 组织错误信息使其易于理解和阅读</li>
<li>不要在 finally 块中处理返回值</li>
<li>不要在构造函数中抛出异常</li>
</ul>
<p>参考: </p>
<ul>
<li><a href="http://www.cnblogs.com/chenssy/category/525010.html" target="_blank" rel="external">树上月</a></li>
</ul>
<h4 id="Collction"><a href="#Collction" class="headerlink" title="Collction"></a>Collction</h4><ul>
<li>List 列表(可重复)</li>
<li>Map 映射(key-value)</li>
<li>Set 集合(不能重复)</li>
</ul>
<p><img src="http://images.cnitblog.com/i/532548/201404/262238192165666.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章主要是个人在二次学习 Java 过程中, 对 Java 的一些常见特性误解的分析. &lt;/p&gt;
&lt;p&gt;主要是以测试代码加测试结果的形式来记录. 这里只做收集整理和简单分析, 详情请见参考链接, 支持原作者.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基本类型&lt;ul&gt;
&lt;li&gt;== 和 equals&lt;/li&gt;
&lt;li&gt;String, StringBuffer 和 StringBuilder&lt;/li&gt;
&lt;li&gt;Array&lt;/li&gt;
&lt;li&gt;ArrayList&lt;/li&gt;
&lt;li&gt;LinkedList&lt;/li&gt;
&lt;li&gt;Exception&lt;/li&gt;
&lt;li&gt;Collction&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://fitzeng.org/tags/Java/"/>
    
      <category term="Tips" scheme="http://fitzeng.org/tags/Tips/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 算法集锦</title>
    <link href="http://fitzeng.org/2017/07/17/AlgoAndMath/"/>
    <id>http://fitzeng.org/2017/07/17/AlgoAndMath/</id>
    <published>2017-07-17T03:27:00.000Z</published>
    <updated>2017-07-20T08:54:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="leetcode-算法集锦"><a href="#leetcode-算法集锦" class="headerlink" title="leetcode 算法集锦"></a><a href="https://www.nowcoder.com/ta/leetcode" target="_blank" rel="external">leetcode 算法集锦</a></h2><blockquote>
<p>主要是牛客网上 leetcode 的算法题实践. 在 Blog 包含自己的解法和对别人优秀解法的分析.</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">序号</th>
<th style="text-align:center">考点</th>
<th style="text-align:center">题目</th>
<th style="text-align:center">C/C++</th>
<th style="text-align:center">Java     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">  01</td>
<td style="text-align:center">树</td>
<td style="text-align:center">Minimum Depth of Binary Tree</td>
<td style="text-align:center">NULL</td>
<td style="text-align:center"><a href="#jump_01">题解</a>  </td>
</tr>
<tr>
<td style="text-align:center">  02</td>
<td style="text-align:center">栈</td>
<td style="text-align:center">evaluate-reverse-polish-notation</td>
<td style="text-align:center">NULL</td>
<td style="text-align:center"><a href="#jump_02">题解</a> </td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h3 id="02-evaluate-reverse-polish-notation"><a href="#02-evaluate-reverse-polish-notation" class="headerlink" title="02 : evaluate-reverse-polish-notation"></a><span id="jump_02"><a href="https://www.nowcoder.com/practice/22f9d7dd89374b6c8289e44237c70447?tpId=46&amp;tqId=29031&amp;rp=1&amp;ru=/ta/leetcode&amp;qru=/ta/leetcode/question-ranking" target="_blank" rel="external">02 : evaluate-reverse-polish-notation</a></span></h3><blockquote>
<p>Evaluate the value of an arithmetic expression in Reverse Polish Notation.Valid operators are+,-,*,/. Each operand may be an integer or another expression.</p>
<p>Some examples:</p>
<p>[“2”, “1”, “+”, “3”, “<em>“] -&gt; ((2 + 1) </em> 3) -&gt; 9</p>
<p>[“4”, “13”, “5”, “/“, “+”] -&gt; (4 + (13 / 5)) -&gt; 6</p>
</blockquote>
<ul>
<li>我的解法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Stack;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">evalRPN</span><span class="params">(String[] tokens)</span> </span>&#123;</div><div class="line">        Stack&lt;String&gt; s = <span class="keyword">new</span> Stack&lt;&gt;();</div><div class="line">        <span class="keyword">int</span> op1 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">int</span> op2 = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tokens.length; i++) &#123;</div><div class="line">            <span class="keyword">switch</span> (tokens[i]) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"+"</span>: &#123;</div><div class="line">                    op1 = Integer.parseInt(s.pop());</div><div class="line">                    op2 = Integer.parseInt(s.pop());</div><div class="line">                    s.push(String.valueOf(op2 + op1));</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">case</span> <span class="string">"-"</span>: &#123;</div><div class="line">                    op1 = Integer.parseInt(s.pop());</div><div class="line">                    op2 = Integer.parseInt(s.pop());</div><div class="line">                    s.push(String.valueOf(op2 - op1));</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">case</span> <span class="string">"*"</span>: &#123;</div><div class="line">                    op1 = Integer.parseInt(s.pop());</div><div class="line">                    op2 = Integer.parseInt(s.pop());</div><div class="line">                    s.push(String.valueOf(op2 * op1));</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">case</span> <span class="string">"/"</span>: &#123;</div><div class="line">                    op1 = Integer.parseInt(s.pop());</div><div class="line">                    op2 = Integer.parseInt(s.pop());</div><div class="line">                    s.push(String.valueOf(op2 / op1));</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">default</span>: &#123;</div><div class="line">                    s.push(tokens[i]);</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> Integer.parseInt(s.pop());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>其他解法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.util.Stack;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">evalRPN</span><span class="params">(String[] tokens)</span> </span>&#123;</div><div class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;Integer&gt;();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;tokens.length;i++)&#123;</div><div class="line">            <span class="keyword">try</span>&#123;</div><div class="line">                <span class="keyword">int</span> num = Integer.parseInt(tokens[i]);</div><div class="line">                stack.add(num);</div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                <span class="keyword">int</span> b = stack.pop();</div><div class="line">                <span class="keyword">int</span> a = stack.pop();</div><div class="line">                stack.add(get(a, b, tokens[i]));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> stack.pop();</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,String operator)</span></span>&#123;</div><div class="line">        <span class="keyword">switch</span> (operator) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">"+"</span>:</div><div class="line">            <span class="keyword">return</span> a+b;</div><div class="line">        <span class="keyword">case</span> <span class="string">"-"</span>:</div><div class="line">            <span class="keyword">return</span> a-b;</div><div class="line">        <span class="keyword">case</span> <span class="string">"*"</span>:</div><div class="line">            <span class="keyword">return</span> a*b;</div><div class="line">        <span class="keyword">case</span> <span class="string">"/"</span>:</div><div class="line">            <span class="keyword">return</span> a/b;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="01-Minimum-Depth-of-Binary-Tree"><a href="#01-Minimum-Depth-of-Binary-Tree" class="headerlink" title="01 : Minimum Depth of Binary Tree"></a><span id="jump_01"><a href="https://www.nowcoder.com/practice/e08819cfdeb34985a8de9c4e6562e724?tpId=46&amp;tqId=29030&amp;tPage=1&amp;rp=1&amp;ru=/ta/leetcode&amp;qru=/ta/leetcode/question-ranking" target="_blank" rel="external">01 : Minimum Depth of Binary Tree</a></span></h3><blockquote>
<p>Given a binary tree, find its minimum depth.The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>
</blockquote>
<ul>
<li>我的解法</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">深度优先遍历所有节点, 直至叶子节点后返回长度. </div><div class="line">每次取当前节点左右子节点的 [最小值+<span class="number">1</span>] 为该节点的最小深度. </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">run</span><span class="params">(TreeNode root)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">int</span> length1 = run(root.left);</div><div class="line">        <span class="keyword">int</span> length2 = run(root.right);</div><div class="line">        <span class="keyword">if</span> (length1 == <span class="number">0</span> || length2 == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">return</span> length1 + length2 + <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> Math.min(length1, length2) + <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>其他思路</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="keyword">typedef</span> TreeNode* tree;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">run</span><span class="params">(TreeNode *root)</span> </span>&#123;</div><div class="line">        <span class="comment">//采用广度优先搜索，或者层序遍历，找到的第一个叶节点的深度即是最浅。</span></div><div class="line">      <span class="keyword">if</span>(! root) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">      <span class="built_in">queue</span>&lt;tree&gt; qu;</div><div class="line">      tree last,now;</div><div class="line">      <span class="keyword">int</span> level,size;</div><div class="line">      last = now = root;</div><div class="line">      level = <span class="number">1</span>;qu.push(root);</div><div class="line">      <span class="keyword">while</span>(qu.size())&#123;</div><div class="line">        now = qu.front();</div><div class="line">        qu.pop();</div><div class="line">        size = qu.size();</div><div class="line">        <span class="keyword">if</span>(now-&gt;left)qu.push(now-&gt;left);</div><div class="line">        <span class="keyword">if</span>(now-&gt;right)qu.push(now-&gt;right);</div><div class="line">        <span class="keyword">if</span>(qu.size()-size == <span class="number">0</span>)<span class="keyword">break</span>;</div><div class="line">        <span class="keyword">if</span>(last == now)&#123;</div><div class="line">          level++;</div><div class="line">          <span class="keyword">if</span>(qu.size())last = qu.back();</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">return</span> level;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;leetcode-算法集锦&quot;&gt;&lt;a href=&quot;#leetcode-算法集锦&quot; class=&quot;headerlink&quot; title=&quot;leetcode 算法集锦&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.nowcoder.com/ta/leetcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;leetcode 算法集锦&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;主要是牛客网上 leetcode 的算法题实践. 在 Blog 包含自己的解法和对别人优秀解法的分析.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;序号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;考点&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;题目&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C/C++&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Java     &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;  01&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;树&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Minimum Depth of Binary Tree&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NULL&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;#jump_01&quot;&gt;题解&lt;/a&gt;  &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;  02&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;栈&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;evaluate-reverse-polish-notation&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;NULL&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;#jump_02&quot;&gt;题解&lt;/a&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="Algo" scheme="http://fitzeng.org/tags/Algo/"/>
    
      <category term="Math" scheme="http://fitzeng.org/tags/Math/"/>
    
      <category term="Java" scheme="http://fitzeng.org/tags/Java/"/>
    
      <category term="C/C++" scheme="http://fitzeng.org/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Android Blog Collection</title>
    <link href="http://fitzeng.org/2017/07/08/AndroidBlogCollection/"/>
    <id>http://fitzeng.org/2017/07/08/AndroidBlogCollection/</id>
    <published>2017-07-08T03:27:00.000Z</published>
    <updated>2017-07-12T13:12:27.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>this repo aims to collect some high quality basic knowledge Android Blog.  Just like source code analysis or something.</p>
<p>这个仓库致力于收集我在学习 Android 开发过程所遇到的高质量的基础知识文章. 类似于源码分析之类的, 可以帮大家加深对基础原理的理解.</p>
</blockquote>
<h2 id="0-Start"><a href="#0-Start" class="headerlink" title="0. Start"></a>0. Start</h2><h3 id="gt-前言"><a href="#gt-前言" class="headerlink" title="&gt; 前言"></a>&gt; 前言</h3><blockquote>
<p>现在网络上有太多的知识可供学习, 但是作为一个自学者, 是好事也是坏事, 好事指不用担心没资源, 坏事是指对学习效率,理解程度和知识体系搭建都不太好.网上的文章不全是高质量的, 而且很多都是重复的碎片化知识,大家写的都差不多.所以为了自己的系统学习, 建议买书, 碰到哪个模块不懂再找大牛的 Blog 加深理解. </p>
<p>所以可以看到我推荐的基本都是成一个小体系的系列文章, 可以帮助我们形成一个好的”学习思维树”. 而不是一大堆”散叶”. 而其他文章主要是作为自己加深理解, 对某个知识点深入学习的参考.</p>
<p>首先可以肯定像我这种刚刚入门的在写文章的高度和视野都不如大牛. 而对于基础的知识,特别是涉及源码解析, 只要以一份资料为主就可以了. 最多加一两份做参考. 所以, 基本这种类型的文章, 我会收藏整理在这篇文章里并且永久更新. 同时自己也会利用课余时间把自己的实践项目以一个入门的学习者的视角解析, 相信这样对初学的开发者是比较友好的.如果你和我也一样处在这个阶段, 欢迎关注这篇文章.</p>
<p>这里永久更新这类基础知识解读. <a href="https://github.com/mk43" target="_blank" rel="external">GitHub</a> 和 <a href="http://fitzeng.org">Blog</a> 永久更新练习项目. 如果对你有帮助欢迎 Star ^_^;</p>
</blockquote>
<h3 id="gt-更新"><a href="#gt-更新" class="headerlink" title="&gt; 更新"></a>&gt; 更新</h3><ul>
<li>v3 : <a href="https://github.com/mk43" target="_blank" rel="external">敬请期待…</a></li>
<li>v2 : 添加 <code>JVM</code> <code>设计模式</code> <code>常用框架</code> <code>计算机基础</code> 四大模块优质 Blog 收集</li>
<li>v1 : 以 Android View 基础知识为主的 Blog 收集.</li>
</ul>
<a id="more"></a>
<h2 id="1-UI"><a href="#1-UI" class="headerlink" title="1. UI"></a>1. UI</h2><h3 id="gt-View-的绘制源码解析"><a href="#gt-View-的绘制源码解析" class="headerlink" title="&gt; View 的绘制源码解析"></a>&gt; View 的绘制源码解析</h3><blockquote>
<p>这里推荐的是<a href="http://www.jianshu.com/nb/9976005" target="_blank" rel="external">Carson_Ho</a>的一系列源码分析教程, 主要是从 View 和 ViewGroup 的测量, 布局和绘制过程进行详细分析, 很多图示十分清晰易懂, 对于初学者和进阶者都是很不错的学习资料. 如果有找到其他的好的教程我还会继续加上.</p>
</blockquote>
<ul>
<li><a href="http://www.jianshu.com/p/146e5cec4863" target="_blank" rel="external">自定义View基础 - 最易懂的自定义View原理系列(1)</a></li>
<li><a href="http://www.jianshu.com/p/1dab927b2f36" target="_blank" rel="external">自定义View Measure过程 - 最易懂的自定义View原理系列(2)</a></li>
<li><a href="http://www.jianshu.com/p/158736a2549d" target="_blank" rel="external">自定义View Layout过程 - 最易懂的自定义View原理系列(3)</a></li>
<li><a href="http://www.jianshu.com/p/95afeb7c8335" target="_blank" rel="external">自定义View Draw过程- 最易懂的自定义View原理系列(4)</a></li>
</ul>
<blockquote>
<p>前面给了 View 的绘制最主要的三个过程进行了详细分析的 Blog, 在前面的阅读基础上,下面给出<a href="http://blog.csdn.net/guolin_blog" target="_blank" rel="external">郭霖大神</a>的 View 的工作原理系列文章. 相信在读完以下四篇文章之后你会对 View 有一个重新认识的.</p>
</blockquote>
<ul>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/12921889" target="_blank" rel="external">Android LayoutInflater原理分析，带你一步步深入了解View(一)</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/16330267" target="_blank" rel="external"> Android视图绘制流程完全解析，带你一步步深入了解View(二)</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/17045157" target="_blank" rel="external">Android视图状态及重绘流程分析，带你一步步深入了解View(三)</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/17357967" target="_blank" rel="external"> Android自定义View的实现方法，带你一步步深入了解View(四)</a></li>
</ul>
<blockquote>
<p>下面介绍<a href="https://juejin.im/user/552f20a7e4b060d72a89d87f" target="_blank" rel="external">扔物线</a>的<a href="https://juejin.im/post/59591e42f265da6c407350c0" target="_blank" rel="external">HenCoder：给高级 Android 工程师的进阶手册</a>, 包含了视频讲解. 目前持续更新, 在学习完前面的 Blog 并进行了部分实践 Demo 后把这当做复习提高挺不错的, 同时我也会一直关注并更新.</p>
</blockquote>
<ul>
<li><a href="https://juejin.im/post/5962a3746fb9a06ba2687226" target="_blank" rel="external">HenCoder Android 开发进阶: 自定义 View 1-1 绘制基础</a></li>
</ul>
<h3 id="gt-View-相关类解析"><a href="#gt-View-相关类解析" class="headerlink" title="&gt; View 相关类解析"></a>&gt; View 相关类解析</h3><blockquote>
<p>这个主要是介绍一些对自定义 View 过程中需要仔细了解的一些类的使用. </p>
</blockquote>
<ul>
<li><a href="http://www.jianshu.com/p/2c19abde958c" target="_blank" rel="external">Path类的最全面详解 - 自定义View应用系列</a></li>
<li><a href="http://www.jianshu.com/p/762b490403c3" target="_blank" rel="external">Canvas类的最全面详解 - 自定义View应用系列</a></li>
</ul>
<h3 id="gt-XML-使用示例"><a href="#gt-XML-使用示例" class="headerlink" title="&gt; XML 使用示例"></a>&gt; XML 使用示例</h3><blockquote>
<p>这里推荐<a href="http://keeganlee.me/" target="_blank" rel="external">Keegan小钢</a>的Android样式的开发相关教程, 通过十分简洁的小例子帮你快速实现对 XML 的了解和使用.</p>
</blockquote>
<ul>
<li><a href="http://keeganlee.me/post/android/20150830" target="_blank" rel="external">Android样式的开发:shape篇</a></li>
<li><a href="http://keeganlee.me/post/android/20150905" target="_blank" rel="external">Android样式的开发:selector篇</a></li>
<li><a href="http://keeganlee.me/post/android/20150909" target="_blank" rel="external">Android样式的开发:layer-list篇</a></li>
<li><a href="http://keeganlee.me/post/android/20150916" target="_blank" rel="external">Android样式的开发:drawable汇总篇</a></li>
<li><a href="http://keeganlee.me/post/android/20151003" target="_blank" rel="external">Android样式的开发:View Animation篇</a></li>
<li><a href="http://keeganlee.me/post/android/20151026" target="_blank" rel="external">Android样式的开发:Property Animation篇</a></li>
<li><a href="http://keeganlee.me/post/android/20151031" target="_blank" rel="external">Android样式的开发:Style篇</a></li>
</ul>
<h3 id="gt-动画"><a href="#gt-动画" class="headerlink" title="&gt; 动画"></a>&gt; 动画</h3><blockquote>
<p>Android 动画介绍, 感谢<a href="http://www.jianshu.com/p/551f84402752" target="_blank" rel="external">阿祥JOKER</a> 分享.</p>
</blockquote>
<ul>
<li><a href="http://www.jianshu.com/p/551f84402752" target="_blank" rel="external">Android动画解析</a></li>
</ul>
<blockquote>
<p>重点!!!这里还是推荐郭霖大神的文章. 然后后面补充一篇偏知识点式的文章供复习.</p>
</blockquote>
<ul>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/43536355" target="_blank" rel="external">Android属性动画完全解析(上)，初识属性动画的基本用法</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/43816093" target="_blank" rel="external"> Android属性动画完全解析(中)，ValueAnimator和ObjectAnimator的高级用法</a></li>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/44171115" target="_blank" rel="external"> Android属性动画完全解析(下)，Interpolator和ViewPropertyAnimator的用法</a></li>
<li>补充参考:<a href="http://www.jianshu.com/p/b7aa2a4a9787" target="_blank" rel="external">Android动画，一篇就够</a>, 感谢<a href="http://www.jianshu.com/u/b7e9763ffd86" target="_blank" rel="external">Shaun白一辰</a>的分享.</li>
</ul>
<h3 id="gt-事件分发"><a href="#gt-事件分发" class="headerlink" title="&gt; 事件分发"></a>&gt; 事件分发</h3><blockquote>
<p>事件分发是一个重要的知识点, 在面试中也有很大几率被问到.在开发中经常会遇到, 只有彻底理解好了在写代码时候才能思路清晰.希望以下文章能帮助你我弄清事件分发机制.</p>
</blockquote>
<ul>
<li><a href="http://www.jianshu.com/p/38015afcdb58" target="_blank" rel="external">Android事件分发机制详解：史上最全面、最易懂</a></li>
</ul>
<h3 id="gt-自成体系的-View-教程"><a href="#gt-自成体系的-View-教程" class="headerlink" title="&gt; 自成体系的 View 教程"></a>&gt; 自成体系的 View 教程</h3><blockquote>
<p>这里主要是推荐一些其他优秀文章作为参考阅读, 同样也是自成体系的. </p>
</blockquote>
<ul>
<li><a href="http://www.gcssloop.com/customview/CustomViewIndex/" target="_blank" rel="external">GcsSloop : 安卓自定义View教程目录</a></li>
</ul>
<h2 id="2-Java-API"><a href="#2-Java-API" class="headerlink" title="2. Java API"></a>2. Java API</h2><blockquote>
<p>这里主要是对 Java API 中的一些重要的源码解析进行收集. 同时也是面试重点, 希望能加深对 Java 的认识. 做到真的理解底层实现而不是只会使用.</p>
<p>由于 Java 面太广, 所以在这里主要是以知识点的形式覆盖基本概念. 这里推荐 <a href="http://www.cnblogs.com/chenssy/category/525010.html" target="_blank" rel="external">树上月</a> 的教程. 从 Blog 介绍看接触 Java 有一段时间, 所以分析会比较深入且正确. 更主要的是, 他把 Java 类文章基本都串起来了, 共有 38 篇可供学习. 文章太多就不一一贴链接了…</p>
</blockquote>
<ul>
<li><a href="http://www.cnblogs.com/chenssy/category/525010.html" target="_blank" rel="external">想学Java, 值得一阅</a></li>
</ul>
<h2 id="3-浅析JVM"><a href="#3-浅析JVM" class="headerlink" title="3. 浅析JVM"></a>3. 浅析JVM</h2><blockquote>
<p>当然这块知识会推荐一本书, 是<a href="https://book.douban.com/subject/24722612/" target="_blank" rel="external">《深入理解 Java 虚拟机》</a>， 而网上的那些分析大多数都是基于这本书的。这里会收集一些较好的讲解共在线阅读。</p>
</blockquote>
<h2 id="4-深入理解设计模式"><a href="#4-深入理解设计模式" class="headerlink" title="4. 深入理解设计模式"></a>4. 深入理解设计模式</h2><blockquote>
<p>这块也有一本书<a href="https://book.douban.com/subject/26644935/" target="_blank" rel="external">《Android 源码设计模式解析与实战》</a>推荐. </p>
</blockquote>
<ul>
<li><a href="https://juejin.im/entry/58faca0a1b69e600588cd952" target="_blank" rel="external">Java 的 23 种设计模式全解析</a></li>
</ul>
<h2 id="5-Android-常用框架分析"><a href="#5-Android-常用框架分析" class="headerlink" title="5. Android 常用框架分析"></a>5. Android 常用框架分析</h2><h2 id="6-计算机基础"><a href="#6-计算机基础" class="headerlink" title="6. 计算机基础"></a>6. 计算机基础</h2><h3 id="gt-数据库"><a href="#gt-数据库" class="headerlink" title="&gt; 数据库"></a>&gt; 数据库</h3><p><a href="http://blog.jobbole.com/100349/?from=timeline" target="_blank" rel="external">如果有人问你数据库的原理，叫他看这篇文章</a></p>
<h3 id="gt-网络"><a href="#gt-网络" class="headerlink" title="&gt; 网络"></a>&gt; 网络</h3><h3 id="gt-操作系统"><a href="#gt-操作系统" class="headerlink" title="&gt; 操作系统"></a>&gt; 操作系统</h3>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;this repo aims to collect some high quality basic knowledge Android Blog.  Just like source code analysis or something.&lt;/p&gt;
&lt;p&gt;这个仓库致力于收集我在学习 Android 开发过程所遇到的高质量的基础知识文章. 类似于源码分析之类的, 可以帮大家加深对基础原理的理解.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0-Start&quot;&gt;&lt;a href=&quot;#0-Start&quot; class=&quot;headerlink&quot; title=&quot;0. Start&quot;&gt;&lt;/a&gt;0. Start&lt;/h2&gt;&lt;h3 id=&quot;gt-前言&quot;&gt;&lt;a href=&quot;#gt-前言&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt; 前言&quot;&gt;&lt;/a&gt;&amp;gt; 前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;现在网络上有太多的知识可供学习, 但是作为一个自学者, 是好事也是坏事, 好事指不用担心没资源, 坏事是指对学习效率,理解程度和知识体系搭建都不太好.网上的文章不全是高质量的, 而且很多都是重复的碎片化知识,大家写的都差不多.所以为了自己的系统学习, 建议买书, 碰到哪个模块不懂再找大牛的 Blog 加深理解. &lt;/p&gt;
&lt;p&gt;所以可以看到我推荐的基本都是成一个小体系的系列文章, 可以帮助我们形成一个好的”学习思维树”. 而不是一大堆”散叶”. 而其他文章主要是作为自己加深理解, 对某个知识点深入学习的参考.&lt;/p&gt;
&lt;p&gt;首先可以肯定像我这种刚刚入门的在写文章的高度和视野都不如大牛. 而对于基础的知识,特别是涉及源码解析, 只要以一份资料为主就可以了. 最多加一两份做参考. 所以, 基本这种类型的文章, 我会收藏整理在这篇文章里并且永久更新. 同时自己也会利用课余时间把自己的实践项目以一个入门的学习者的视角解析, 相信这样对初学的开发者是比较友好的.如果你和我也一样处在这个阶段, 欢迎关注这篇文章.&lt;/p&gt;
&lt;p&gt;这里永久更新这类基础知识解读. &lt;a href=&quot;https://github.com/mk43&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 和 &lt;a href=&quot;http://fitzeng.org&quot;&gt;Blog&lt;/a&gt; 永久更新练习项目. 如果对你有帮助欢迎 Star ^_^;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;gt-更新&quot;&gt;&lt;a href=&quot;#gt-更新&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt; 更新&quot;&gt;&lt;/a&gt;&amp;gt; 更新&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;v3 : &lt;a href=&quot;https://github.com/mk43&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;敬请期待…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;v2 : 添加 &lt;code&gt;JVM&lt;/code&gt; &lt;code&gt;设计模式&lt;/code&gt; &lt;code&gt;常用框架&lt;/code&gt; &lt;code&gt;计算机基础&lt;/code&gt; 四大模块优质 Blog 收集&lt;/li&gt;
&lt;li&gt;v1 : 以 Android View 基础知识为主的 Blog 收集.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="Collection" scheme="http://fitzeng.org/tags/Collection/"/>
    
  </entry>
  
  <entry>
    <title>Common Sense</title>
    <link href="http://fitzeng.org/2017/07/05/tips/"/>
    <id>http://fitzeng.org/2017/07/05/tips/</id>
    <published>2017-07-05T02:00:00.000Z</published>
    <updated>2017-07-29T12:21:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>this aticle aims to collect some common sense when you meet during dev.<br>这篇文章主要是记录我在 Android 开发过程中遇到的一些概念问题, 在这里提供简单快速的使用规范.</p>
<ul>
<li><a href="#jump_01">开源项目许可证</a></li>
<li><a href="#jump_02">看懂UML类图</a></li>
</ul>
<a id="more"></a>
<h4 id="开源项目许可证"><a href="#开源项目许可证" class="headerlink" title="开源项目许可证"></a><span id="jump_01">开源项目许可证</span></h4><p>MIT、GPLv2和Apache占据了前三位。choosealicense.com为许可证的选择给出了建议.</p>
<ul>
<li>MIT是一个几乎可以“为所欲为”的许可证，如果你希望简单、宽松，它是你的不二选择.</li>
<li>如果你关心软件的专利问题，但同样希望宽松，可以选择Apache.</li>
<li>如果你希望代码使用者同样能把他们的贡献分享出来，那就选择GPL.</li>
</ul>
<p>参考: <a href="http://www.infoq.com/cn/news/2015/03/github-open-source-licence" target="_blank" rel="external">曹知渊 : GitHub发布开源许可证使用情况</a></p>
<h4 id="看懂UML类图"><a href="#看懂UML类图" class="headerlink" title="看懂UML类图"></a><span id="jump_02">看懂UML类图</span></h4><ul>
<li>泛化关系 (A继承自B)</li>
</ul>
<p><img src="/2017/07/05/tips/uml_generalization.jpg" alt=""></p>
<p>eg:</p>
<p><img src="/2017/07/05/tips/uml_generalize.jpg" alt=""></p>
<ul>
<li>实现关系 (继承抽象类)</li>
</ul>
<p><img src="/2017/07/05/tips/uml_realize.jpg" alt=""></p>
<ul>
<li>聚合关系( A 聚合到 B 上或者 B 由 A 组成)</li>
</ul>
<p><img src="/2017/07/05/tips/uml_aggregation.jpg" alt=""></p>
<blockquote>
<p>聚合关系用于表示实体对象之间的关系，表示整体由部分构成的语义；例如一个部门由多个员工组成；</p>
<p>与组合关系不同的是，整体和部分不是强依赖的，即使整体不存在了，部分仍然存在；例如， 部门撤销了，人员不会消失，他们依然存在；</p>
</blockquote>
<ul>
<li>组合关系( A 组成 B 或者 B 由 A 组成)</li>
</ul>
<p><img src="/2017/07/05/tips/uml_composition.jpg" alt=""></p>
<blockquote>
<p>与聚合关系一样，组合关系同样表示整体由部分构成的语义；比如公司由多个部门组成；</p>
<p>但组合关系是一种强依赖的特殊聚合关系，如果整体不存在了，则部分也不存在了；例如， 公司不存在了，部门也将不存在了；</p>
</blockquote>
<ul>
<li>关联关系</li>
</ul>
<p><img src="/2017/07/05/tips/uml_association.jpg" alt=""></p>
<blockquote>
<p>它描述不同类的对象之间的结构关系；它是一种静态关系， 通常与运行状态无关，一般由常识等因素决定的；它一般用来定义对象之间静态的、天然的结构； 所以，关联关系是一种“强关联”的关系；</p>
<p>比如，乘车人和车票之间就是一种关联关系；学生和学校就是一种关联关系；</p>
<p>关联关系默认不强调方向，表示对象间相互知道；如果特别强调方向，如下图，表示A知道B，但 B不知道A；</p>
<p>在最终代码中，关联对象通常是以成员变量的形式实现的；</p>
</blockquote>
<ul>
<li>依赖关系 ( A 依赖于 B )</li>
</ul>
<p><img src="/2017/07/05/tips/uml_dependency.jpg" alt=""></p>
<blockquote>
<p>他描述一个对象在运行期间会用到另一个对象的关系；</p>
<p>与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化； 依赖关系也可能发生变化；</p>
<p>显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；</p>
<p>在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；</p>
</blockquote>
<ul>
<li>实例</li>
</ul>
<p><img src="/2017/07/05/tips/uml_class_struct.jpg" alt=""></p>
<blockquote>
<p>车的类图结构为&lt;<abstract>&gt;，表示车是一个抽象类；</abstract></p>
<p>它有两个继承类：小汽车和自行车；它们之间的关系为实现关系，使用带空心箭头的虚线表示；</p>
<p>小汽车为与SUV之间也是继承关系，它们之间的关系为泛化关系，使用带空心箭头的实线表示；</p>
<p>小汽车与发动机之间是组合关系，使用带实心箭头的实线表示；</p>
<p>学生与班级之间是聚合关系，使用带空心箭头的实线表示；</p>
<p>学生与身份证之间为关联关系，使用一根实线表示；</p>
<p>学生上学需要用到自行车，与自行车是一种依赖关系，使用带箭头的虚线表示；</p>
</blockquote>
<p>注: “看懂UML类图” 内容全部取材自<a href="http://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html" target="_blank" rel="external">该网页</a>. 在此做出感谢, 出于学习总结目的特意把内容搬至此处, 如有侵权立即删除.</p>
<p>参考: <a href="http://www.cnblogs.com/olvo/archive/2012/05/03/2481014.html" target="_blank" rel="external">congestion : UML类图关系（泛化 、继承、实现、依赖、关联、聚合、组合）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this aticle aims to collect some common sense when you meet during dev.&lt;br&gt;这篇文章主要是记录我在 Android 开发过程中遇到的一些概念问题, 在这里提供简单快速的使用规范.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#jump_01&quot;&gt;开源项目许可证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#jump_02&quot;&gt;看懂UML类图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://fitzeng.org/tags/Tips/"/>
    
  </entry>
  
  <entry>
    <title>BMP压缩成JPEG过程实现与分析</title>
    <link href="http://fitzeng.org/2017/06/13/BMP2JPEG/"/>
    <id>http://fitzeng.org/2017/06/13/BMP2JPEG/</id>
    <published>2017-06-12T16:00:00.000Z</published>
    <updated>2017-07-19T15:35:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/Algo-Math/tree/master/bmp2jpeg" target="_blank" rel="external">GitHub</a></p>
<hr>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>由于最近做了图像相关的学习，所以想再深入点，但是自己的知识有限，目前只能把自己所学的通过这个小小的实验来加深理解。参考大牛的 Blog 加上自己亲手实践，写了这篇文章。以后还会继续添加图像处理的相关知识。<br><img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/y.jpeg" width="240" height="240"> <img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/b.jpeg" width="240" height="240"> <img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/r.jpeg" width="240" height="240"></p>
<a id="more"></a>
<h3 id="BMP介绍"><a href="#BMP介绍" class="headerlink" title="BMP介绍"></a><a href="https://www.cnblogs.com/Matrix_Yao/archive/2009/12/02/1615295.html" target="_blank" rel="external">BMP介绍</a></h3><ul>
<li><p>BMP文件头<br>文件头主要是包含一个文件的ID信息，所以BMP的文件头自然也是说明自己的文件格式，文件大小等信息，一般是14位表示。意义如下图所示：<br><img src="/2017/06/13/BMP2JPEG/bmp_1.png" alt=""></p>
</li>
<li><p>位图信息头<br>信息头主要是对图片特征的描述，比如说宽高，像素，压缩方式等，一般是40位。主要介绍如下表：<br><img src="/2017/06/13/BMP2JPEG/bmp_2.png" alt=""></p>
</li>
<li><p>调色板<br>调色板是可选的，使用索引来表示图像，调色板就是索引与其对应的颜色的映射表，这次实验选用的是24bit的图片。</p>
</li>
<li>位图数据<br>这里就是存储图片的内容了。</li>
</ul>
<h3 id="JPEG介绍"><a href="#JPEG介绍" class="headerlink" title="JPEG介绍"></a><a href="https://www.cnblogs.com/lakeone/p/3596996.html" target="_blank" rel="external">JPEG介绍</a></h3><p>JPEG是有损压缩编码下的一种图片格式，目前压缩效果好，应用广泛。其原理主要是将传统的RGB模式下的图片转化成YCbCr格式。因为人眼的结构问题对亮度更加敏感，所以可以将亮度和色度分离开来，对色度可进行较大的舍弃从而进行较大程度的压缩而对视觉不造成太大影响。既然是压缩而成的格式，那必然有解压缩过程，而解压缩所以依赖的量化表和哈夫曼表自然要记录下来。所以和BMP对比自然而然头结构出来了，而且要比BMP复杂。下面只给出部分信息：<br><img src="/2017/06/13/BMP2JPEG/jpeg_1.png" alt=""></p>
<h3 id="BMP-读取"><a href="#BMP-读取" class="headerlink" title="BMP 读取"></a>BMP 读取</h3><ul>
<li>构建BMP的文件头和头信息结构体</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//BMP 文件格式【文件头和头部信息】</span></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">short</span>	bfType;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	bfSize;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">short</span>	bfReserved1;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">short</span>	bfReserved2;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	bfOffBits;</div><div class="line">&#125; BITMAPFILEHEADER;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	biSize;</div><div class="line">		<span class="keyword">int</span>				biWidth;</div><div class="line">		<span class="keyword">int</span>				biHeight;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">short</span>	biPlanes;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">short</span>	biBitCount;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	biCompression;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	biSizeImage;</div><div class="line">		<span class="keyword">int</span>				biXPelsPerMeter;</div><div class="line">		<span class="keyword">int</span>				biYPelsPerMeter;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	biClrUsed;</div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">int</span>	biClrImportant;</div><div class="line">&#125; BITMAPINFOHEADER;</div></pre></td></tr></table></figure>
<ul>
<li>图片校验</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//打开文件</span></div><div class="line">FILE* fp = fopen(fileName, <span class="string">"rb"</span>);</div><div class="line"><span class="keyword">if</span>(fp==<span class="number">0</span>) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">BITMAPFILEHEADER fileHeader;</div><div class="line">BITMAPINFOHEADER infoHeader;</div><div class="line"></div><div class="line"><span class="comment">// 读取头部 14字节</span></div><div class="line"><span class="keyword">if</span>(<span class="number">1</span> != fread(&amp;fileHeader, <span class="keyword">sizeof</span>(fileHeader), <span class="number">1</span>, fp)) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 判断是不是BM类型</span></div><div class="line"><span class="keyword">if</span>(fileHeader.bfType!=<span class="number">0x4D42</span>) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 读取头部信息 40字节</span></div><div class="line"><span class="keyword">if</span>(<span class="number">1</span> != fread(&amp;infoHeader, <span class="keyword">sizeof</span>(infoHeader), <span class="number">1</span>, fp)) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 判断是不是24位类型。也就是RGB的存储格式</span></div><div class="line"><span class="keyword">if</span>(infoHeader.biBitCount != <span class="number">24</span> || infoHeader.biCompression != <span class="number">0</span>) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> width = infoHeader.biWidth;</div><div class="line"><span class="keyword">int</span> height = infoHeader.biHeight &lt; <span class="number">0</span> ? (-infoHeader.biHeight) : infoHeader.biHeight;</div><div class="line"><span class="comment">// 判断二进制的最后三位是不是000，也就是判断是不是8的倍数</span></div><div class="line"><span class="keyword">if</span>((width&amp;<span class="number">7</span>) != <span class="number">0</span> || (height&amp;<span class="number">7</span>) != <span class="number">0</span>) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>图片内容读取</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// RGB三个分量</span></div><div class="line"><span class="keyword">int</span> bmpSize = width*height*<span class="number">3</span>;</div><div class="line"></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* buffer = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>[bmpSize];</div><div class="line"><span class="keyword">if</span>(buffer == <span class="number">0</span>) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 将文件指针移到数据区域</span></div><div class="line">fseek(fp, fileHeader.bfOffBits, SEEK_SET);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(infoHeader.biHeight &gt; <span class="number">0</span>) &#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; height; i++) &#123;</div><div class="line">		<span class="comment">// 读取第i行,每此读 3（size） * width （count）大小</span></div><div class="line">		<span class="keyword">if</span>(width != fread(buffer + (height - <span class="number">1</span> - i) * width * <span class="number">3</span>, <span class="number">3</span>, width, fp)) &#123;</div><div class="line">			<span class="keyword">delete</span>[] buffer;</div><div class="line">			buffer = <span class="number">0</span>;</div><div class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="keyword">if</span>(width*height != fread(buffer, <span class="number">3</span>, width*height, fp)) &#123;</div><div class="line">		<span class="keyword">delete</span>[] buffer;</div><div class="line">		buffer = <span class="number">0</span>;</div><div class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>存储信息</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取宽高和大小</span></div><div class="line">m_rgbBuffer = buffer;</div><div class="line">m_width = width;</div><div class="line">m_height = height;</div><div class="line"></div><div class="line">fclose(fp);</div><div class="line">fp=<span class="number">0</span>;</div></pre></td></tr></table></figure>
<h3 id="JPEG-写入"><a href="#JPEG-写入" class="headerlink" title="JPEG 写入"></a>JPEG 写入</h3><p>在前期JPEG写入是，要进行一系列准备工作，根据JPEG官方提供的标准量化表和哈夫曼表进行自己的操作得到自己满意的压缩编码。</p>
<ul>
<li><p>数值表：<br><img src="/2017/06/13/BMP2JPEG/tdata.png" alt=""></p>
</li>
<li><p>直流分量表：<br><img src="/2017/06/13/BMP2JPEG/tdc.png" alt=""></p>
</li>
<li><p>交流分量表：<br><img src="/2017/06/13/BMP2JPEG/tac.png" alt=""></p>
</li>
</ul>
<p>下面给出具体代码：</p>
<ul>
<li>亮度量化表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 亮度量化表</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Luminance_Quantization_Table[<span class="number">64</span>] = &#123;</div><div class="line">	<span class="number">16</span>,  <span class="number">11</span>,  <span class="number">10</span>,  <span class="number">16</span>,  <span class="number">24</span>,  <span class="number">40</span>,  <span class="number">51</span>,  <span class="number">61</span>,</div><div class="line">	<span class="number">12</span>,  <span class="number">12</span>,  <span class="number">14</span>,  <span class="number">19</span>,  <span class="number">26</span>,  <span class="number">58</span>,  <span class="number">60</span>,  <span class="number">55</span>,</div><div class="line">	<span class="number">14</span>,  <span class="number">13</span>,  <span class="number">16</span>,  <span class="number">24</span>,  <span class="number">40</span>,  <span class="number">57</span>,  <span class="number">69</span>,  <span class="number">56</span>,</div><div class="line">	<span class="number">14</span>,  <span class="number">17</span>,  <span class="number">22</span>,  <span class="number">29</span>,  <span class="number">51</span>,  <span class="number">87</span>,  <span class="number">80</span>,  <span class="number">62</span>,</div><div class="line">	<span class="number">18</span>,  <span class="number">22</span>,  <span class="number">37</span>,  <span class="number">56</span>,  <span class="number">68</span>, <span class="number">109</span>, <span class="number">103</span>,  <span class="number">77</span>,</div><div class="line">	<span class="number">24</span>,  <span class="number">35</span>,  <span class="number">55</span>,  <span class="number">64</span>,  <span class="number">81</span>, <span class="number">104</span>, <span class="number">113</span>,  <span class="number">92</span>,</div><div class="line">	<span class="number">49</span>,  <span class="number">64</span>,  <span class="number">78</span>,  <span class="number">87</span>, <span class="number">103</span>, <span class="number">121</span>, <span class="number">120</span>, <span class="number">101</span>,</div><div class="line">	<span class="number">72</span>,  <span class="number">92</span>,  <span class="number">95</span>,  <span class="number">98</span>, <span class="number">112</span>, <span class="number">100</span>, <span class="number">103</span>,  <span class="number">99</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>色度量化表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 色度量化表</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Chrominance_Quantization_Table[<span class="number">64</span>] = &#123;</div><div class="line">	<span class="number">17</span>,  <span class="number">18</span>,  <span class="number">24</span>,  <span class="number">47</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">18</span>,  <span class="number">21</span>,  <span class="number">26</span>,  <span class="number">66</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">24</span>,  <span class="number">26</span>,  <span class="number">56</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">47</span>,  <span class="number">66</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,</div><div class="line">	<span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span>,  <span class="number">99</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>标准直流分量色度亮度哈夫曼表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> Standard_DC_Luminance_NRCodes[] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Standard_DC_Luminance_Values[] = &#123; <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span> &#125;;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> Standard_DC_Chrominance_NRCodes[] = &#123; <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Standard_DC_Chrominance_Values[] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span> &#125;;</div></pre></td></tr></table></figure>
<ul>
<li>标准交流分量色度亮度哈夫曼表</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> Standard_AC_Luminance_NRCodes[] = &#123; <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>,</div><div class="line">	<span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0x7d</span> &#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Standard_AC_Luminance_Values[] = &#123;</div><div class="line">	<span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x11</span>, <span class="number">0x05</span>, <span class="number">0x12</span>,</div><div class="line">	<span class="number">0x21</span>, <span class="number">0x31</span>, <span class="number">0x41</span>, <span class="number">0x06</span>, <span class="number">0x13</span>, <span class="number">0x51</span>, <span class="number">0x61</span>, <span class="number">0x07</span>,</div><div class="line">	<span class="number">0x22</span>, <span class="number">0x71</span>, <span class="number">0x14</span>, <span class="number">0x32</span>, <span class="number">0x81</span>, <span class="number">0x91</span>, <span class="number">0xa1</span>, <span class="number">0x08</span>,</div><div class="line">	<span class="number">0x23</span>, <span class="number">0x42</span>, <span class="number">0xb1</span>, <span class="number">0xc1</span>, <span class="number">0x15</span>, <span class="number">0x52</span>, <span class="number">0xd1</span>, <span class="number">0xf0</span>,</div><div class="line">	<span class="number">0x24</span>, <span class="number">0x33</span>, <span class="number">0x62</span>, <span class="number">0x72</span>, <span class="number">0x82</span>, <span class="number">0x09</span>, <span class="number">0x0a</span>, <span class="number">0x16</span>,</div><div class="line">	<span class="number">0x17</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0x1a</span>, <span class="number">0x25</span>, <span class="number">0x26</span>, <span class="number">0x27</span>, <span class="number">0x28</span>,</div><div class="line">	<span class="number">0x29</span>, <span class="number">0x2a</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x39</span>,</div><div class="line">	<span class="number">0x3a</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x45</span>, <span class="number">0x46</span>, <span class="number">0x47</span>, <span class="number">0x48</span>, <span class="number">0x49</span>,</div><div class="line">	<span class="number">0x4a</span>, <span class="number">0x53</span>, <span class="number">0x54</span>, <span class="number">0x55</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x58</span>, <span class="number">0x59</span>,</div><div class="line">	<span class="number">0x5a</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x68</span>, <span class="number">0x69</span>,</div><div class="line">	<span class="number">0x6a</span>, <span class="number">0x73</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x77</span>, <span class="number">0x78</span>, <span class="number">0x79</span>,</div><div class="line">	<span class="number">0x7a</span>, <span class="number">0x83</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x86</span>, <span class="number">0x87</span>, <span class="number">0x88</span>, <span class="number">0x89</span>,</div><div class="line">	<span class="number">0x8a</span>, <span class="number">0x92</span>, <span class="number">0x93</span>, <span class="number">0x94</span>, <span class="number">0x95</span>, <span class="number">0x96</span>, <span class="number">0x97</span>, <span class="number">0x98</span>,</div><div class="line">	<span class="number">0x99</span>, <span class="number">0x9a</span>, <span class="number">0xa2</span>, <span class="number">0xa3</span>, <span class="number">0xa4</span>, <span class="number">0xa5</span>, <span class="number">0xa6</span>, <span class="number">0xa7</span>,</div><div class="line">	<span class="number">0xa8</span>, <span class="number">0xa9</span>, <span class="number">0xaa</span>, <span class="number">0xb2</span>, <span class="number">0xb3</span>, <span class="number">0xb4</span>, <span class="number">0xb5</span>, <span class="number">0xb6</span>,</div><div class="line">	<span class="number">0xb7</span>, <span class="number">0xb8</span>, <span class="number">0xb9</span>, <span class="number">0xba</span>, <span class="number">0xc2</span>, <span class="number">0xc3</span>, <span class="number">0xc4</span>, <span class="number">0xc5</span>,</div><div class="line">	<span class="number">0xc6</span>, <span class="number">0xc7</span>, <span class="number">0xc8</span>, <span class="number">0xc9</span>, <span class="number">0xca</span>, <span class="number">0xd2</span>, <span class="number">0xd3</span>, <span class="number">0xd4</span>,</div><div class="line">	<span class="number">0xd5</span>, <span class="number">0xd6</span>, <span class="number">0xd7</span>, <span class="number">0xd8</span>, <span class="number">0xd9</span>, <span class="number">0xda</span>, <span class="number">0xe1</span>, <span class="number">0xe2</span>,</div><div class="line">	<span class="number">0xe3</span>, <span class="number">0xe4</span>, <span class="number">0xe5</span>, <span class="number">0xe6</span>, <span class="number">0xe7</span>, <span class="number">0xe8</span>, <span class="number">0xe9</span>, <span class="number">0xea</span>,</div><div class="line">	<span class="number">0xf1</span>, <span class="number">0xf2</span>, <span class="number">0xf3</span>, <span class="number">0xf4</span>, <span class="number">0xf5</span>, <span class="number">0xf6</span>, <span class="number">0xf7</span>, <span class="number">0xf8</span>,</div><div class="line">	<span class="number">0xf9</span>, <span class="number">0xfa</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span> Standard_AC_Chrominance_NRCodes[] = &#123; <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>,</div><div class="line">	<span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0x77</span> &#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Standard_AC_Chrominance_Values[] = &#123;</div><div class="line">	<span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x11</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x21</span>,</div><div class="line">	<span class="number">0x31</span>, <span class="number">0x06</span>, <span class="number">0x12</span>, <span class="number">0x41</span>, <span class="number">0x51</span>, <span class="number">0x07</span>, <span class="number">0x61</span>, <span class="number">0x71</span>,</div><div class="line">	<span class="number">0x13</span>, <span class="number">0x22</span>, <span class="number">0x32</span>, <span class="number">0x81</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x42</span>, <span class="number">0x91</span>,</div><div class="line">	<span class="number">0xa1</span>, <span class="number">0xb1</span>, <span class="number">0xc1</span>, <span class="number">0x09</span>, <span class="number">0x23</span>, <span class="number">0x33</span>, <span class="number">0x52</span>, <span class="number">0xf0</span>,</div><div class="line">	<span class="number">0x15</span>, <span class="number">0x62</span>, <span class="number">0x72</span>, <span class="number">0xd1</span>, <span class="number">0x0a</span>, <span class="number">0x16</span>, <span class="number">0x24</span>, <span class="number">0x34</span>,</div><div class="line">	<span class="number">0xe1</span>, <span class="number">0x25</span>, <span class="number">0xf1</span>, <span class="number">0x17</span>, <span class="number">0x18</span>, <span class="number">0x19</span>, <span class="number">0x1a</span>, <span class="number">0x26</span>,</div><div class="line">	<span class="number">0x27</span>, <span class="number">0x28</span>, <span class="number">0x29</span>, <span class="number">0x2a</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>, <span class="number">0x38</span>,</div><div class="line">	<span class="number">0x39</span>, <span class="number">0x3a</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x45</span>, <span class="number">0x46</span>, <span class="number">0x47</span>, <span class="number">0x48</span>,</div><div class="line">	<span class="number">0x49</span>, <span class="number">0x4a</span>, <span class="number">0x53</span>, <span class="number">0x54</span>, <span class="number">0x55</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x58</span>,</div><div class="line">	<span class="number">0x59</span>, <span class="number">0x5a</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x68</span>,</div><div class="line">	<span class="number">0x69</span>, <span class="number">0x6a</span>, <span class="number">0x73</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x77</span>, <span class="number">0x78</span>,</div><div class="line">	<span class="number">0x79</span>, <span class="number">0x7a</span>, <span class="number">0x82</span>, <span class="number">0x83</span>, <span class="number">0x84</span>, <span class="number">0x85</span>, <span class="number">0x86</span>, <span class="number">0x87</span>,</div><div class="line">	<span class="number">0x88</span>, <span class="number">0x89</span>, <span class="number">0x8a</span>, <span class="number">0x92</span>, <span class="number">0x93</span>, <span class="number">0x94</span>, <span class="number">0x95</span>, <span class="number">0x96</span>,</div><div class="line">	<span class="number">0x97</span>, <span class="number">0x98</span>, <span class="number">0x99</span>, <span class="number">0x9a</span>, <span class="number">0xa2</span>, <span class="number">0xa3</span>, <span class="number">0xa4</span>, <span class="number">0xa5</span>,</div><div class="line">	<span class="number">0xa6</span>, <span class="number">0xa7</span>, <span class="number">0xa8</span>, <span class="number">0xa9</span>, <span class="number">0xaa</span>, <span class="number">0xb2</span>, <span class="number">0xb3</span>, <span class="number">0xb4</span>,</div><div class="line">	<span class="number">0xb5</span>, <span class="number">0xb6</span>, <span class="number">0xb7</span>, <span class="number">0xb8</span>, <span class="number">0xb9</span>, <span class="number">0xba</span>, <span class="number">0xc2</span>, <span class="number">0xc3</span>,</div><div class="line">	<span class="number">0xc4</span>, <span class="number">0xc5</span>, <span class="number">0xc6</span>, <span class="number">0xc7</span>, <span class="number">0xc8</span>, <span class="number">0xc9</span>, <span class="number">0xca</span>, <span class="number">0xd2</span>,</div><div class="line">	<span class="number">0xd3</span>, <span class="number">0xd4</span>, <span class="number">0xd5</span>, <span class="number">0xd6</span>, <span class="number">0xd7</span>, <span class="number">0xd8</span>, <span class="number">0xd9</span>, <span class="number">0xda</span>,</div><div class="line">	<span class="number">0xe2</span>, <span class="number">0xe3</span>, <span class="number">0xe4</span>, <span class="number">0xe5</span>, <span class="number">0xe6</span>, <span class="number">0xe7</span>, <span class="number">0xe8</span>, <span class="number">0xe9</span>,</div><div class="line">	<span class="number">0xea</span>, <span class="number">0xf2</span>, <span class="number">0xf3</span>, <span class="number">0xf4</span>, <span class="number">0xf5</span>, <span class="number">0xf6</span>, <span class="number">0xf7</span>, <span class="number">0xf8</span>,</div><div class="line">	<span class="number">0xf9</span>, <span class="number">0xfa</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>计算哈夫曼编码</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> JpegEncoder::_computeHuffmanTable(<span class="keyword">const</span> <span class="keyword">char</span>* nr_codes,</div><div class="line">	<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>* std_table, BitString* huffman_table) &#123;</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> pos_in_table = <span class="number">0</span>;</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> code_value = <span class="number">0</span>;</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">16</span>; k++) &#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= nr_codes[k<span class="number">-1</span>]; j++) &#123;</div><div class="line">			huffman_table[std_table[pos_in_table]].value = code_value;</div><div class="line">			huffman_table[std_table[pos_in_table]].length = k;</div><div class="line">			pos_in_table++;</div><div class="line">			code_value++;</div><div class="line">		&#125;</div><div class="line">		code_value &lt;&lt;= <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>初始化量化表<br>根据传入的参数调整量化程度，因为这个量化过程是有损的。所以其结果对图像质量有较大影响。</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 初始化量化表</span></div><div class="line"><span class="keyword">void</span> JpegEncoder::_initQualityTables(<span class="keyword">int</span> quality_scale) &#123;</div><div class="line">	<span class="keyword">if</span>(quality_scale &lt;= <span class="number">0</span>) &#123;</div><div class="line">		quality_scale = <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(quality_scale &gt;= <span class="number">100</span>) &#123;</div><div class="line">		quality_scale = <span class="number">99</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</div><div class="line">		<span class="keyword">int</span> temp = ((<span class="keyword">int</span>)(Luminance_Quantization_Table[i] * quality_scale + <span class="number">50</span>) / <span class="number">100</span>);</div><div class="line">		<span class="keyword">if</span> (temp &lt;= <span class="number">0</span>) &#123;</div><div class="line">			temp = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (temp &gt; <span class="number">0xFF</span>) &#123;</div><div class="line">			temp = <span class="number">0xFF</span>;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		m_YTable[ZigZag[i]] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)temp;</div><div class="line"></div><div class="line">		temp = ((<span class="keyword">int</span>)(Chrominance_Quantization_Table[i] * quality_scale + <span class="number">50</span>) / <span class="number">100</span>);</div><div class="line">		<span class="keyword">if</span> (temp&lt;=<span class="number">0</span>) &#123;</div><div class="line">			temp = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (temp&gt;<span class="number">0xFF</span>) &#123;</div><div class="line">			temp = <span class="number">0xFF</span>;</div><div class="line">		&#125;</div><div class="line">		m_CbCrTable[ZigZag[i]] = (<span class="keyword">unsigned</span> <span class="keyword">char</span>)temp;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>写文件头<br>到这里文件头基本已经确定，可以写入JPEG文件了。</p>
</li>
<li><p>RGB 转化成 YCbCr<br>每读取一个 8*8 的方块区域，就进行颜色空间转化。转换式和代码如下：</p>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Y= <span class="number">0.299</span>*R + <span class="number">0.587</span>*G + <span class="number">0.114</span>*B</div><div class="line">C_b= <span class="number">-0.168</span>*R – <span class="number">0.331</span>*G + <span class="number">0.449</span>*B</div><div class="line">C_r= <span class="number">0.5</span>*R – <span class="number">0.419</span>*G – <span class="number">0.018</span>*B </div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">void</span> JpegEncoder::_convertColorSpace(<span class="keyword">int</span> xPos, <span class="keyword">int</span> yPos, <span class="keyword">char</span>* yData, <span class="keyword">char</span>* cbData, <span class="keyword">char</span>* crData) &#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; <span class="number">8</span>; y++) &#123;</div><div class="line">		<span class="comment">// 跳行</span></div><div class="line">		<span class="keyword">unsigned</span> <span class="keyword">char</span>* p = m_rgbBuffer + (y + yPos) * m_width * <span class="number">3</span> + xPos * <span class="number">3</span>;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">8</span>; x++) &#123;</div><div class="line">			<span class="keyword">unsigned</span> <span class="keyword">char</span> B = *p++;</div><div class="line">			<span class="keyword">unsigned</span> <span class="keyword">char</span> G = *p++;</div><div class="line">			<span class="keyword">unsigned</span> <span class="keyword">char</span> R = *p++;</div><div class="line"></div><div class="line">			yData[y * <span class="number">8</span> + x] = (<span class="keyword">char</span>)(<span class="number">0.299f</span> * R + <span class="number">0.587f</span> * G + <span class="number">0.114f</span> * B - <span class="number">128</span>);</div><div class="line">			<span class="comment">// yData[y * 8 + x] = 0;</span></div><div class="line">			cbData[y * <span class="number">8</span> + x] = (<span class="keyword">char</span>)(<span class="number">-0.1687f</span> * R - <span class="number">0.3313f</span> * G + <span class="number">0.5f</span> * B );</div><div class="line">			<span class="comment">// cbData[y * 8 + x] = 0;</span></div><div class="line">			crData[y * <span class="number">8</span> + x] = (<span class="keyword">char</span>)(<span class="number">0.5f</span> * R - <span class="number">0.4187f</span> * G - <span class="number">0.0813f</span> * B);</div><div class="line">			<span class="comment">// crData[y * 8 + x] = 0;</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>DCT变换和量化<br>DCT变换式和量化代码：<br><img src="/2017/06/13/BMP2JPEG/dct.png" alt=""></li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// DCT变化 + 量化（未优化）</span></div><div class="line"><span class="keyword">void</span> JpegEncoder::_forward_DCT(<span class="keyword">const</span> <span class="keyword">char</span>* channel_data, <span class="keyword">short</span>* fdc_data) &#123;</div><div class="line">	<span class="keyword">const</span> <span class="keyword">float</span> PI = <span class="number">3.1415926f</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v &lt; <span class="number">8</span>; v++) &#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> u = <span class="number">0</span>; u &lt; <span class="number">8</span>; u++) &#123;</div><div class="line">			<span class="keyword">float</span> alpha_u = (u==<span class="number">0</span>) ? <span class="number">1</span> / <span class="built_in">sqrt</span>(<span class="number">8.0f</span>) : <span class="number">0.5f</span>;</div><div class="line">			<span class="keyword">float</span> alpha_v = (v==<span class="number">0</span>) ? <span class="number">1</span> / <span class="built_in">sqrt</span>(<span class="number">8.0f</span>) : <span class="number">0.5f</span>;</div><div class="line"></div><div class="line">			<span class="keyword">float</span> temp = <span class="number">0.f</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; <span class="number">8</span>; x++) &#123;</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> y = <span class="number">0</span>; y &lt; <span class="number">8</span>; y++) &#123;</div><div class="line">					<span class="keyword">float</span> data = channel_data[y * <span class="number">8</span> + x];</div><div class="line"></div><div class="line">					data *= <span class="built_in">cos</span>((<span class="number">2</span> * x + <span class="number">1</span>) * u * PI / <span class="number">16.0f</span>);</div><div class="line">					data *= <span class="built_in">cos</span>((<span class="number">2</span> * y + <span class="number">1</span>) * v * PI / <span class="number">16.0f</span>);</div><div class="line"></div><div class="line">					temp += data;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			temp *= alpha_u * alpha_v / m_YTable[ZigZag[v * <span class="number">8</span> + u]];</div><div class="line">			fdc_data[ZigZag[v*<span class="number">8</span>+u]] = (<span class="keyword">short</span>) ((<span class="keyword">short</span>)(temp + <span class="number">16384.5</span>) - <span class="number">16384</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li><p>哈夫曼编码</p>
<ul>
<li>直流分量差分编码</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> 	<span class="comment">// encode DC</span></div><div class="line"><span class="keyword">int</span> dcDiff = (<span class="keyword">int</span>)(DU[<span class="number">0</span>] - prevDC);</div><div class="line">prevDC = DU[<span class="number">0</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span> (dcDiff == <span class="number">0</span>) &#123;</div><div class="line">	outputBitString[index++] = HTDC[<span class="number">0</span>];</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	BitString bs = _getBitCode(dcDiff);</div><div class="line"></div><div class="line">	outputBitString[index++] = HTDC[bs.length];</div><div class="line">	outputBitString[index++] = bs;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>交流分量游长编码</li>
</ul>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"> 	<span class="comment">// encode ACs</span></div><div class="line"><span class="keyword">int</span> endPos=<span class="number">63</span>; <span class="comment">//end0pos = first element in reverse order != 0</span></div><div class="line"><span class="keyword">while</span>((endPos &gt; <span class="number">0</span>) &amp;&amp; (DU[endPos] == <span class="number">0</span>)) &#123;</div><div class="line">	endPos--;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= endPos; ) &#123;</div><div class="line">	<span class="keyword">int</span> startPos = i;</div><div class="line"></div><div class="line">	<span class="keyword">while</span>((DU[i] == <span class="number">0</span>) &amp;&amp; (i &lt;= endPos)) &#123;</div><div class="line">		i++;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> zeroCounts = i - startPos;</div><div class="line">	<span class="keyword">if</span> (zeroCounts &gt;= <span class="number">16</span>) &#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= zeroCounts / <span class="number">16</span>; j++) &#123;</div><div class="line">			outputBitString[index++] = SIXTEEN_ZEROS;</div><div class="line">		&#125;</div><div class="line">		zeroCounts = zeroCounts % <span class="number">16</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	BitString bs = _getBitCode(DU[i]);</div><div class="line"></div><div class="line">	outputBitString[index++] = HTAC[(zeroCounts &lt;&lt; <span class="number">4</span>) | bs.length];</div><div class="line">	outputBitString[index++] = bs;</div><div class="line">	i++;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>对三个通道进行以上同样的操作。（DCT变化-哈夫曼编码-写入）</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">BitString outputBitString[<span class="number">128</span>];</div><div class="line"><span class="keyword">int</span> bitStringCounts;</div><div class="line"></div><div class="line"><span class="comment">// Y通道压缩</span></div><div class="line">_forward_DCT(yData, yQuant);</div><div class="line">_doHuffmanEncoding(yQuant, prev_DC_Y, m_Y_DC_Huffman_Table, m_Y_AC_Huffman_Table,</div><div class="line">	outputBitString, bitStringCounts);</div><div class="line">_write_bitstring_(outputBitString, bitStringCounts, newByte, newBytePos, fp);</div><div class="line"></div><div class="line"><span class="comment">// Cb通道压缩</span></div><div class="line">_forward_DCT(cbData, cbQuant);</div><div class="line">_doHuffmanEncoding(cbQuant, prev_DC_Cb, m_CbCr_DC_Huffman_Table, m_CbCr_AC_Huffman_Table,</div><div class="line">	outputBitString, bitStringCounts);</div><div class="line">_write_bitstring_(outputBitString, bitStringCounts, newByte, newBytePos, fp);</div><div class="line"></div><div class="line"><span class="comment">// Cr通道压缩</span></div><div class="line">_forward_DCT(crData, crQuant);</div><div class="line">_doHuffmanEncoding(crQuant, prev_DC_Cr, m_CbCr_DC_Huffman_Table, m_CbCr_AC_Huffman_Table,</div><div class="line">	outputBitString, bitStringCounts);</div><div class="line">_write_bitstring_(outputBitString, bitStringCounts, newByte, newBytePos, fp);</div></pre></td></tr></table></figure>
<p>整个流程就是如下图所示：<br><img src="/2017/06/13/BMP2JPEG/t.png" alt=""></p>
<h3 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h3><p>测试图片 pic1.bmp<br><img src="/2017/06/13/BMP2JPEG/pic1.bmp" alt=""></p>
<p>16进制<br><img src="/2017/06/13/BMP2JPEG/bmp0x.png" alt=""></p>
<p>测试代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> <span class="keyword">char</span>* inputFileName = <span class="string">"pic1.bmp"</span>;</div><div class="line"></div><div class="line">JpegEncoder encoder;</div><div class="line"><span class="comment">// 读取BMP格式的文件</span></div><div class="line"><span class="keyword">if</span>(!encoder.readFromBMP(inputFileName)) &#123;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 将BMP格式的文件按照JPEG标准压缩成JPEG文件</span></div><div class="line"><span class="keyword">if</span>(!encoder.encodeToJPG(<span class="string">"out.jpeg"</span>, <span class="number">50</span>)) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"jpg\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>读取的BMP文件信息，大小和尺寸都符合原图<br><img src="/2017/06/13/BMP2JPEG/bmpinfo.png" alt=""></p>
<p>测试结果 out.jpeg<br><img src="/2017/06/13/BMP2JPEG/ybr.jpeg" alt=""></p>
<p>十六进制，可以和标准格式比较确实是通过BMP转成了JPEG格式<br><img src="/2017/06/13/BMP2JPEG/jpeg0x.png" alt=""></p>
<p><img src="/2017/06/13/BMP2JPEG/size.png" alt=""><br>可以看到，压缩效果还是比较比较明显的，但是编码性能不是最好的，没有对数据前期进行优化，效率只是中规中矩。<br>下面介绍对流程和结果的测试分析<br>过程流程：<br><img src="/2017/06/13/BMP2JPEG/flowchart.png" alt=""></p>
<p>分析为什么转换成YCbCr域对色域的压缩会让人接受：<br>从RGB到YCbCr的转换公式我们可以分析出Y所占比重较高，说明应该存储的细节相对较多，和人眼对亮度更加敏感符合。那么事实是否如此？ <br><br><img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/y.jpeg" width="240" height="240"> <img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/b.jpeg" width="240" height="240"> <img src="https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/r.jpeg" width="240" height="240"></p>
<p>从左到右依次是 Y（72.8k），Cb（37.4k），Cr（33.9k）分量，从光感上说，明显是Y的灰度图像给出了细节，其它两个分量只是给出色彩，没有细节。接着从大小分析也和我们的预测符合，大概比例是 2：1：1，说明存储的细节越多所需的空间自然越大。<br>接下来对BMP原始通道RGB加扰动和YCbCr加相同的扰动，对图像的影响又会怎样？</p>
<p><img src="/2017/06/13/BMP2JPEG/rgb.jpeg" alt=""> <img src="/2017/06/13/BMP2JPEG/ybr.jpeg" alt=""><br>从左到右一次是在RGB通道和YCbCr通道加干扰。可以看到RGB收干扰的程度更大，原因不大好用数学分析，我觉得很可能是RGB通道对干扰是没有减弱直接进入通道转换，而YCrCb则是在色度通道进行压缩了，同时也是对干扰的舍弃，所以效果比较好。</p>
<p>下面分析为什么量化矩阵对结果会有很大影响，可以做一个实验，改变生成量化矩阵的算法，看看结果如何。<br><img src="/2017/06/13/BMP2JPEG/q1.jpeg" alt=""> <img src="/2017/06/13/BMP2JPEG/q2.jpeg" alt=""></p>
<p>这两张的量化程度不同，但是可以看到的是他们都有或多或少的呈色块显示迹象，所以应该存储的空间应该是很小的。<br><img src="/2017/06/13/BMP2JPEG/qsize.png" alt=""><br>结果也确实如此，回到问题，我们的量化矩阵没有优化，造成数值过大，在量化过程中，导致过多数为0，也就是那些高频分量，而高频正是细节的体现，失去高频自然就失去了细节。所以量化矩阵的取值直接关系到了生成图像的品质。</p>
<p>以上是我对BMP转换成JPEG的过程分析，同时也辅以代码加以实现和测试。对于JPEG的解码过程那就是过程的逆过程了，但是由于编码是有损的，而且编码表量化表都是有转型损失的，所以解码之后的图像也会有部分损失。着呢个过程和读取解码BMP一样。先读取文件头，接下来初始化表，再就是直接读取数据根据表解码出YCbCr的值，反量化之后通过DCT逆变换还原。</p>
<p>其中的源码是<a href="https://thecodeway.com/blog/?p=522" target="_blank" rel="external">thecodeway</a>提供的，欢迎大家去他的 Blog 看看他的图像分析文章，我只是对他的代码加以自己的理解。</p>
<p>最后：如有不足，欢迎指正，共同进步。</p>
<p>多谢阅读</p>
<ul>
<li>参考资料<br>[1] 足迹 : <a href="https://www.cnblogs.com/Matrix_Yao/archive/2009/12/02/1615295.html" target="_blank" rel="external">https://www.cnblogs.com/Matrix_Yao/archive/2009/12/02/1615295.html</a> <br><br>[2] lakeone : <a href="https://www.cnblogs.com/lakeone/p/3596996.html" target="_blank" rel="external">https://www.cnblogs.com/lakeone/p/3596996.html</a> <br><br>[3] thecodeway : <a href="https://thecodeway.com/blog/?p=522" target="_blank" rel="external">https://thecodeway.com/blog/?p=522</a> <br><br>[4] SoC Design Lab <a href="http://twins.ee.nctu.edu.tw/courses/soclab_04/lab_hw_pdf/proj1_jpeg_introduction.pdf" target="_blank" rel="external">http://twins.ee.nctu.edu.tw/courses/soclab_04/lab_hw_pdf/proj1_jpeg_introduction.pdf</a> <br></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/Algo-Math/tree/master/bmp2jpeg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;由于最近做了图像相关的学习，所以想再深入点，但是自己的知识有限，目前只能把自己所学的通过这个小小的实验来加深理解。参考大牛的 Blog 加上自己亲手实践，写了这篇文章。以后还会继续添加图像处理的相关知识。&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/y.jpeg&quot; width=&quot;240&quot; height=&quot;240&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/b.jpeg&quot; width=&quot;240&quot; height=&quot;240&quot;&gt; &lt;img src=&quot;https://raw.githubusercontent.com/mk43/Algo-Math/master/bmp2jpeg/r.jpeg&quot; width=&quot;240&quot; height=&quot;240&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Algo" scheme="http://fitzeng.org/tags/Algo/"/>
    
      <category term="Math" scheme="http://fitzeng.org/tags/Math/"/>
    
      <category term="C/C++" scheme="http://fitzeng.org/tags/C-C/"/>
    
      <category term="图像处理" scheme="http://fitzeng.org/tags/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Android 单元测试和 Robolectric 源码解析</title>
    <link href="http://fitzeng.org/2017/05/14/Android%20%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%92%8C%20Robolectric%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    <id>http://fitzeng.org/2017/05/14/Android 单元测试和 Robolectric 源码解析/</id>
    <published>2017-05-13T16:00:00.000Z</published>
    <updated>2017-07-01T10:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>作为一个 Android 开发的程序员，最痛苦的事情其实莫过于测试了，龟速的模拟器和麻烦的手机，基本上每测试一次都要浪费 1-2 min 去加载程序。而有了 Robolectric 这些就可以避免了。至于 Robolectric 的介绍推荐大家看看<a href="http://robolectric.org/" target="_blank" rel="external">官网</a> （其中的用户指导是很好的学习资料）。我们用他的很大一个原因是他不需要再去把程序加载到 Android 手机或者模拟器中运行，他有自己的实现，能够调用 Android 中的很多库，下面的源码分析会提及。可是 Android Studio 对 Robolectric 不是很友好，而且在 Google 的官方教程中的测试工具也不是这个。。。同时 Robolectric 对于 Android Studio 的教程介绍似乎还是停留在 1.x 阶段，但是在 2.x 中的使用略有不同。</p>
<p>讲了这么多，所以 Robolectric 和 Junit 4 有什么不同？不都是测试吗？<br>我的理解是 Junit 4 与 Robolectric 的关系和 Java 与 Android 的关系差不多。毕竟 Robolectric 是个第三方的测试库，其中很多还是要用到 Junit 的。</p>
<p>好了，基本的介绍完成了，下面开始使用，但是使用不是我们这次的重点，重点是源码分析。但是源码分析也是建立在知道使用的基础上，如果你之前没有使用过，推荐你看官方的 user guide。或者这两篇 Blog。</p>
<ul>
<li><a href="http://www.jianshu.com/p/9d988a2f8ff7#" target="_blank" rel="external">Android单元测试框架Robolectric3.0介绍(一)</a></li>
<li><a href="http://www.jianshu.com/p/3aa0e4efcfd3" target="_blank" rel="external">Android单元测试框架Robolectric3.0介绍(二)</a></li>
</ul>
<a id="more"></a>
<h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>其实前面 Blog 的介绍可能会有点偏差，现在的 Android Studio 2.3.1 在建立工程时除了自己的源码包，还有两个，分别是 test 和 androidTest。经过我的尝试， test 包下的测试文件可以直接测试，而 androidTest下面的还是要 android 运行环境的。个人更倾向于一个用做单元测试一个用于集成测试这种理解。所以在导入依赖包时要注意了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>. testCompile <span class="string">"org.robolectric:robolectric:3.3.2"</span></div><div class="line"><span class="number">2</span>. androidTestCompile <span class="string">"org.robolectric:robolectric:3.3.2"</span></div></pre></td></tr></table></figure>
<p>第一种对应的测试文件要放在 test 包下，而第二种就是放在 androidTest 包下，如果搞错，你的 Robolectric 中的测试方法是无法使用的。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(include: ['*.jar'], dir: 'libs')</div><div class="line">    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', &#123;</div><div class="line">        exclude group: 'com.android.support', module: 'support-annotations'</div><div class="line">    &#125;)</div><div class="line">    compile 'com.android.support:appcompat-v7:24.2.1'</div><div class="line">    compile 'com.android.support.constraint:constraint-layout:1.0.2'</div><div class="line">    testCompile 'junit:junit:4.12'</div><div class="line">    testCompile 'org.robolectric:robolectric:3.3.2'</div><div class="line">    sourceCompatibility = 1.8</div><div class="line">    targetCompatibility = 1.8</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>至于运行的话，大家可以直接右键文件，title bar 点击运行或者在 cmd 运行都行。但是有一点要注意，一定要配置文件的 working directory，不然找不到 manifest.xml 等文件。</p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>写一个如下布局</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">ScrollView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"org.fitzeng.robolectrictest.MainActivity"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/et"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"@string/app_name"</span></div><div class="line">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/btn_et"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"EditText Test"</span></div><div class="line">            <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span></div><div class="line">            <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> EditText editText;</div><div class="line">    <span class="keyword">private</span> Button btnEt;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initViews();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        editText = (EditText) findViewById(R.id.et);</div><div class="line">        btnEt = (Button) findViewById(R.id.btn_et);</div><div class="line">        btnEt.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.btn_et: &#123;</div><div class="line">                btnEt.setText(editText.getText().toString());</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到，这里就是测试一下点击事件，看看点击之后是否能获取 EditText 中的文本内容。</p>
<p>下面开始写测试代码，注意之前如果配置的是 testCompile 的话一定要把测试文件建在 test 包下，不然无法导入 Robolectric 。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RunWith</span>(RobolectricTestRunner.class)</div><div class="line"><span class="meta">@Config</span>(constants = BuildConfig.class, sdk = <span class="number">24</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivityTest</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Button btnEt;</div><div class="line">    <span class="keyword">private</span> EditText editText;</div><div class="line"></div><div class="line">    <span class="meta">@Before</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// get mainActivity obj</span></div><div class="line">        MainActivity mainActivity = Robolectric.setupActivity(MainActivity.class);</div><div class="line">        <span class="comment">// get button</span></div><div class="line">        btnEt = (Button) mainActivity.findViewById(R.id.btn_et);</div><div class="line">        <span class="comment">// get edittext</span></div><div class="line">        editText = (EditText) mainActivity.findViewById(R.id.et);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testMainActivity</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// simulate click event</span></div><div class="line">        btnEt.performClick();</div><div class="line">        <span class="comment">// get button content</span></div><div class="line">        String expectedContent = btnEt.getText().toString();</div><div class="line">        <span class="comment">// get edittext content</span></div><div class="line">        String actualContent = editText.getText().toString();</div><div class="line">        <span class="comment">// compare expectedContent and actualContent</span></div><div class="line">        Assert.assertEquals(expectedContent, actualContent);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面的代码我都加了注释，基本过程很清楚了，这里点击事件是只要点击，我们就把 EditText 中的文本替换 Button 的文本。<br>测试结果如下：<br><img src="/2017/05/14/Android 单元测试和 Robolectric 源码解析/testresult.png" alt=""><br>可以看到花的 27s 完成了点击测试，很方便。大家可以试试测试失败会是什么情况。</p>
<p>这里并没有开启模拟器，但是却完成了整个点击事件并进行了检测。事件虽小，但是意义很大。意味着我们不需要开启模拟器也可以对 Android 程序进行测试了。</p>
<h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><p>在开始这个流程的分析之前，如果你之前对 Junit 没有任何了解，可以看看 <a href="https://www.ibm.com/developerworks/cn/java/j-lo-junit-src/" target="_blank" rel="external">Junit 的分析</a>，这里仿照 Junit 对 Robolectric 进行类比分析。<br>可以找到 Junit 的 main 入口<br><img src="/2017/05/14/Android 单元测试和 Robolectric 源码解析/junitmain.png" alt=""><br>下面一步一步分析就好了。</p>
<p>但是 Robolectric 代码量实在太大，去里面找东西实在太难，但是凭借程序员的直觉，相信大家最先找到的有价值的文件可能是下面几个：<br><img src="/2017/05/14/Android 单元测试和 Robolectric 源码解析/robolectricfile.png" alt=""><br>其中看到测试生命周期是不是眼前一亮？<br><img src="/2017/05/14/Android 单元测试和 Robolectric 源码解析/robolectricclass.png" alt=""><br>还有 Robolectric 类里面的函数，包含了 Fragment， AttributeSet， Activity， Service， IntentService， ContentProvider 等等熟悉的内容。可以肯定，这里就是“宇宙中心”。上面的测试代码其实也验证了这个观点。<br>再看看 RobolectricTestRunner 这个类，还是和 Junit 4 有一腿的。里面的方法无非就是做一些初始化的工作，注释说的很明确了，就是提供一个模拟的 Android 运行时环境（和前面说的加载 manifest文件有关），这也是为什么可以直接在没有模拟器的情况下进行一些模拟点击测试的原因。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Installs a &#123;<span class="doctag">@link</span> SandboxClassLoader&#125; and &#123;<span class="doctag">@link</span> ResourceTable&#125; in order to</div><div class="line"> * provide a simulation of the Android runtime environment.</div><div class="line"> */</div><div class="line"><span class="comment">// public class RobolectricTestRunner extends SandboxTestRunner</span></div><div class="line"><span class="comment">// public class SandboxTestRunner extends BlockJUnit4ClassRunner</span></div><div class="line"><span class="comment">// public class BlockJUnit4ClassRunner extends ParentRunner&lt;FrameworkMethod&gt;</span></div><div class="line"><span class="comment">// public abstract class ParentRunner&lt;T&gt; extends Runner implements Filterable,Sortable</span></div><div class="line"><span class="comment">// public abstract class Runner implements Describable</span></div></pre></td></tr></table></figure>
<p>这样没有实例只看源码有点不知道往哪个方向解析，所以我们开始从源码角度看看前面测试过程怎么执行的来加深理解。</p>
<p>最开始是调用了 Robolectric.setupActivity(Class<t>) 那么我们就从这里入手。</t></p>
<h5 id="step-1-Robolectric-setupActivity-Class"><a href="#step-1-Robolectric-setupActivity-Class" class="headerlink" title="step 1 : Robolectric.setupActivity(Class)"></a>step 1 : Robolectric.setupActivity(Class<t>)</t></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Activity&gt; <span class="function">T <span class="title">setupActivity</span><span class="params">(Class&lt;T&gt; activityClass)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> buildActivity(activityClass).setup().get();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>首先是获取 Activity 对象，正好 setUpActivity(Class<t>) 是返回一个 Activity 对象的。那么是如何获取到的呢？那就要看源码具体实现了。大概过程是建立一个 Activity 然后 setup 一下再获取对象。 </t></p>
<h5 id="step-2-1-Robolectric-buildActivity-Class"><a href="#step-2-1-Robolectric-buildActivity-Class" class="headerlink" title="step 2.1 : Robolectric.buildActivity(Class)"></a>step 2.1 : Robolectric.buildActivity(Class<t>)</t></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Activity&gt; <span class="function">ActivityController&lt;T&gt; <span class="title">buildActivity</span><span class="params">(Class&lt;T&gt; activityClass)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> buildActivity(activityClass, <span class="keyword">null</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="step-2-2-Robolectric-buildActivity-Class-Intent"><a href="#step-2-2-Robolectric-buildActivity-Class-Intent" class="headerlink" title="step 2.2 : Robolectric.buildActivity(Class, Intent)"></a>step 2.2 : Robolectric.buildActivity(Class<t>, Intent)</t></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Activity&gt; <span class="function">ActivityController&lt;T&gt; <span class="title">buildActivity</span><span class="params">(Class&lt;T&gt; activityClass, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> ActivityController.of(getShadowsAdapter(), ReflectionHelpers.callConstructor(activityClass), intent);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>到这里就可以看到利用这个类名和 Intent （null），采用反射机制可以获取这个类的对象。有兴趣的还可以深究下去。</p>
<h5 id="step-3-1-Robolectric-buildActivity-activityClass-setup"><a href="#step-3-1-Robolectric-buildActivity-activityClass-setup" class="headerlink" title="step 3.1 : Robolectric.buildActivity(activityClass).setup()"></a>step 3.1 : Robolectric.buildActivity(activityClass).setup()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* Calls the same lifecycle methods on the Activity called by Android the first time the Activity is created.</div><div class="line">*</div><div class="line">* <span class="doctag">@return</span> Activity controller instance.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">setup</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> create().start().postCreate(<span class="keyword">null</span>).resume().visible();</div><div class="line">&#125;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the same lifecycle methods on the Activity called by Android when an Activity is restored from previously saved state.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> savedInstanceState Saved instance state.</div><div class="line"> * <span class="doctag">@return</span> Activity controller instance.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">setup</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> create(savedInstanceState)</div><div class="line">        .start()</div><div class="line">        .restoreInstanceState(savedInstanceState)</div><div class="line">        .postCreate(savedInstanceState)</div><div class="line">        .resume()</div><div class="line">        .visible();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>前面的两个函数的注释很清楚，第一个是 Activity 第一次调用时调用，第二个是 Activity 之前被调用过并且在 Bundle 对象中保存了实例状态，可以将 Bundle 中的数据作为参数直接调用函数加载。返回的是一个 Activity 控制器实例。</p>
<h5 id="step-3-2-setup-gt-create-start-postCreate-null-resume-visible"><a href="#step-3-2-setup-gt-create-start-postCreate-null-resume-visible" class="headerlink" title="step 3.2 : setup() -&gt; create().start().postCreate(null).resume().visible()"></a>step 3.2 : setup() -&gt; create().start().postCreate(null).resume().visible()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">ActivityController.create()</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">create</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> create(<span class="keyword">null</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">create</span><span class="params">(<span class="keyword">final</span> Bundle bundle)</span> </span>&#123;</div><div class="line">    shadowMainLooper.runPaused(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            ReflectionHelpers.callInstanceMethod(Activity.class, component, <span class="string">"performCreate"</span>, from(Bundle.class, bundle));</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ActivityController.start()</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">start</span><span class="params">()</span> </span>&#123;</div><div class="line">    invokeWhilePaused(<span class="string">"performStart"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ActivityController.postCreate(Bundle)</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">postCreate</span><span class="params">(Bundle bundle)</span> </span>&#123;</div><div class="line">    invokeWhilePaused(<span class="string">"onPostCreate"</span>, from(Bundle.class, bundle));</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ActivityController.resume()</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">resume</span><span class="params">()</span> </span>&#123;</div><div class="line">    invokeWhilePaused(<span class="string">"performResume"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ActivityController.visible()</div><div class="line"><span class="function"><span class="keyword">public</span> ActivityController&lt;T&gt; <span class="title">visible</span><span class="params">()</span> </span>&#123;</div><div class="line">    shadowMainLooper.runPaused(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            ReflectionHelpers.setField(component, <span class="string">"mDecor"</span>, component.getWindow().getDecorView());</div><div class="line">            ReflectionHelpers.callInstanceMethod(component, <span class="string">"makeVisible"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    ViewRootImpl root = component.getWindow().getDecorView().getViewRootImpl();</div><div class="line">    <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">// If a test pause thread before creating an activity, root will be null as runPaused is waiting</span></div><div class="line">        <span class="comment">// Related to issue #1582</span></div><div class="line">        Display display = Shadow.newInstanceOf(Display.class);</div><div class="line">        Rect frame = <span class="keyword">new</span> Rect();</div><div class="line">        display.getRectSize(frame);</div><div class="line">        Rect insets = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        <span class="keyword">final</span> RuntimeAdapter runtimeAdapter = RuntimeAdapterFactory.getInstance();</div><div class="line">        runtimeAdapter.callViewRootImplDispatchResized(</div><div class="line">                root, frame, insets, insets, insets, insets, insets, <span class="keyword">true</span>, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里看起来代码量有点多，但是大概意思应该就是为 Activity 提供一个 Android 运行环境的保障。从 Window ， DecorView 之类的就可以确认我们的想法。如果不熟悉的话可以再去了解 Android 的界面绘制过程，这里目前知道这层意思就可以了。</p>
<h5 id="step-4-Robolectric-buildActivity-activityClass-setup-get"><a href="#step-4-Robolectric-buildActivity-activityClass-setup-get" class="headerlink" title="step 4 : Robolectric.buildActivity(activityClass).setup().get()"></a>step 4 : Robolectric.buildActivity(activityClass).setup().get()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> component;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>。。。我看到这里首先的感觉是一脸懵逼，怎么这么简单，我们的预期是返回一个 Activity 对象，也就是一个组件，从意思来看可以理解，但是这个 component 是怎么来的？<br>下面就来慢慢分析。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ComponentController</span>&lt;<span class="title">C</span> <span class="keyword">extends</span> <span class="title">ComponentController</span>&lt;<span class="title">C</span>, <span class="title">T</span>&gt;, <span class="title">T</span>&gt; </span>&#123;</div><div class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> C myself;</div><div class="line">  <span class="keyword">protected</span> T component;</div><div class="line">  <span class="keyword">protected</span> <span class="keyword">final</span> ShadowLooperAdapter shadowMainLooper;</div><div class="line"></div><div class="line">  <span class="keyword">protected</span> Intent intent;</div><div class="line"></div><div class="line">  <span class="keyword">protected</span> <span class="keyword">boolean</span> attached;</div><div class="line"></div><div class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ComponentController</span><span class="params">(ShadowsAdapter shadowsAdapter, T component, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>(shadowsAdapter, component);</div><div class="line">    <span class="keyword">this</span>.intent = intent;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">ComponentController</span><span class="params">(ShadowsAdapter shadowsAdapter, T component)</span> </span>&#123;</div><div class="line">    myself = (C) <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.component = component;</div><div class="line">    shadowMainLooper = shadowsAdapter.getMainLooper();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> component;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到这里我们可以确认的是 component 是来自 ComponentController() 构造函数来进行初始化的，这是你会发祥一个很熟悉的参数 ShadowsAdapter ，看看这个类。看完之后你会发现这其实是一个接口。这时你要思考的是，这些参数怎么来的，不可能凭空产生，肯定是在你的类生成 Activity 组件过程中构造的。看看 step 2.2 中的函数你会发现，第一个就是 getShadowsAdapter()，第二个是 ReflectionHelpers.callConstructor(activityClass)， 是不是发现了点什么，就是从这里开始，埋下了种子。同时 step 3.2 中有<br>component ，发现他就是抽象类 ComponentController 中的变量，而且是 protected 的。那么现在唯一的猜想就是 ActivityController 继承自 ComponentController ，从类的命名来说是很合理的。那么源码是这样的吗？</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// public class ActivityController&lt;T extends Activity&gt; extends org.robolectric.util.ActivityController&lt;T&gt; </span></div><div class="line"><span class="comment">// abstract public class ActivityController&lt;T extends Activity&gt; extends ComponentController&lt;org.robolectric.android.controller.ActivityController&lt;T&gt;, T&gt;</span></div></pre></td></tr></table></figure>
<p>看到这说明我们的想法完全正确！<br>总算弄清楚 component 的身份，但是还是不知道他是怎么生成的？我们的预测是和 Activity 要有关联，目前的分析还看不出来，而且这里的 step 3.2 中的 component 直接作为参数传递了，说明在之前就已经被初始化了，也就是构造函数 ComponentController(ShadowsAdapter shadowsAdapter, T component) 已经被调用了。那么我们还是要回到 step 2.2 中的 ActivityController.of(getShadowsAdapter(), ReflectionHelpers.callConstructor(activityClass), intent) 因为那是 Activity 的消失和 component 出现的临界点。<br>开始看看 of 函数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T extends Activity&gt; <span class="function">ActivityController&lt;T&gt; <span class="title">of</span><span class="params">(ShadowsAdapter shadowsAdapter, T activity, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ActivityController&lt;&gt;(shadowsAdapter, activity, intent).attach();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">ActivityController</span><span class="params">(ShadowsAdapter shadowsAdapter, T activity, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>(shadowsAdapter, activity, intent);</div><div class="line">    <span class="keyword">this</span>.shadowsAdapter = shadowsAdapter;</div><div class="line">    shadowReference = shadowsAdapter.getShadowActivityAdapter(<span class="keyword">this</span>.component);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这时看到 activity 传给了super，应该有点警觉，前面不是验证了 ActivityController 继承自 ComponentController 吗？而 component 又是在 ComponentController 中的，难道。。。</p>
<p>接着 super</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="title">ActivityController</span><span class="params">(ShadowsAdapter shadowsAdapter, T activity, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>(shadowsAdapter, activity, intent);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">ComponentController</span><span class="params">(ShadowsAdapter shadowsAdapter, T component, Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>(shadowsAdapter, component);</div><div class="line">    <span class="keyword">this</span>.intent = intent;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">ComponentController</span><span class="params">(ShadowsAdapter shadowsAdapter, T component)</span> </span>&#123;</div><div class="line">    myself = (C) <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.component = component;</div><div class="line">    shadowMainLooper = shadowsAdapter.getMainLooper();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>费了这么一大圈最终还是找到了，就是和之前的猜想一致。就是 Activity 经过一系列的操作 (这里操作是指 ReflectionHelpers.callConstructor(activityClass), intent) ) 最终直接传递给 component 。</p>
<p>所以获取 Activity 对象的分析就告一段落了。至于构建细节，怎么在 JVM 中绘制 View 的我也不怎么清楚，要想了解可以对 step 3.1 中的函数进一步深究。我大概可以确定应该是在那个过程中完成的。</p>
<h6 id="过程总结"><a href="#过程总结" class="headerlink" title="过程总结"></a>过程总结</h6><p>看图<br><img src="/2017/05/14/Android 单元测试和 Robolectric 源码解析/setupactivity.png" alt=""></p>
<h6 id="模拟点击-gt-performClick"><a href="#模拟点击-gt-performClick" class="headerlink" title="模拟点击 -&gt; performClick()"></a>模拟点击 -&gt; performClick()</h6><p>接下来就是根据获取的 Activity 来获取布局中的控件进行测试。</p>
<p>这里分析的是一个点击事件：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Call this view's OnClickListener, if it is defined.  Performs all normal</div><div class="line"> * actions associated with clicking: reporting accessibility event, playing</div><div class="line"> * a sound, etc.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> True there was an assigned OnClickListener that was called, false</div><div class="line"> *         otherwise is returned.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">performClick</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> result;</div><div class="line">    <span class="keyword">final</span> ListenerInfo li = mListenerInfo;</div><div class="line">    <span class="keyword">if</span> (li != <span class="keyword">null</span> &amp;&amp; li.mOnClickListener != <span class="keyword">null</span>) &#123;</div><div class="line">        playSoundEffect(SoundEffectConstants.CLICK);</div><div class="line">        li.mOnClickListener.onClick(<span class="keyword">this</span>);</div><div class="line">        result = <span class="keyword">true</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        result = <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED);</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>你会发现这里的 performClick() 中其实是调用了 onClick() 的。下面就是要验证确定会执行这个点击事件。<br>首先 li != null 这个条件是怎么成立的？</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListenerInfo</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Listener used to dispatch focus change events.</div><div class="line">     * This field should be made private, so it is hidden from the SDK.</div><div class="line">     * &#123;<span class="doctag">@hide</span>&#125;</div><div class="line">     */</div><div class="line">    ......</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过上述代码你会发现这是一个 View 的静态内部类。所以其实 mListenerInfo 应该是类中的一个变量。那么这个变量是在何时被初始化的呢？</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ListenerInfo mListenerInfo;</div><div class="line"></div><div class="line"><span class="function">ListenerInfo <span class="title">getListenerInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mListenerInfo != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span> mListenerInfo;</div><div class="line">    &#125;</div><div class="line">    mListenerInfo = <span class="keyword">new</span> ListenerInfo();</div><div class="line">    <span class="keyword">return</span> mListenerInfo;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>经过一番查找可以肯定的是，前面应该是调用了 getListenerInfo() 函数。而对于一个 Button 的 listenerInfo 凭直觉可以猜测下很大可能是 setOnClickListener() 中调用的。因为设置点击监听应该是要获取监听信息的吧。。。再就是前面除了对 Button 设置了点击事件就没做其他操作了，而且如果事件得到触发的话意味着 mListenerInfo 一定是被初始化了的。种种猜测都指向 setOnClickListener() ，那就看看源码吧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Register a callback to be invoked when this view is clicked. If this view is not</div><div class="line"> * clickable, it becomes clickable.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> l The callback that will run</div><div class="line"> *</div><div class="line"> * <span class="doctag">@see</span> #setClickable(boolean)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnClickListener</span><span class="params">(@Nullable OnClickListener l)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!isClickable()) &#123;</div><div class="line">        setClickable(<span class="keyword">true</span>);</div><div class="line">    &#125;</div><div class="line">    getListenerInfo().mOnClickListener = l;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>确实是如此，如果你没有进行前面的猜测的话，可以直接搜这个函数看看在哪些地方调用了，这时你会发现一个共同点：所有和视图监听有关的函数都有调用 getListenerInfo() 。至于为什么这样？很简单，因为他们都是 Listener ，自然需要 ListenerInfo 来确定自己是什么监听，并且通过 ListenerInfo 进行管理，只要 ListenerInfo 中的某个变量是 null 就意味着这个 Listener 是未注册的。这点可以从 li.mOnClickListener != null 这个条件验证，也就是前面点击事件的触发条件。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnScrollChangeListener</span><span class="params">(OnScrollChangeListener l)</span> </span>&#123;</div><div class="line">    getListenerInfo().mOnScrollChangeListener = l;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnFocusChangeListener</span><span class="params">(OnFocusChangeListener l)</span> </span>&#123;</div><div class="line">    getListenerInfo().mOnFocusChangeListener = l;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOnLayoutChangeListener</span><span class="params">(OnLayoutChangeListener listener)</span> </span>&#123;</div><div class="line">    ListenerInfo li = getListenerInfo();</div><div class="line">    <span class="keyword">if</span> (li.mOnLayoutChangeListeners == <span class="keyword">null</span>) &#123;</div><div class="line">        li.mOnLayoutChangeListeners = <span class="keyword">new</span> ArrayList&lt;OnLayoutChangeListener&gt;();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!li.mOnLayoutChangeListeners.contains(listener)) &#123;</div><div class="line">        li.mOnLayoutChangeListeners.add(listener);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>好了，点击事件就分析到这，总结一下：最开始就是设置监听，设置监听过程中会在 View 中将点击事件用 ListenerInfo 记录。在模拟点击事件中调用 performClick() ，下面就是对事件是否注册来确定是否触发点击事件。</p>
<p>之后就是自己写逻辑了，对你的预期和模拟跑出来的结果是否一致进行测试。这里就是 Junit 内容了。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>通过这次源码分析，发现只要细心，很多大牛的代码慢慢读也是可以读懂的。虽然代码量太大不可能一行不落地阅读，但是从一个小例子出发，慢慢分析就可以得出你自己理解，其实代码的逻辑就是常人的逻辑，其中值得学习的恰恰是这种常人逻辑之间的协调和对代码整个的宏观把控。</p>
<p>这是我第一次写关于源码分析的文章，其中肯定有很多不足，欢迎大家指正。<br>还有推荐下我的个人 <a href="http://fitzeng.org">Blog</a></p>
<p>最后<br>感谢阅读</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;作为一个 Android 开发的程序员，最痛苦的事情其实莫过于测试了，龟速的模拟器和麻烦的手机，基本上每测试一次都要浪费 1-2 min 去加载程序。而有了 Robolectric 这些就可以避免了。至于 Robolectric 的介绍推荐大家看看&lt;a href=&quot;http://robolectric.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt; （其中的用户指导是很好的学习资料）。我们用他的很大一个原因是他不需要再去把程序加载到 Android 手机或者模拟器中运行，他有自己的实现，能够调用 Android 中的很多库，下面的源码分析会提及。可是 Android Studio 对 Robolectric 不是很友好，而且在 Google 的官方教程中的测试工具也不是这个。。。同时 Robolectric 对于 Android Studio 的教程介绍似乎还是停留在 1.x 阶段，但是在 2.x 中的使用略有不同。&lt;/p&gt;
&lt;p&gt;讲了这么多，所以 Robolectric 和 Junit 4 有什么不同？不都是测试吗？&lt;br&gt;我的理解是 Junit 4 与 Robolectric 的关系和 Java 与 Android 的关系差不多。毕竟 Robolectric 是个第三方的测试库，其中很多还是要用到 Junit 的。&lt;/p&gt;
&lt;p&gt;好了，基本的介绍完成了，下面开始使用，但是使用不是我们这次的重点，重点是源码分析。但是源码分析也是建立在知道使用的基础上，如果你之前没有使用过，推荐你看官方的 user guide。或者这两篇 Blog。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/9d988a2f8ff7#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android单元测试框架Robolectric3.0介绍(一)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/3aa0e4efcfd3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android单元测试框架Robolectric3.0介绍(二)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="Android Unit Test" scheme="http://fitzeng.org/tags/Android-Unit-Test/"/>
    
  </entry>
  
  <entry>
    <title>实现一个类似QQ的社交聊天工具-4</title>
    <link href="http://fitzeng.org/2017/04/14/ZZChatApp4/"/>
    <id>http://fitzeng.org/2017/04/14/ZZChatApp4/</id>
    <published>2017-04-14T06:00:00.000Z</published>
    <updated>2017-07-01T10:10:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a></p>
<h2 id="实现一个类似QQ的社交聊天工具-4"><a href="#实现一个类似QQ的社交聊天工具-4" class="headerlink" title="实现一个类似QQ的社交聊天工具-4"></a>实现一个类似QQ的社交聊天工具-4</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>做好【ZZChatApp3】中的内容并且下载了<a href="http://fitzeng.org/2017/04/14/ZZChatApp1/">实现一个类似QQ的社交聊天工具-1</a>中的资料就可以开始下面的了<br>环境自己尝试是否能配好，下面只是给出一些提示和建议。<br>Xampp + Java EE</p>
<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p><img src="/2017/04/14/ZZChatApp4/Demo.gif" alt="GIF"><br>这里已经实现基本的通讯了。由于最近特别忙，所以打算写两篇的网络编程总结成一篇，细节应该都会提到，只是不会太详细。希望大家多利用身边的网络资源。基本在网上都有现成的答案。</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><a id="more"></a>
<p><img src="/2017/04/14/ZZChatApp4/show.png" alt=""><br>这就是大体的方向，所以目前目标很简单，为了不打断以后的编码思路，前期工作要做好。</p>
<h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><p><img src="/2017/04/14/ZZChatApp4/apache.png" alt=""> <img src="/2017/04/14/ZZChatApp4/window.png" alt=""> <img src="/2017/04/14/ZZChatApp4/jfram.png" alt=""><br>下载Xampp 开启 Apache 和 mySql, 在浏览器中输入 127.0.0.1:  看看有 Xampp 界面就成功，点击 admin 出现数据库就说明数据库可以访问了。</p>
<p><img src="/2017/04/14/ZZChatApp4/mysqljar.png" alt=""><br>至于 Java EE 自身是不携带 WindowBuilder 也就是你无法使用 JFrame 的图形界面进行设计。怎么安装动手搜搜就知道了。<br>之后就只要添加访问数据库的一个库到工程里面。在资料4已经给出，导入 buildpath 就可以了。</p>
<h4 id="数据库创建"><a href="#数据库创建" class="headerlink" title="数据库创建"></a>数据库创建</h4><p><img src="/2017/04/14/ZZChatApp4/dbdesign.png" alt=""> <img src="/2017/04/14/ZZChatApp4/dbcreate.png" alt=""> <img src="/2017/04/14/ZZChatApp4/dbmsg.png" alt=""><br>这里只是效果图，数据库的内容我们通过代码来创建，可以保证每一次的测试环境一样。</p>
<h4 id="通讯协议"><a href="#通讯协议" class="headerlink" title="通讯协议"></a>通讯协议</h4><p>这一部分的目的是数据解析要用到的。可以这样想，我发送一个登录消息和聊天消息服务器能区分吗？如果能够区分，那是怎么区分的？这就是设计通讯协议的最原始原因。其实如果学过网络通讯就知道，TCP/IP协议有个头，这个头就存在这某些信息，代表着自己身份，之后的信息就按这身份的协议去解析。<br>这里就用一个很简单的 [Action]:[info, info, … , info] 来作为对象传输。[Action]就是一个头，后面连着消息，至于消息如何解析，就要看你自己协议的具体约定了。这里我提供一个很简陋的在资源4中，也就是 Version lab版 所遵守的协议。</p>
<h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><p><img src="/2017/04/14/ZZChatApp4/showlogininout.png" alt=""><br>这里我们使用 socket 来编写。如果之前你没有接触过这方面，可能现在想知道手机怎么和电脑通讯？别急，先看看这个例子在电脑上怎么访问自己写的服务器。</p>
<p><img src="/2017/04/14/ZZChatApp4/telnet.png" alt=""></p>
<p>演示很简单，就是一个简单的界面来开启服务，如果你是测试,可以先不编写界面，直接运行就开启服务 serverListener.start(); 之后在cmd telnet 中通过 127.0.0.1 这个 IP 访问端口 27777 。可以看到控制台输出 “haha”， 如果你的电脑没有 telnet 可以开启或者直接在浏览器中访问 127.0.0.1:27777. 效果一样。这是就代表有一个和服务器建立的连接。</p>
<p>从这里可以猜想，手机如果连接的是电脑的无线，也就是处于同一个局域网内的话，是不是也可以访问到浏览器。<br>可以试试，手机连接电脑无线，那么通过什么访问端口呢？ 127.0.0.1？仔细思考就知道应该是行不通的，手机和电脑建立的连接走的是哪条线路呢？我们连的是无线，所以通过无线适配器和电脑建立连接，所以我们要访问电脑上的端口肯定是要经过这个适配器的。所以找到无线网络适配器的 IPv4, 就可以 通过 IPv4:27777 访问了。</p>
<p>下面解释一下代码。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerListener</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> ServerSocket serverSocket;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">27777</span>, <span class="number">27</span>);</div><div class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">                Socket socket = serverSocket.accept();</div><div class="line">                System.out.println(<span class="string">"haha"</span>);</div><div class="line">                ChatSocket chatSocket = <span class="keyword">new</span> ChatSocket(socket);</div><div class="line">                chatSocket.start();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以看到，这是一个死循环。只要不发生异常和手动关闭，这段代码是会一直运行下去的。<br>其中</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Socket socket = serverSocket.accept();</div></pre></td></tr></table></figure>
<p>这一行是关键，代表的是没有 socket 接入的话，程序会一直阻塞在这句代码处，一旦有 socket 接入，则返回一个 socket ，由于一个服务器必然是有多个客户端连接的。所以我们给每个 socket 连接都分配一个线程并且开启线程，接着循环进入阻塞，直到有下一个连接建立，重复上述步骤。这就是这段代码的运行状态。</p>
<p>现在假设有线程已经开启了。<br>怎么接收数据？ socket 是以流的形式传输数据。所以只要获取流，再将这个流进行相关操作就行了。<br>下面解释一下我们的主要代码。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatSocket</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Socket socket;</div><div class="line">    <span class="keyword">private</span> String message = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> BufferedReader bufferedReader;</div><div class="line">    <span class="keyword">private</span> BufferedWriter bufferedWriter;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChatSocket</span><span class="params">(Socket s)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.socket = s;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">this</span>.bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream(), <span class="string">"UTF-8"</span>));</div><div class="line">            <span class="keyword">this</span>.bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(s.getOutputStream(), <span class="string">"UTF-8"</span>));</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            String line = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (!line.equals(<span class="string">"-1"</span>)) &#123;   </div><div class="line">                    message += line;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    delMessage(message);</div><div class="line">                    line = <span class="keyword">null</span>;</div><div class="line">                    message = <span class="keyword">null</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                MainWindow.getMainWindow().setShowMsg(<span class="keyword">this</span>.username + <span class="string">" login out !"</span>);</div><div class="line">                MainWindow.getMainWindow().removeOfflineUsers(<span class="keyword">this</span>.username);</div><div class="line">                ChatManager.getChatManager().remove(socketMsg);</div><div class="line">                bufferedWriter.close();</div><div class="line">                bufferedReader.close();</div><div class="line">                socket.close();</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>首先定义一个 BufferedReader 和 BufferedWriter ，作用是接受客户端的数据和向客户端发送数据。很好记，Reader 对于自己来说就是读取别处的数据，Writer 是向目标对象写数据。所以 BufferedReader 是接受客户端的数据，BufferedWriter 是向客户端发送数据。</p>
<p>那么如何获取呢？</p>
<p>在构造函数中可以看到这两句</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream(), <span class="string">"UTF-8"</span>));</div><div class="line"><span class="keyword">this</span>.bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(s.getOutputStream(), <span class="string">"UTF-8"</span>));</div></pre></td></tr></table></figure>
<p>可以一起写也可以分开。如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 从 socket 获取输入流</span></div><div class="line">InputStream inputStream = s.getInputStream();</div><div class="line"><span class="comment">// 将位流通过 “UTF-8” 的格式读取为字符流</span></div><div class="line">InputStreamReader inputStreamReader = <span class="keyword">new</span> InputStreamReader(inputStream, <span class="string">"UTF-8"</span>);</div><div class="line"><span class="comment">// 将字符流放入 Buffer。方便使用</span></div><div class="line">BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(inputStreamReader);</div></pre></td></tr></table></figure>
<p>多想想整个数据的传输过程就很明朗了。有点像 OSI 的那个七层模型，一层一层封装与解封装。</p>
<p>上面只是获取到了流，并没有进行数据读写操作。开始下面介绍读取流中的数据。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">String line = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (!line.equals(<span class="string">"-1"</span>)) &#123;   </div><div class="line">        message += line;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        delMessage(message);</div><div class="line">        line = <span class="keyword">null</span>;</div><div class="line">        message = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看着有点乱。。再看一下下面的吧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMsg</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="keyword">while</span> (socket == <span class="keyword">null</span>) ;</div><div class="line">        <span class="keyword">if</span> (bufferedWriter != <span class="keyword">null</span>) &#123;</div><div class="line">            System.out.println(<span class="string">"send :"</span> + msg);</div><div class="line">            bufferedWriter.write(msg + <span class="string">"\n"</span>);</div><div class="line">            bufferedWriter.flush();</div><div class="line">            bufferedWriter.write(<span class="string">"-1\n"</span>);</div><div class="line">            bufferedWriter.flush();</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>可以清楚的看到，发送消息之后后面会加一个 “-1” 作为消息的终止符，也就是接接收方在接收到 -1 时，说明前面的数据是作为一整个信息的，将数据传出进行处理。接着清空继续接收接下来的消息，循环往复。可以看到 bufferedReader 这个流只要不关闭，这个会永远循环下去。</p>
<p>好了消息的发送和接收都基本算是处理好了，接下来就是数据处理，数据处理必然是要依赖协议的。所以依赖协议自己实现如下的函数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delMessage</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (msg != <span class="keyword">null</span>) &#123;</div><div class="line">        String action = getAction(msg);</div><div class="line">        <span class="keyword">switch</span>(action) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="string">"LOGIN"</span>: &#123; dealLogin(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"REGISTER"</span>: &#123; dealRegister(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"DRESSUP"</span>: &#123; dealDressUp(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETDRESSUP"</span>: &#123; dealGetDressUp(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"PROFILE"</span>: &#123; dealProfile(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETPROFILE"</span>: &#123; dealGetProfile(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETFRIENDLIST"</span>: &#123; dealGetFriendList(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETGROUPLIST"</span>: &#123; dealGetGroupList(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETFRIENDPROFILE"</span>: &#123; dealGetFriendProfile(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"STATE"</span>: &#123; dealState(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"CHATMSG"</span>: &#123; dealChatMsg(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"USERLIST"</span>: &#123; dealUserList(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"ADDFRIEND"</span>: &#123; dealAddFriend(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GROUPMEMBERLIST"</span>: &#123; dealGroupMemberList(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"ADDGROUP"</span>: &#123; dealAddGroup(msg); <span class="keyword">break</span>; &#125;</div><div class="line">            <span class="keyword">case</span> <span class="string">"GETALLGROUPLIST"</span>: &#123; dealGetAllGroupList(msg); <span class="keyword">break</span>;&#125;</div><div class="line">            <span class="keyword">default</span> : dealError(); <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>服务端的线程是随连接数的增加而增加，所以创建一个线程管理的类（ChatManager）就有必要了，这样我们可以轻松的对消息进行跨进程转发（聊天）。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChatManager</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ChatManager</span><span class="params">()</span></span>&#123;&#125;;</div><div class="line">    List&lt;SocketMsg&gt; socketList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ChatManager chatManager = <span class="keyword">new</span> ChatManager();</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ChatManager <span class="title">getChatManager</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> chatManager;</div><div class="line">    &#125;   </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(SocketMsg cs)</span> </span>&#123;</div><div class="line">        socketList.add(cs);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(SocketMsg cs)</span> </span>&#123;</div><div class="line">        socketList.remove(cs);</div><div class="line">    &#125;    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SocketMsg</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ChatSocket chatSocket;</div><div class="line">    <span class="keyword">private</span> String username;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SocketMsg</span><span class="params">(ChatSocket chatSocket, String username)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.chatSocket = chatSocket;</div><div class="line">        <span class="keyword">this</span>.username = username;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> username;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.username = username;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> ChatSocket <span class="title">getChatSocket</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> chatSocket;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChatSocket</span><span class="params">(ChatSocket chatSocket)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.chatSocket = chatSocket;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>就是这么简单。</p>
<p>服务端基本就讲到这里。细心的人会发现我们的接收消息和发送消息是不在同一个线程中的，稍微思考思考对客户端的代码编写有好处。</p>
<h4 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h4><p>在不考虑信息处理的情况下客户端仿照服务端很容易写出接受发送流的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">server/ServerManager.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerManager</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String IP = <span class="string">"192.168.191.1"</span>;</div><div class="line">    <span class="keyword">private</span> Socket socket;</div><div class="line">    <span class="keyword">private</span> String message = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> BufferedReader bufferedReader;</div><div class="line">    <span class="keyword">private</span> BufferedWriter bufferedWriter;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ServerManager <span class="title">getServerManager</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> serverManager; &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ServerManager</span><span class="params">()</span> </span>&#123; &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            socket = <span class="keyword">new</span> Socket(IP, <span class="number">27777</span>);</div><div class="line">            bufferedReader =  <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(socket.getInputStream(), <span class="string">"UTF-8"</span>));</div><div class="line">            bufferedWriter = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(socket.getOutputStream(), <span class="string">"UTF-8"</span>));</div><div class="line"></div><div class="line">            String m = <span class="keyword">null</span>;</div><div class="line">            String line;</div><div class="line">            <span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (!line.equals(<span class="string">"-1"</span>)) &#123;</div><div class="line">                    m += line;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Log.d(<span class="string">"TAG"</span>, <span class="string">"receive : "</span> + m);</div><div class="line">                    <span class="keyword">if</span> (ParaseData.getAction(m).equals(<span class="string">"GETCHATMSG"</span>)) &#123;</div><div class="line">                        receiveChatMsg.delChatMsg(m);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        message = m;</div><div class="line">                    &#125;</div><div class="line">                    m = <span class="keyword">null</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                bufferedWriter.close();</div><div class="line">                bufferedReader.close();</div><div class="line">                socket.close();</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(Context context, String msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">while</span> (socket == <span class="keyword">null</span>) ;</div><div class="line">            <span class="keyword">if</span> (bufferedWriter != <span class="keyword">null</span>) &#123;</div><div class="line">                bufferedWriter.write(msg + <span class="string">"\n"</span>);</div><div class="line">                bufferedWriter.flush();</div><div class="line">                bufferedWriter.write(<span class="string">"-1\n"</span>);</div><div class="line">                bufferedWriter.flush();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码是不是很熟悉？基本和服务端没什么变化，因为毕竟这是要和服务端建立连接的。</p>
<p>可以看到这是一个线程，所以从哪里开启这个线程呢？<br>我是在这里：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">AtyLoginOrRegister.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AtyLoginOrRegister</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ServerManager serverManager = ServerManager.getServerManager();</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        serverManager.start();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面就是进行数据传输处理了，我举两个例子。</p>
<h4 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h4><ul>
<li>登录</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AtyLoginOrRegister</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">        btnLogin.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        btnRegister.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">        serverManager.start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.btn_login: &#123;</div><div class="line">                String username = etLoginUsername.getText().toString();</div><div class="line">                String password = etLoginPassword.getText().toString();</div><div class="line">                <span class="keyword">if</span> (login(username, password)) &#123;</div><div class="line">                    serverManager.setUsername(username);</div><div class="line">                    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AtyMain.class);</div><div class="line">                    startActivity(intent);</div><div class="line">                    finish();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    etLoginUsername.setText(<span class="string">""</span>);</div><div class="line">                    etLoginPassword.setText(<span class="string">""</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">case</span> R.id.btn_register: &#123;</div><div class="line">                Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AtyMain.class);</div><div class="line">                startActivity(intent);</div><div class="line">                finish();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">login</span><span class="params">(String username, String password)</span> </span>&#123;</div><div class="line">        <span class="comment">// check username and password whether legal</span></div><div class="line">        <span class="keyword">if</span> (username == <span class="keyword">null</span> || username.length() &gt; <span class="number">10</span> || password.length() &gt; <span class="number">20</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// send msg to servers</span></div><div class="line">        String msg = <span class="string">"[LOGIN]:["</span> + username + <span class="string">", "</span> + password + <span class="string">"]"</span>;</div><div class="line">        serverManager.sendMessage(<span class="keyword">this</span>, msg);</div><div class="line">        <span class="comment">// get msg from servers return</span></div><div class="line">        String ack = serverManager.getMessage();</div><div class="line">        <span class="comment">// deal msg</span></div><div class="line">        <span class="keyword">if</span> (ack == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        serverManager.setMessage(<span class="keyword">null</span>);</div><div class="line">        String p = <span class="string">"\\[ACKLOGIN\\]:\\[(.*)\\]"</span>;</div><div class="line">        Pattern pattern = Pattern.compile(p);</div><div class="line">        Matcher matcher = pattern.matcher(ack);</div><div class="line">        <span class="keyword">return</span> matcher.find() &amp;&amp; matcher.group(<span class="number">1</span>).equals(<span class="string">"1"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>既然是登录，那么事件是发生在按钮的点击之后。下面我们来理一下登录过程：</p>
<p>点击登录按钮-&gt;获取登录信息-&gt;封装信息传输-&gt;服务端接收-&gt;解析信息-&gt;从服务器获取信息进行登录验证-&gt;返回验证结果-&gt;客户端获取数据-&gt;解析信息-&gt;进行登录状态调整</p>
<p>这就是一整个流程。下面就具体介绍。</p>
<ul>
<li><p>点击登录按钮</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">case</span> R.id.btn_login: &#123;</div><div class="line">      String username = etLoginUsername.getText().toString();</div><div class="line">      String password = etLoginPassword.getText().toString();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>获取登录信息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String username = etLoginUsername.getText().toString();</div><div class="line">String password = etLoginPassword.getText().toString();</div></pre></td></tr></table></figure>
</li>
<li><p>封装信息传输</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (username == <span class="keyword">null</span> || username.length() &gt; <span class="number">10</span> || password.length() &gt; <span class="number">20</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line">String msg = <span class="string">"[LOGIN]:["</span> + username + <span class="string">", "</span> + password + <span class="string">"]"</span>;</div><div class="line">serverManager.sendMessage(<span class="keyword">this</span>, msg);</div></pre></td></tr></table></figure>
<ul>
<li>服务端接收</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">String line = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (!line.equals(<span class="string">"-1"</span>)) &#123;   </div><div class="line">        message += line;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        delMessage(message);</div><div class="line">        System.out.println(<span class="string">"receive : "</span> + message);</div><div class="line">        line = <span class="keyword">null</span>;</div><div class="line">        message = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>解析信息</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">String iusername = <span class="keyword">null</span>;</div><div class="line">String iPassword = <span class="keyword">null</span>;</div><div class="line">String p = <span class="string">"\\[LOGIN\\]:\\[(.*), (.*)\\]"</span>;</div><div class="line">Pattern pattern = Pattern.compile(p);</div><div class="line">Matcher matcher = pattern.matcher(msg);</div><div class="line"><span class="keyword">if</span> (matcher.find()) &#123;</div><div class="line">    iusername = matcher.group(<span class="number">1</span>);</div><div class="line">    iPassword = matcher.group(<span class="number">2</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>从服务器获取信息进行登录验证 &amp;&amp; 返回验证结果</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">String sql = <span class="string">"SELECT password FROM USERS WHERE username = '"</span> + iusername + <span class="string">"';"</span>;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    Statement statement = connection.createStatement();</div><div class="line">    ResultSet resultSet = statement.executeQuery(sql);</div><div class="line">    <span class="keyword">if</span> (resultSet.next() &amp;&amp; iPassword.equals(resultSet.getString(<span class="number">1</span>)) ) &#123;</div><div class="line">        sendMsg(<span class="string">"[ACKLOGIN]:[1]"</span>);</div><div class="line">        <span class="keyword">this</span>.username = iusername;</div><div class="line">        MainWindow.getMainWindow().setShowMsg(<span class="keyword">this</span>.username + <span class="string">" login in!"</span>);</div><div class="line">        MainWindow.getMainWindow().addOnlineUsers(<span class="keyword">this</span>.username);</div><div class="line">        socketMsg = <span class="keyword">new</span> SocketMsg(<span class="keyword">this</span>,  <span class="keyword">this</span>.username);</div><div class="line">        ChatManager.getChatManager().add(socketMsg);</div><div class="line">        <span class="keyword">return</span> ;</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div><div class="line">sendMsg(<span class="string">"[ACKLOGIN]:[0]"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>客户端获取数据</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String ack = serverManager.getMessage();</div></pre></td></tr></table></figure>
<ul>
<li>解析信息</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (ack == <span class="keyword">null</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line">serverManager.setMessage(<span class="keyword">null</span>);</div><div class="line">String p = <span class="string">"\\[ACKLOGIN\\]:\\[(.*)\\]"</span>;</div><div class="line">Pattern pattern = Pattern.compile(p);</div><div class="line">Matcher matcher = pattern.matcher(ack);</div><div class="line"><span class="keyword">return</span> matcher.find() &amp;&amp; matcher.group(<span class="number">1</span>).equals(<span class="string">"1"</span>);</div></pre></td></tr></table></figure>
<ul>
<li>进行登录状态调整</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (login(username, password)) &#123;</div><div class="line">    serverManager.setUsername(username);</div><div class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AtyMain.class);</div><div class="line">    startActivity(intent);</div><div class="line">    finish();</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    etLoginUsername.setText(<span class="string">""</span>);</div><div class="line">    etLoginPassword.setText(<span class="string">""</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>发送信息</li>
</ul>
<p>流程一样只是处理消息的时候复杂一点，因为我们只为聊天设置一个协议。所以要提高信息的区分度而对数据进行的繁复操作是必须的。</p>
<p>发送：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">btnSend.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        String content = myMsg.getText().toString();</div><div class="line">        <span class="keyword">if</span> (!content.isEmpty()) &#123;</div><div class="line">            ChatMsg msg = <span class="keyword">new</span> ChatMsg();</div><div class="line">            msg.setContent(content);</div><div class="line">            msg.setUsername(ServerManager.getServerManager().getUsername());</div><div class="line">            msg.setIconID(ServerManager.getServerManager().getIconID());</div><div class="line">            msg.setMyInfo(<span class="keyword">true</span>);</div><div class="line">            msg.setChatObj(chatObj);</div><div class="line">            msg.setGroup(group.equals(<span class="string">"0"</span>) ? chatObj : <span class="string">" "</span>);</div><div class="line">            <span class="keyword">if</span> (sendToChatObj(msg.getContent())) &#123;</div><div class="line">                ChatMsg.chatMsgList.add(msg);</div><div class="line">                chatMsgList.add(msg);</div><div class="line">                myMsg.setText(<span class="string">""</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                Toast.makeText(AtyChatRoom.<span class="keyword">this</span>, <span class="string">"send failed"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">sendToChatObj</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">    String msg = <span class="string">"[CHATMSG]:["</span> + chatObj + <span class="string">", "</span> + content + <span class="string">", "</span> + ServerManager.getServerManager().getIconID() +<span class="string">", Text]"</span>;</div><div class="line">    ServerManager serverManager = ServerManager.getServerManager();</div><div class="line">    serverManager.sendMessage(<span class="keyword">this</span>, msg);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Thread.sleep(<span class="number">300</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    String ack = serverManager.getMessage();</div><div class="line">    <span class="keyword">if</span> (ack == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">    String p = <span class="string">"\\[ACKCHATMSG\\]:\\[(.*)\\]"</span>;</div><div class="line">    Pattern pattern = Pattern.compile(p);</div><div class="line">    Matcher matcher = pattern.matcher(ack);</div><div class="line">    <span class="keyword">return</span> matcher.find() &amp;&amp; matcher.group(<span class="number">1</span>).equals(<span class="string">"1"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接收：</p>
<p>由于日后扩展可能不只是文本信息，所以在对聊天信息的处理上我们直接再建一个类。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReceiveChatMsg</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delChatMsg</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">        String sendName = <span class="keyword">null</span>;</div><div class="line">        String content = <span class="keyword">null</span>;</div><div class="line">        String avatarID = <span class="keyword">null</span>;</div><div class="line">        String fileType = <span class="keyword">null</span>;</div><div class="line">        String group = <span class="keyword">null</span>;</div><div class="line">        ServerManager.getServerManager().setMessage(<span class="keyword">null</span>);</div><div class="line">        String p = <span class="string">"\\[GETCHATMSG\\]:\\[(.*), (.*), (.*), (.*), (.*)\\]"</span>;</div><div class="line">        Pattern pattern = Pattern.compile(p);</div><div class="line">        Matcher matcher = pattern.matcher(msg);</div><div class="line">        <span class="keyword">if</span> (matcher.find()) &#123;</div><div class="line">            sendName = matcher.group(<span class="number">1</span>);</div><div class="line">            content = matcher.group(<span class="number">2</span>);</div><div class="line">            avatarID = matcher.group(<span class="number">3</span>);</div><div class="line">            fileType = matcher.group(<span class="number">4</span>);</div><div class="line">            group = matcher.group(<span class="number">5</span>);</div><div class="line"></div><div class="line">            ChatMsg chatMsg = <span class="keyword">new</span> ChatMsg();</div><div class="line">            chatMsg.setMyInfo(<span class="keyword">false</span>);</div><div class="line">            chatMsg.setContent(content);</div><div class="line">            chatMsg.setChatObj(sendName);</div><div class="line">            chatMsg.setUsername(ServerManager.getServerManager().getUsername());</div><div class="line">            chatMsg.setGroup(group);</div><div class="line"></div><div class="line">            chatMsg.setIconID(Integer.parseInt(avatarID));</div><div class="line"></div><div class="line">            AtyChatRoom.chatMsgList.add(chatMsg);</div><div class="line">            ChatMsg.chatMsgList.add(chatMsg);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>细节就不多说了，注意区分同一个对象发信息给你是通过群还是私人。</p>
<p>还有就是当聊天窗口关闭后在再次打开聊天信息怎么加载？大家自己想想。不同可以看代码或者留言。</p>
<p>下面看下服务器的数据转发代码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dealChatMsg</span><span class="params">(String msg)</span> </span>&#123;</div><div class="line">    String chatObj = <span class="keyword">null</span>;</div><div class="line">    String content = <span class="keyword">null</span>;</div><div class="line">    String avatarID = <span class="keyword">null</span>;</div><div class="line">    String msgType = <span class="keyword">null</span>;</div><div class="line">    String p = <span class="string">"\\[CHATMSG\\]:\\[(.*), (.*), (.*), (.*)\\]"</span>;</div><div class="line">    Pattern pattern = Pattern.compile(p);</div><div class="line">    Matcher matcher = pattern.matcher(msg);</div><div class="line">    <span class="keyword">if</span> (matcher.find()) &#123;</div><div class="line">        chatObj = matcher.group(<span class="number">1</span>);</div><div class="line">        content = matcher.group(<span class="number">2</span>);</div><div class="line">        avatarID = matcher.group(<span class="number">3</span>);</div><div class="line">        msgType = matcher.group(<span class="number">4</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    String out = <span class="keyword">null</span>;</div><div class="line">    String sqlGroup = <span class="string">"SELECT * FROM GROUPS WHERE groupName = '"</span> + chatObj+ <span class="string">"';"</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Statement statement = connection.createStatement();</div><div class="line">        ResultSet resultSet = statement.executeQuery(sqlGroup);</div><div class="line">        <span class="comment">// gruop chat</span></div><div class="line">        <span class="keyword">if</span> (resultSet.next()) &#123;</div><div class="line">            <span class="comment">// find all group members to send msg</span></div><div class="line">            String sql = <span class="string">"SELECT groupMemberName FROM GROUPINFO WHERE groupName = '"</span> + chatObj + <span class="string">"';"</span>;</div><div class="line">            resultSet = statement.executeQuery(sql);</div><div class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;                  </div><div class="line">                <span class="comment">// if user is online , then send.</span></div><div class="line">                <span class="keyword">for</span> (SocketMsg SocketMsg : ChatManager.getChatManager().socketList) &#123;</div><div class="line">                    <span class="keyword">if</span> (SocketMsg.getUsername().equals(resultSet.getString(<span class="number">1</span>)) &amp;&amp; !SocketMsg.getUsername().equals(username)) &#123;</div><div class="line">                        out = <span class="string">"[GETCHATMSG]:["</span> + username + <span class="string">", "</span> + content + <span class="string">", "</span> + avatarID + <span class="string">", Text, "</span> + chatObj + <span class="string">"]"</span>;</div><div class="line">                        SocketMsg.getChatSocket().sendMsg(out);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        <span class="comment">// private chat</span></div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">for</span> (SocketMsg socketManager : ChatManager.getChatManager().socketList) &#123;</div><div class="line">                <span class="keyword">if</span> (socketManager.getUsername().equals(chatObj)) &#123;</div><div class="line">                    out = <span class="string">"[GETCHATMSG]:["</span> + username + <span class="string">", "</span> + content + <span class="string">", "</span> + avatarID + <span class="string">", Text,  ]"</span>;</div><div class="line">                    socketManager.getChatSocket().sendMsg(out);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        out = <span class="string">"[ACKCHATMSG]:[1]"</span>;</div><div class="line">        sendMsg(out);</div><div class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</div><div class="line">        out = <span class="string">"[ACKCHATMSG]:[0]"</span>;</div><div class="line">        sendMsg(out);</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="/2017/04/14/ZZChatApp4/chatmsglog.png" alt=""></p>
<p>其实逻辑不是很复杂，慢慢看很容易懂的。其他的实现自己慢慢摸索可以实现。不想再拖长篇幅了，看代码可能比我讲的效率更高，理解更加深刻。在这个过程中可能你会遇到一个小 Bug 卡了一天，但是每个人都是这么成长过来的，一起加油!</p>
<p>到这里目前的就算完了，这个系列 Blog 可能不会更新了。但是 GitHub <a href=""></a> 上会对代码继续更新的。此外这个 Lab 版还有很多 Bug 欢迎大家提建议，很希望和大家一起交流学习。</p>
<p>多谢阅读。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/ZZChat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现一个类似QQ的社交聊天工具-4&quot;&gt;&lt;a href=&quot;#实现一个类似QQ的社交聊天工具-4&quot; class=&quot;headerlink&quot; title=&quot;实现一个类似QQ的社交聊天工具-4&quot;&gt;&lt;/a&gt;实现一个类似QQ的社交聊天工具-4&lt;/h2&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;做好【ZZChatApp3】中的内容并且下载了&lt;a href=&quot;http://fitzeng.org/2017/04/14/ZZChatApp1/&quot;&gt;实现一个类似QQ的社交聊天工具-1&lt;/a&gt;中的资料就可以开始下面的了&lt;br&gt;环境自己尝试是否能配好，下面只是给出一些提示和建议。&lt;br&gt;Xampp + Java EE&lt;/p&gt;
&lt;h3 id=&quot;实现目标&quot;&gt;&lt;a href=&quot;#实现目标&quot; class=&quot;headerlink&quot; title=&quot;实现目标&quot;&gt;&lt;/a&gt;实现目标&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2017/04/14/ZZChatApp4/Demo.gif&quot; alt=&quot;GIF&quot;&gt;&lt;br&gt;这里已经实现基本的通讯了。由于最近特别忙，所以打算写两篇的网络编程总结成一篇，细节应该都会提到，只是不会太详细。希望大家多利用身边的网络资源。基本在网上都有现成的答案。&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="ZZChat" scheme="http://fitzeng.org/tags/ZZChat/"/>
    
  </entry>
  
  <entry>
    <title>实现一个类似QQ的社交聊天工具-3</title>
    <link href="http://fitzeng.org/2017/04/14/ZZChatApp3/"/>
    <id>http://fitzeng.org/2017/04/14/ZZChatApp3/</id>
    <published>2017-04-14T05:00:00.000Z</published>
    <updated>2017-07-01T10:10:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a></p>
<h2 id="实现一个类似QQ的社交聊天工具-3"><a href="#实现一个类似QQ的社交聊天工具-3" class="headerlink" title="实现一个类似QQ的社交聊天工具-3"></a>实现一个类似QQ的社交聊天工具-3</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>做好【ZZChatApp2】中的内容并且下载了<a href="http://fitzeng.org/2017/04/14/ZZChatApp1/">实现一个类似QQ的社交聊天工具-1</a>中的资料就可以开始下面的了</p>
<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p><img src="/2017/04/14/ZZChatApp3/Demo.gif" alt="GIF"><br>看演示效果就知道，这次主要的任务是实现两个界面，一个是 Dressup 选图片的，另一个是聊天界面。如果你对 RecyclerView 有一定认识了，可以自己自行编写 Dressup 界面。我们的聊天信息使用的是 listview ，尝试尽可能多的控件。好消息是这次 lab 之后基本的界面工作就完成了，下次 lab 我们开始进行网络编程。</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><a id="more"></a>
<p><img src="/2017/04/14/ZZChatApp3/fileshow1.png" alt=""> <img src="/2017/04/14/ZZChatApp3/fileshow2.png" alt=""><br>Profile 界面就不讲了，自己参照源码或者自己写，这里为了方便就直接把 username 作为 id 和 nickname 主要是为了后期数据库的建立不太麻烦，毕竟是个小练习。数据处理不是我们关注的重点，重点是整个开发流程。</p>
<h4 id="Dressup实现"><a href="#Dressup实现" class="headerlink" title="Dressup实现"></a>Dressup实现</h4><p><img src="/2017/04/14/ZZChatApp3/layoutprofile.png" alt=""> <img src="/2017/04/14/ZZChatApp3/layoutdressup.png" alt=""> </p>
<p>我的习惯是先写界面</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">aty_dress_up.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  &gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.TitleBar</span> <span class="attr">android:id</span>=<span class="string">"@+id/tb_dress_up"</span> &gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.TitleBar</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:text</span>=<span class="string">"Choose an avatar"</span>  /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rv_avatar"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:text</span>=<span class="string">"Choose a background"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rv_background"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/btn_save"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>布局很简单，接下来就是建一个Aty去加载布局。布局好了，这是应该是加载资源，而加载资源又不得不用到我们的适配器。所以先写适配器。</p>
<p>下面以加载 Avatar 为例。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">adapter/AdapterAvatar.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterAvatar</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">AdapterAvatar</span>.<span class="title">BaseViewHoder</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> List&lt;ImageMsg&gt; imageViews;</div><div class="line">    <span class="keyword">private</span> Context context;</div><div class="line">    <span class="keyword">private</span> LayoutInflater inflater;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> selectedImageAvatar = <span class="number">0</span>;</div><div class="line">    <span class="keyword">private</span> List&lt;RelativeLayout&gt; imageContainer = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> Drawable bgImageDrawable;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdapterAvatar</span><span class="params">(Context context, List&lt;ImageMsg&gt; imageViews)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.context = context;</div><div class="line">        <span class="keyword">this</span>.imageViews = imageViews;</div><div class="line">        <span class="keyword">this</span>.inflater = LayoutInflater.from(context);</div><div class="line">        selectedImageAvatar = <span class="number">0</span>;</div><div class="line">        bgImageDrawable = context.getResources().getDrawable(R.drawable.bgimage, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> BaseViewHoder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        View view = inflater.inflate(R.layout.choose_image, parent, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseViewHoder(view);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> BaseViewHoder holder, <span class="keyword">final</span> <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        holder.imageView.setImageResource(imageViews.get(position).getImageID());</div><div class="line">        imageContainer.get(selectedImageAvatar).setBackground(bgImageDrawable);</div><div class="line"></div><div class="line">        holder.imageView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (position != selectedImageAvatar) &#123;</div><div class="line">                    imageContainer.get(position).setBackground(bgImageDrawable);</div><div class="line">                    imageContainer.get(selectedImageAvatar).setBackgroundColor(<span class="number">0</span>);</div><div class="line">                    selectedImageAvatar = position;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> imageViews == <span class="keyword">null</span> ? <span class="number">0</span> : imageViews.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BaseViewHoder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        ImageView imageView;</div><div class="line"></div><div class="line">        BaseViewHoder(View itemView) &#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            imageView = (ImageView) itemView.findViewById(R.id.image);</div><div class="line">            RelativeLayout layout =  (RelativeLayout) itemView.findViewById(R.id.imageContainer);</div><div class="line">            imageContainer.add(layout);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码很简洁，都是套路。唯一注意的一点是点击的逻辑处理。还有就是把图片资源（util/ImageManager）用一个类封装一下，和创建一个对象（util/ImageMsg）用来存储加载数据的信息。用起来就比较方便了。适配器好了，下面利用适配器把数据加载进 RecyclerView 。思路还是比较清晰的。</p>
<p>具体实现看代码吧。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    titleBar = (TitleBar) findViewById(R.id.tb_dress_up);</div><div class="line">    rvAvatar = (RecyclerView) findViewById(R.id.rv_avatar);</div><div class="line">    rvBackground = (RecyclerView) findViewById(R.id.rv_background);</div><div class="line">    btnSave = (Button) findViewById(R.id.btn_save);</div><div class="line"></div><div class="line">    addAvatarView();</div><div class="line"></div><div class="line">    titleBar.setTitleBarClickListetner(<span class="keyword">new</span> TitleBar.titleBarClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftButtonClick</span><span class="params">()</span> </span>&#123;</div><div class="line">            finish();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightButtonClick</span><span class="params">()</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    btnSave.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            Toast.makeText(AtyDressUp.<span class="keyword">this</span>, <span class="string">"saved"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            finish();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addAvatarView</span><span class="params">()</span> </span>&#123;</div><div class="line">    List&lt;ImageMsg&gt; imageMsgs = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> anImagesAvatar : ImageManager.imagesAvatar) &#123;</div><div class="line">        ImageMsg imagemsg = <span class="keyword">new</span> ImageMsg();</div><div class="line">        imagemsg.setImageID(anImagesAvatar);</div><div class="line">        imageMsgs.add(imagemsg);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    AdapterAvatar avatarAdapter = <span class="keyword">new</span> AdapterAvatar(<span class="keyword">this</span>, imageMsgs);</div><div class="line">    LinearLayoutManager layoutManager = <span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>, LinearLayoutManager.HORIZONTAL, <span class="keyword">false</span>);</div><div class="line">    rvAvatar.setLayoutManager(layoutManager);</div><div class="line">    rvAvatar.setAdapter(avatarAdapter);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>之后加载 Background 的代码自己写吧,这一部分就算完成了，不懂的可以参照源码。</p>
<h4 id="聊天界面"><a href="#聊天界面" class="headerlink" title="聊天界面"></a>聊天界面</h4><p><img src="/2017/04/14/ZZChatApp3/layoutchatroom.png" alt=""><br>看过第一行代码的应该有点了解，大家可以先上网搜搜其他资源。</p>
<p>主要问题是怎么让消息自适应气泡。有一种图片时.9.png格式，至于如何制作，很简单。选中图片右键，在最下面的选项中有一个Create 9-Patch file…点击之后就会弹出界面，自己把要缩放的区域集中在黑线的交汇区域。<br><img src="/2017/04/14/ZZChatApp3/ninepic.png" alt=""></p>
<p>聊天界面布局如下，这里有一个Bug，下面会陈述。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>  &gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.TitleBar</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tb_chat_room"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.TitleBar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ScrollView</span> &gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span> &gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">ListView</span> <span class="attr">android:id</span>=<span class="string">"@+id/lv_chat_room"</span> &gt;</span> <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span> &gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:text</span>=<span class="string">"emoji"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:text</span>=<span class="string">"draw"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:text</span>=<span class="string">"file"</span> /&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:text</span>=<span class="string">"call"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">EditText</span> <span class="attr">android:id</span>=<span class="string">"@+id/myMsg"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/btnSend"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>接下来就是消息界面的设计，也就是适配器加载的布局。一个头像，一个 username 一个内容。OK。但是要区分是自己发送的消息还是别人发送的消息。所以有两个布局。</p>
<p>这时我们要建立一个聊天信息的Msg</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> myInfo;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> iconID;</div><div class="line"><span class="keyword">private</span> String username;</div><div class="line"><span class="keyword">private</span> String content;</div><div class="line"><span class="keyword">private</span> String chatObj;</div></pre></td></tr></table></figure>
<p>数据什么的都贮备好了，下面进行是适配器的编写。由于 ListView 没有实现 ViewHolder 所以要自己实现。主要是为了视图缓存，减小视图加载时的资源消耗。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">adaptar/AdapterChatMsg.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterChatMsg</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">ChatMsg</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> LayoutInflater inflater;</div><div class="line">    <span class="keyword">private</span> List&lt;ChatMsg&gt; chatMsgs;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdapterChatMsg</span><span class="params">(@NonNull Context context, @LayoutRes <span class="keyword">int</span> resource, List&lt;ChatMsg&gt; chatMsgs)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, resource);</div><div class="line">        <span class="keyword">this</span>.inflater = LayoutInflater.from(context);</div><div class="line">        <span class="keyword">this</span>.chatMsgs = chatMsgs;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> chatMsgs.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ChatMsg <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> chatMsgs.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@NonNull</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, @Nullable View convertView, @NonNull ViewGroup parent)</span> </span>&#123;</div><div class="line"></div><div class="line">        ChatMsg msg = getItem(position);</div><div class="line">        View view;</div><div class="line">        ViewHolder viewHolder;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (convertView == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">assert</span> msg != <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">if</span> (msg.isMyInfo()) &#123;</div><div class="line">                view = inflater.inflate(R.layout.chat_me, parent, <span class="keyword">false</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                view = inflater.inflate(R.layout.chat_other, parent, <span class="keyword">false</span>);</div><div class="line">            &#125;</div><div class="line">            viewHolder = <span class="keyword">new</span> ViewHolder();</div><div class="line">            viewHolder.icon = (ImageView) view.findViewById(R.id.icon);</div><div class="line">            viewHolder.username = (TextView) view.findViewById(R.id.username);</div><div class="line">            viewHolder.content = (TextView) view.findViewById(R.id.content);</div><div class="line"></div><div class="line">            view.setTag(viewHolder);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            view = convertView;</div><div class="line">            viewHolder = (ViewHolder) view.getTag();</div><div class="line">        &#125;</div><div class="line">        viewHolder.icon.setImageResource(chatMsgs.get(position).getIconID());</div><div class="line">        viewHolder.username.setText(chatMsgs.get(position).getUsername());</div><div class="line">        viewHolder.content.setText(chatMsgs.get(position).getContent());</div><div class="line">        <span class="keyword">return</span> view;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> </span>&#123;</div><div class="line">        ImageView icon;</div><div class="line">        TextView username;</div><div class="line">        TextView content;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中通过</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (msg.isMyInfo()) &#123;</div><div class="line">    view = inflater.inflate(R.layout.chat_me, parent, <span class="keyword">false</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    view = inflater.inflate(R.layout.chat_other, parent, <span class="keyword">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>来加载聊天左右视图。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">AtyChatRoom.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AtyChatRoom</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> TitleBar titleBar;</div><div class="line">    <span class="keyword">private</span> ListView listView;</div><div class="line">    <span class="keyword">private</span> EditText myMsg;</div><div class="line">    <span class="keyword">private</span> Button btnSend;</div><div class="line">    <span class="keyword">private</span> List&lt;ChatMsg&gt; chatMsgList;</div><div class="line">    <span class="keyword">private</span> AdapterChatMsg adapterChatMsgList;</div><div class="line">    <span class="keyword">private</span> String chatObj;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        getSupportActionBar().hide();</div><div class="line"><span class="comment">//        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);</span></div><div class="line">        setContentView(R.layout.aty_chat_room);</div><div class="line">        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE |</div><div class="line">                WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);</div><div class="line"><span class="comment">//        AndroidBug5497Workaround.assistActivity(this);</span></div><div class="line">        initViews();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        titleBar = (TitleBar) findViewById(R.id.tb_chat_room);</div><div class="line">        listView = (ListView) findViewById(R.id.lv_chat_room);</div><div class="line">        myMsg = (EditText) findViewById(R.id.myMsg);</div><div class="line">        btnSend = (Button) findViewById(R.id.btnSend);</div><div class="line">        chatMsgList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">        chatObj = getIntent().getStringExtra(<span class="string">"username"</span>);</div><div class="line">        titleBar.setTitleText(chatObj);</div><div class="line"></div><div class="line">        adapterChatMsgList = <span class="keyword">new</span> AdapterChatMsg(AtyChatRoom.<span class="keyword">this</span>, R.layout.chat_other, chatMsgList);</div><div class="line"></div><div class="line">        listView.setAdapter(adapterChatMsgList);</div><div class="line"></div><div class="line">        btnSend.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                String content = myMsg.getText().toString();</div><div class="line">                <span class="keyword">if</span> (!content.isEmpty()) &#123;</div><div class="line">                    ChatMsg msg = <span class="keyword">new</span> ChatMsg();</div><div class="line">                    msg.setContent(content);</div><div class="line">                    msg.setUsername(<span class="string">"hello"</span>);</div><div class="line">                    msg.setIconID(R.drawable.avasterwe);</div><div class="line">                    msg.setMyInfo(<span class="keyword">true</span>);</div><div class="line">                    msg.setChatObj(chatObj);</div><div class="line">                    chatMsgList.add(msg);</div><div class="line">                    myMsg.setText(<span class="string">""</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        titleBar.setTitleBarClickListetner(<span class="keyword">new</span> TitleBar.titleBarClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftButtonClick</span><span class="params">()</span> </span>&#123;</div><div class="line">                finish();</div><div class="line">            &#125;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightButtonClick</span><span class="params">()</span> </span>&#123; &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这次我把整个Aty都贴出来了，主要是为了说明一个Bug。点击输入框软键盘弹出时 TitleBar 会被顶上去。为了解决这个问题，在onCreate函数中，加 SOFT_INPUT_ADJUST_RESIZE ，但是在全屏下同时设置 SOFT_INPUT_ADJUST_RESIZE 这个属性，TitleBar 又会被顶上去。所以，在 Stack Overflow 有大神给出了解决方案。就是 util 多出的那个 AndroidBug5497Workaround.java 文件。讲道理在 setContentView() 之后添加一句 AndroidBug5497Workaround.assistActivity(this); 就可以解决。。。。。。但是。。。可能是我的手机太渣，还是没能实现效果。据说这个是适合市面上大部分手机的。。。希望在你的手机上能行，所以我就保留了这些文件。为了取舍，我只能不实现全屏了。。。日后找到好的解决方案会在github更新。</p>
<p>目前好像。。完了。。。。看着少，其实里面的有些东西是值得深究的。至于如何实现 Moments 和 Contacts 滑动的留给大家自己探索了。</p>
<p>感谢大家的耐心阅读和支持，再下次开始之前，希望你已经搭建好了本地服务器。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/ZZChat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现一个类似QQ的社交聊天工具-3&quot;&gt;&lt;a href=&quot;#实现一个类似QQ的社交聊天工具-3&quot; class=&quot;headerlink&quot; title=&quot;实现一个类似QQ的社交聊天工具-3&quot;&gt;&lt;/a&gt;实现一个类似QQ的社交聊天工具-3&lt;/h2&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;做好【ZZChatApp2】中的内容并且下载了&lt;a href=&quot;http://fitzeng.org/2017/04/14/ZZChatApp1/&quot;&gt;实现一个类似QQ的社交聊天工具-1&lt;/a&gt;中的资料就可以开始下面的了&lt;/p&gt;
&lt;h3 id=&quot;实现目标&quot;&gt;&lt;a href=&quot;#实现目标&quot; class=&quot;headerlink&quot; title=&quot;实现目标&quot;&gt;&lt;/a&gt;实现目标&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2017/04/14/ZZChatApp3/Demo.gif&quot; alt=&quot;GIF&quot;&gt;&lt;br&gt;看演示效果就知道，这次主要的任务是实现两个界面，一个是 Dressup 选图片的，另一个是聊天界面。如果你对 RecyclerView 有一定认识了，可以自己自行编写 Dressup 界面。我们的聊天信息使用的是 listview ，尝试尽可能多的控件。好消息是这次 lab 之后基本的界面工作就完成了，下次 lab 我们开始进行网络编程。&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="ZZChat" scheme="http://fitzeng.org/tags/ZZChat/"/>
    
  </entry>
  
  <entry>
    <title>实现一个类似QQ的社交聊天工具-2</title>
    <link href="http://fitzeng.org/2017/04/14/ZZChatApp2/"/>
    <id>http://fitzeng.org/2017/04/14/ZZChatApp2/</id>
    <published>2017-04-14T04:00:00.000Z</published>
    <updated>2017-07-01T10:10:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a></p>
<h2 id="实现一个类似QQ的社交聊天工具-2"><a href="#实现一个类似QQ的社交聊天工具-2" class="headerlink" title="实现一个类似QQ的社交聊天工具-2"></a>实现一个类似QQ的社交聊天工具-2</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>做好【ZZChatApp1】中的内容并且下载了<a href="http://fitzeng.org/2017/04/14/ZZChatApp1/">实现一个类似QQ的社交聊天工具-1</a>中的资料就可以开始下面的了</p>
<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p><img src="/2017/04/14/ZZChatApp2/Demo.gif" alt="GIF"><br>前面只是实现一个基本的框架，这次我们要往主界面里面添加内容，代码较多，最好自己看这篇文章时也参考我提供的第二阶段源码。<br>主要练习的是自定义控件</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><a id="more"></a>
<p><img src="/2017/04/14/ZZChatApp2/showfile1.png" alt=""> <img src="/2017/04/14/ZZChatApp2/showfile2.png" alt=""><br>这次的文件比上次多了，所以文件管理和控件ID的命名不能太随意，这是要注意的一点。代码难度不高，只要命名好了，不写注释其实也能看懂的。</p>
<h4 id="TitleBar"><a href="#TitleBar" class="headerlink" title="TitleBar"></a>TitleBar</h4><p>在开始写三个页面和一个侧滑视图之前，我们先做个自定义控件。其实这此实验总共用到了两个，我在这只叙述复杂的那个，剩下的可以参考源码自己实现。在学习之前推荐观看<a href="http://www.imooc.com/video/5079" target="_blank" rel="external">慕课</a>，时间不是很长，但是对理清思路视频讲解更直接。</p>
<ul>
<li>设计属性</li>
</ul>
<p>其实就是两个button加一个textView。属性设计如下</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">values/atts.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">"TitleBar"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"titleText"</span> <span class="attr">format</span>=<span class="string">"string"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"titleTextSize"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"titleTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"titleBackground"</span> <span class="attr">format</span>=<span class="string">"reference|color"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"leftText"</span> <span class="attr">format</span>=<span class="string">"string"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"leftTextSize"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"leftTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"leftBackground"</span> <span class="attr">format</span>=<span class="string">"reference|color"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"rightText"</span> <span class="attr">format</span>=<span class="string">"string"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"rightTextSize"</span> <span class="attr">format</span>=<span class="string">"dimension"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"rightTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"rightBackground"</span> <span class="attr">format</span>=<span class="string">"reference|color"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>绑定属性</li>
</ul>
<p>可以根据前面设计的属性来判断需要哪些变量</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Button btnLeft;</div><div class="line"><span class="keyword">private</span> Button btnRight;</div><div class="line"><span class="keyword">private</span> TextView tvTitle;</div><div class="line"></div><div class="line"><span class="keyword">private</span> String leftText;</div><div class="line"><span class="keyword">private</span> <span class="keyword">float</span> leftTextSize;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> leftTextColor;</div><div class="line"><span class="keyword">private</span> Drawable leftBackground;</div><div class="line"></div><div class="line"><span class="keyword">private</span> String rightText;</div><div class="line"><span class="keyword">private</span> <span class="keyword">float</span> rightTextSize;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> rightTextColor;</div><div class="line"><span class="keyword">private</span> Drawable rightBackground;</div><div class="line"></div><div class="line"><span class="keyword">private</span> String titleText;</div><div class="line"><span class="keyword">private</span> <span class="keyword">float</span> titleTextSize;</div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> titleTextColor;</div><div class="line"><span class="keyword">private</span> Drawable titleBackground;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> attrs this is titlebar's attribute set for binding with widgets</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">findAttrs</span><span class="params">(AttributeSet attrs)</span> </span>&#123;</div><div class="line">    TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.TitleBar);</div><div class="line"></div><div class="line">    leftText = typedArray.getString(R.styleable.TitleBar_leftText);</div><div class="line">    leftTextSize = typedArray.getDimension(R.styleable.TitleBar_leftTextSize, <span class="number">24</span>);</div><div class="line">    leftTextColor = typedArray.getColor(R.styleable.TitleBar_leftTextColor, <span class="number">0</span>);</div><div class="line">    leftBackground = typedArray.getDrawable(R.styleable.TitleBar_leftBackground);</div><div class="line"></div><div class="line">    titleText = typedArray.getString(R.styleable.TitleBar_titleText);</div><div class="line">    titleTextSize = typedArray.getDimension(R.styleable.TitleBar_titleTextSize, <span class="number">24</span>);</div><div class="line">    titleTextColor = typedArray.getColor(R.styleable.TitleBar_titleTextColor, <span class="number">0</span>);</div><div class="line">    titleBackground = typedArray.getDrawable(R.styleable.TitleBar_titleBackground);</div><div class="line"></div><div class="line">    rightText = typedArray.getString(R.styleable.TitleBar_rightText);</div><div class="line">    rightTextSize = typedArray.getDimension(R.styleable.TitleBar_rightTextSize, <span class="number">24</span>);</div><div class="line">    rightTextColor = typedArray.getColor(R.styleable.TitleBar_rightTextColor, <span class="number">0</span>);</div><div class="line">    rightBackground = typedArray.getDrawable(R.styleable.TitleBar_rightBackground);</div><div class="line"></div><div class="line">    typedArray.recycle();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Init titlebar's widgets</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    btnLeft = <span class="keyword">new</span> Button(context);</div><div class="line">    btnRight = <span class="keyword">new</span> Button(context);</div><div class="line">    tvTitle = <span class="keyword">new</span> TextView(context);</div><div class="line"></div><div class="line">    btnLeft.setText(leftText);</div><div class="line">    btnLeft.setTextSize(leftTextSize);</div><div class="line">    btnLeft.setTextColor(leftTextColor);</div><div class="line">    btnLeft.setBackground(leftBackground);</div><div class="line"></div><div class="line">    btnRight.setText(rightText);</div><div class="line">    btnRight.setTextSize(rightTextSize);</div><div class="line">    btnRight.setTextColor(rightTextColor);</div><div class="line">    btnRight.setBackground(rightBackground);</div><div class="line"></div><div class="line">    tvTitle.setText(titleText);</div><div class="line">    tvTitle.setTextSize(titleTextSize);</div><div class="line">    tvTitle.setTextColor(titleTextColor);</div><div class="line">    tvTitle.setBackground(titleBackground);</div><div class="line"></div><div class="line">    tvTitle.setGravity(Gravity.CENTER);</div><div class="line"></div><div class="line">    setBackgroundColor(<span class="number">0xFF01AAFF</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Setting titlebar's layout</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setTitleBarLayoutParams</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    btnLeft.setAllCaps(<span class="keyword">false</span>);</div><div class="line">    btnRight.setAllCaps(<span class="keyword">false</span>);</div><div class="line"></div><div class="line">    LayoutParams btnLeftLayoutParams = <span class="keyword">new</span> LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</div><div class="line">    btnLeftLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT, TRUE);</div><div class="line">    addView(btnLeft, btnLeftLayoutParams);</div><div class="line"></div><div class="line">    LayoutParams btnRightLayoutParams = <span class="keyword">new</span> LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</div><div class="line">    btnRightLayoutParams.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, TRUE);</div><div class="line">    addView(btnRight, btnRightLayoutParams);</div><div class="line"></div><div class="line">    LayoutParams titleLayoutParams = <span class="keyword">new</span> LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT);</div><div class="line">    titleLayoutParams.addRule(RelativeLayout.CENTER_IN_PARENT, TRUE);</div><div class="line">    addView(tvTitle, titleLayoutParams);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其实从使用角度来说，可以理出一条我们为什么这么做的线。<br>因为在 XML 中我们使用一般都是 android : layout_width = “match_parent”<br>很明显 layout_width 可以看做一个 Key ，而 match_parent 是一个 Value.<br>所以 findAttrs(AttributeSet attrs) 就是把之前设计属性是所能识别的 Key 的值取出来，也就是 “XXX” 中的 XXX 数据，但是仅仅取出数据并没有什么用，最终还是要把数据赋值到控件上去，数据才能显示我们想要的效果。所以 initViews() 便是做这件事的。接下来的 setTitleBarLayoutParams() 只是对里面控件的属性的一个约束。</p>
<p>对于 Key-Value 的理解，其实可以这样看，如果声明了一个 app:no_name=”12” 在 xml 中，而实际你并没有声明这个属性在 atts.xml 中，所以编译器知道的是找不到 Key ，而不是判定 Value 的对错。所以对于属性文件 atts.xml 就自然而然有了存在的意义。我理解为就是规范作用，而之后的值传递给 TextView 或者其他已有控件，就是之后的绑定属性值的操作就顺理成章了。</p>
<p>文笔不好，不知道讲清了没。。。大家还是好好看看前面推荐的视频和自己写一个小控件实现一下加深理解。</p>
<p>目前这个控件只是静态的，不能响应点击事件。可以参考之前的 Button 怎么实现的。一般 Button.setOnClickListener()<br>所以可以在控件中加一个 setTitleBarClickListetner() 方法。接下来就是有点难度的了。Button 自己的点击事件响应其实是由自己在 onClick() 方法中实现自己的逻辑的。 所以此时自定义控件就要对外提供一个接口，让实现者自己定义自己的点击事件。讲到这估计差不多了，看看代码就理解了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">view/TitleBar.java</div><div class="line"></div><div class="line"><span class="keyword">private</span> titleBarClickListener listener;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * implement click events</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">titleBarClickListener</span> </span>&#123;</div><div class="line">    <span class="comment">// 这两个方法相当于 Button 的 onCLick()</span></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">leftButtonClick</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rightButtonClick</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 类似于 Button 的setOnClickListener();</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTitleBarClickListetner</span><span class="params">(titleBarClickListener listetner)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.listener = listetner;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 内部设置按钮点击监听</span></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setButtonClickListener</span><span class="params">()</span> </span>&#123;</div><div class="line">    btnLeft.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            listener.leftButtonClick();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    btnRight.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            listener.rightButtonClick();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面剩下的一个 PicAndTextBtn 大家可以自己实现，就是作为左侧滑动视图中的小控件，一个 ImageView 和 TextView组成的。</p>
<h4 id="侧滑界面"><a href="#侧滑界面" class="headerlink" title="侧滑界面"></a>侧滑界面</h4><p><img src="/2017/04/14/ZZChatApp2/layoutslide.png" alt=""><br>如果前面都写好了下面就使用上面的控件来写滑动界面，布局很简单。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">ImageView</span>/&gt;</span> Avatar</div><div class="line">                <span class="tag">&lt;<span class="name">TextView</span>/&gt;</span> Username</div><div class="line">            <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">TextView</span>/&gt;</span> Sign</div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span>Dress Up<span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span>setting<span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span>night<span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.PicAndTextBtn</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>接下来就是实现其逻辑了，这次主要实现以下setting，dressup和profile下次实验实现。<br>实现控件的点击，虽然这个点击事件是你们自己写的，为了后面的实验一致，推荐命名最好和我一致。。。虽然我的命名也很烂。。。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">view/LayoutSlide.<span class="function">java</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> &#123;</div><div class="line">    <span class="keyword">this</span>.addView(LayoutInflater.from(context).inflate(R.layout.layout_slide, <span class="keyword">null</span>));</div><div class="line"></div><div class="line">    dressUp = (PicAndTextBtn) findViewById(R.id.patb_dressup);</div><div class="line">    profile = (PicAndTextBtn) findViewById(R.id.patb_profile);</div><div class="line">    setting = (PicAndTextBtn) findViewById(R.id.patb_setting);</div><div class="line">    night = (PicAndTextBtn) findViewById(R.id.patb_night);</div><div class="line"></div><div class="line">    dressUp.setOnClickListener(<span class="keyword">new</span> PicAndTextBtn.picAndTextBtnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(context, AtyDressUp.class);</div><div class="line">            context.startActivity(intent);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    profile.setOnClickListener(<span class="keyword">new</span> PicAndTextBtn.picAndTextBtnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(context, AtyProfile.class);</div><div class="line">            context.startActivity(intent);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    setting.setOnClickListener(<span class="keyword">new</span> PicAndTextBtn.picAndTextBtnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(context, AtySetting.class);</div><div class="line">            context.startActivity(intent);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    night.setOnClickListener(<span class="keyword">new</span> PicAndTextBtn.picAndTextBtnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (nightMode) &#123;</div><div class="line">                findViewById(R.id.layout_slide).setBackgroundColor(<span class="number">0xff878787</span>);</div><div class="line">                nightMode = <span class="keyword">false</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                findViewById(R.id.layout_slide).setBackgroundColor(<span class="number">0xffe9e9e9</span>);</div><div class="line">                nightMode = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>setting 界面的布局就不贴代码了，很简单。只分析 java 代码，其实目前也很水，也就实现了一个 Guide View 是否播放的功能。但是在之前的 Welcome 页面中还要做一点小小的修改。大家可以试验不该会怎么样。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line">AtySetting.<span class="function">java</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> &#123;</div><div class="line">    titleBar = (TitleBar) findViewById(R.id.tb_setting);</div><div class="line">    guide = (ImageView) findViewById(R.id.iv_setting_guide);</div><div class="line">    password = (ImageView) findViewById(R.id.iv_setting_password);</div><div class="line">    offline = (ImageView) findViewById(R.id.iv_setting_offline);</div><div class="line"></div><div class="line">    guideMode = getSharedPreferences(<span class="string">"zzchat"</span>, MODE_PRIVATE).getBoolean(<span class="string">"guide"</span>, <span class="keyword">true</span>);</div><div class="line">    guide.setImageResource(guideMode ? R.drawable.btnselected : R.drawable.btnunselected);</div><div class="line">    password.setImageResource(passwordMode ? R.drawable.btnselected : R.drawable.btnunselected);</div><div class="line">    offline.setImageResource(offlineMode ? R.drawable.btnselected : R.drawable.btnunselected);</div><div class="line"></div><div class="line">    guide.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (guideMode) &#123;</div><div class="line">                guide.setImageResource(R.drawable.btnunselected);</div><div class="line">                guideMode = <span class="keyword">false</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                guide.setImageResource(R.drawable.btnselected);</div><div class="line">                guideMode = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    password.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (passwordMode) &#123;</div><div class="line">                password.setImageResource(R.drawable.btnunselected);</div><div class="line">                passwordMode = <span class="keyword">false</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                password.setImageResource(R.drawable.btnselected);</div><div class="line">                passwordMode = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    offline.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (offlineMode) &#123;</div><div class="line">                offline.setImageResource(R.drawable.btnunselected);</div><div class="line">                offlineMode = <span class="keyword">false</span>;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                offline.setImageResource(R.drawable.btnselected);</div><div class="line">                offlineMode = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    titleBar.setTitleBarClickListetner(<span class="keyword">new</span> TitleBar.titleBarClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">leftButtonClick</span><span class="params">()</span> </span>&#123;</div><div class="line">            SharedPreferences sharedPreferences = getSharedPreferences(<span class="string">"zzchat"</span>, MODE_PRIVATE);</div><div class="line">            SharedPreferences.Editor editor = sharedPreferences.edit();</div><div class="line">            editor.putBoolean(<span class="string">"guide"</span>, guideMode);</div><div class="line">            editor.apply();</div><div class="line">            finish();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rightButtonClick</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>night 功能也基本没有实现，留给大家完善了。。。</p>
<h4 id="chats"><a href="#chats" class="headerlink" title="chats"></a>chats</h4><p><img src="/2017/04/14/ZZChatApp2/layoutchats.png" alt=""><br>下面开始 Chat 页面的设计。同理后面的 Contact 和 Moment 也是和这个类似，大家参考源码可以把代码写了，当做练习。有些坑自己不踩不知道多深。</p>
<p>把 titleBar 引进来是很简单的。直接在主界面中加就是了。</p>
<p>实现 Chats 这个列表功能我们使用更加易用的 RecyclerView 下次实验实现的聊天界面我们可以试试 ListView。好了，都决定好了就开始写代码吧。</p>
<p>和前面一样，一个 RecyclerView 怎么加载数据？答案就是通过 Adapter ，问题又来了，那么加载的怎样的数据呢？所以现在目的很明确，就是设计数据 Item</p>
<p>布局是一个头像，一个Username, 一个签名</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">item_user.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">"@+id/iv_item_avatar"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@+id/tv_item_username"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@+id/tv_item_sign"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>有了布局，接下来就是自己构造适配器加载布局。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">adapter/AdapterUserItem.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterUserItem</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">AdapterUserItem</span>.<span class="title">BaseViewHolder</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Context context;</div><div class="line">    <span class="keyword">private</span> List&lt;UserItemMsg&gt; userItemMsgList;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdapterUserItem</span><span class="params">(Context context, List&lt;UserItemMsg&gt; userItemMsgList)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.context = context;</div><div class="line">        <span class="keyword">this</span>.userItemMsgList = userItemMsgList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> BaseViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BaseViewHolder(LayoutInflater.from(context).inflate(R.layout.item_user, parent, <span class="keyword">false</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(BaseViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        holder.ivAvatar.setImageResource(userItemMsgList.get(position).getIconID());</div><div class="line">        holder.tvUsername.setText(userItemMsgList.get(position).getUsername());</div><div class="line">        holder.tvSign.setText(userItemMsgList.get(position).getSign());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (userItemMsgList == <span class="keyword">null</span> ? <span class="number">0</span> : userItemMsgList.size());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BaseViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">private</span> ImageView ivAvatar;</div><div class="line">        <span class="keyword">private</span> TextView tvUsername;</div><div class="line">        <span class="keyword">private</span> TextView tvSign;</div><div class="line"></div><div class="line">        BaseViewHolder(View itemView) &#123;</div><div class="line">            <span class="keyword">super</span>(itemView);</div><div class="line">            ivAvatar = (ImageView) itemView.findViewById(R.id.iv_item_avatar);</div><div class="line">            tvUsername = (TextView) itemView.findViewById(R.id.tv_item_username);</div><div class="line">            tvSign = (TextView) itemView.findViewById(R.id.tv_item_sign);</div><div class="line"></div><div class="line">            itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                    Toast.makeText(context, tvUsername.getText().toString(), Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我把代码全贴上来了，其实这算是一个经常用的模板了吧。RecyclerView 内部自己实现了 ViewHolder 类，所以说使用方便。</p>
<p>下面就是比较有代表性的 recyclerView 代码实现，可以注意注意 setLayoutManager() 函数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    context = getContext();</div><div class="line">    recyclerView = (RecyclerView) rootView.findViewById(R.id.chatsRecycleView);</div><div class="line"></div><div class="line">    loadData();</div><div class="line"></div><div class="line">    adapterUserItem = <span class="keyword">new</span> AdapterUserItem(context, userItemMsgList);</div><div class="line"></div><div class="line">    recyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(context));</div><div class="line">    recyclerView.setAdapter(adapterUserItem);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>怕篇幅过多，细的知识点不会太陈述，主要是对整个一个 App 实现过程中思考的一个介绍，不会觉得自己无从下手。</p>
<p>。。。。。。。。好像篇幅有点长了，还没有涉及服务端就这么多了。。。剩下的效果大家可以按动图显示的自己实现，方法其实全概括了。</p>
<p><img src="/2017/04/14/ZZChatApp2/layoutcontacts.png" alt=""> <img src="/2017/04/14/ZZChatApp2/layoutmoments.png" alt=""></p>
<p>最后说下 TabHost 的一点东西</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">tabLayout.addOnTabSelectedListener(<span class="keyword">new</span> TabLayout.OnTabSelectedListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabSelected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line">        tabList.get(tab.getPosition()).setIcon(ImageManager.imageID[tab.getPosition() + <span class="number">3</span>]);</div><div class="line">        tabLayout.setTabTextColors(</div><div class="line">                ContextCompat.getColor(AtyMain.<span class="keyword">this</span>, R.color.colorBlack),</div><div class="line">                ContextCompat.getColor(AtyMain.<span class="keyword">this</span>, R.color.colorBlue)</div><div class="line">        );</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabUnselected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line">        tabList.get(tab.getPosition()).setIcon(ImageManager.imageID[tab.getPosition()]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabReselected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>为什么要把下面的代码放在监听中执行，而不是在外面。大家可以做做实验，点击Tab和滑动ViewPager就能发现异同。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tabLayout.setTabTextColors(</div><div class="line">        ContextCompat.getColor(AtyMain.<span class="keyword">this</span>, R.color.colorBlack),</div><div class="line">        ContextCompat.getColor(AtyMain.<span class="keyword">this</span>, R.color.colorBlue)</div><div class="line">);</div></pre></td></tr></table></figure>
<p>还有前面遗留的登录界面 Tab 上面的字母是大写，怎么解决？大家可以自己查资料，再看看我提供的源码。这次就这样，下次实现剩下的 DressUp，Profile 和聊天界面。再下次就是网络编程啦！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/ZZChat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现一个类似QQ的社交聊天工具-2&quot;&gt;&lt;a href=&quot;#实现一个类似QQ的社交聊天工具-2&quot; class=&quot;headerlink&quot; title=&quot;实现一个类似QQ的社交聊天工具-2&quot;&gt;&lt;/a&gt;实现一个类似QQ的社交聊天工具-2&lt;/h2&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;做好【ZZChatApp1】中的内容并且下载了&lt;a href=&quot;http://fitzeng.org/2017/04/14/ZZChatApp1/&quot;&gt;实现一个类似QQ的社交聊天工具-1&lt;/a&gt;中的资料就可以开始下面的了&lt;/p&gt;
&lt;h3 id=&quot;实现目标&quot;&gt;&lt;a href=&quot;#实现目标&quot; class=&quot;headerlink&quot; title=&quot;实现目标&quot;&gt;&lt;/a&gt;实现目标&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2017/04/14/ZZChatApp2/Demo.gif&quot; alt=&quot;GIF&quot;&gt;&lt;br&gt;前面只是实现一个基本的框架，这次我们要往主界面里面添加内容，代码较多，最好自己看这篇文章时也参考我提供的第二阶段源码。&lt;br&gt;主要练习的是自定义控件&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="ZZChat" scheme="http://fitzeng.org/tags/ZZChat/"/>
    
  </entry>
  
  <entry>
    <title>实现一个类似QQ的社交聊天工具-1</title>
    <link href="http://fitzeng.org/2017/04/14/ZZChatApp1/"/>
    <id>http://fitzeng.org/2017/04/14/ZZChatApp1/</id>
    <published>2017-04-14T03:00:00.000Z</published>
    <updated>2017-07-01T10:10:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a></p>
<h2 id="实现一个类似QQ的社交聊天工具-1"><a href="#实现一个类似QQ的社交聊天工具-1" class="headerlink" title="实现一个类似QQ的社交聊天工具-1"></a>实现一个类似QQ的社交聊天工具-1</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul>
<li>AndroidStudio</li>
<li>模拟器</li>
</ul>
<p><a href="https://pan.baidu.com/s/1c1SabD2" target="_blank" rel="external">资料</a> 密码: jme4<br>大家将图片复制到drawable供接下来的使用，部分图片源于网络，不做商业用途应该不算侵权吧。如果有，我会删除资源的。</p>
<h3 id="实现目标"><a href="#实现目标" class="headerlink" title="实现目标"></a>实现目标</h3><p><img src="/2017/04/14/ZZChatApp1/Demo.gif" alt=""><br>按照最先开始的计划，我们只实现一个静态的ZZChat界面，考验的就是Android控件的基本知识。如果碰到没见到过的控件可以去Google看开发文档。</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><a id="more"></a>
<p><img src="/2017/04/14/ZZChatApp1/showfile1.png" alt=""><br>在看到实现的设计下，我们最先想到的是有四的Activity（欢迎界面，引导页，登录注册，主界面），同时对应四个布局</p>
<h4 id="修改Manifest"><a href="#修改Manifest" class="headerlink" title="修改Manifest"></a>修改Manifest</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">AndroidManifest.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line">    <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:icon</span>=<span class="string">"@drawable/icon"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">    <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".aty.AtyWelcome"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".aty.AtyGuide"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".aty.AtyLoginOrRegister"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".aty.AtyMain"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="欢迎界面"><a href="#欢迎界面" class="headerlink" title="欢迎界面"></a>欢迎界面</h4><ul>
<li>全屏</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">onCreate()</div><div class="line"></div><div class="line">getSupportActionBar().hide();</div><div class="line">getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);</div></pre></td></tr></table></figure>
<ul>
<li>引导界面只在首次开启时显示</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">AtyWelcome.<span class="function">java</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initLoad</span><span class="params">()</span> &#123;</div><div class="line">    SharedPreferences sharedPreferences = getSharedPreferences(<span class="string">"zzchat"</span>, MODE_PRIVATE);</div><div class="line">    <span class="keyword">boolean</span> welcome = sharedPreferences.getBoolean(<span class="string">"welcome"</span>, <span class="keyword">true</span>);</div><div class="line">    <span class="keyword">if</span> (!welcome) &#123;</div><div class="line">        handler.sendEmptyMessageDelayed(GO_HOME, DELAY);</div><div class="line"></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        handler.sendEmptyMessageDelayed(GO_GUIDE, DELAY);</div><div class="line">        SharedPreferences.Editor editor = sharedPreferences.edit();</div><div class="line">        editor.putBoolean(<span class="string">"welcome"</span>, <span class="keyword">false</span>);</div><div class="line">        editor.apply();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Handler handler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> GO_GUIDE: &#123;</div><div class="line">                goGuide();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">case</span> GO_HOME: &#123;</div><div class="line">                goHome();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="引导页"><a href="#引导页" class="headerlink" title="引导页"></a>引导页</h4><p>引导页我们使用一个ViewPager实现，如果之前不熟悉的可以看我的另一个<a href="http://fitzeng.org/2017/04/07/SlideShow/">利用ViewPager做的轮播图</a>。</p>
<ul>
<li>布局</li>
</ul>
<p>相信看了前面动图的效果对布局实现应该是有底了</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">aty_guide.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/vp_guide"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_indicator_dot1"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/selected"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"10dp"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_indicator_dot2"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/unselected"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"10dp"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/iv_indicator_dot3"</span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/unselected"</span></div><div class="line">            <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"10dp"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>适配布局</li>
</ul>
<p>到这了，如何实现ViewPager加载布局就是我们现在应该想的事了。<br>目前可以最先想到和做到的是实现三个加载的布局，为了方便我们只使用一个ImageView来实现，同理其他三个页面也是类似，第三个多加一个Enter入口进入主页。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">guide_page1.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@drawable/shot2"</span></div><div class="line">        <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>适配器</li>
</ul>
<p>现在的情况是有了布局和资源页面，怎么把资源页面加载进布局，这时就要用到Adapter了，也就是适配器。<br>新建一个adapter资源包<br>新建一个AdapterGuideViewPager类继承PagerAdapter</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">adapter/AdapterGuideViewPager.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">public</span> <span class="title">class</span> <span class="title">AdapterGuideViewPager</span> <span class="keyword">extends</span> <span class="title">PagerAdapter</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Context context;</div><div class="line">    <span class="keyword">private</span> List&lt;View&gt; viewList;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdapterGuideViewPager</span><span class="params">(Context context, List&lt;View&gt; viewList)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.context = context;</div><div class="line">        <span class="keyword">this</span>.viewList = viewList;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> viewList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isViewFromObject</span><span class="params">(View view, Object object)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> (view == object);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroyItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position, Object object)</span> </span>&#123;</div><div class="line">        container.removeView(viewList.get(position));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">instantiateItem</span><span class="params">(ViewGroup container, <span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        container.addView(viewList.get(position));</div><div class="line">        <span class="keyword">return</span> viewList.get(position);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>一定要注意getCount()和isViewFromObject()函数的实现。</p>
<p>有了适配器，只要给adapter添加之前的guide视图作为资源，再给viewPager设置资源适配器。基本效果就实现了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">AtyGuide.<span class="function">java</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> &#123;</div><div class="line">    <span class="comment">// load view</span></div><div class="line">    <span class="keyword">final</span> LayoutInflater inflater = LayoutInflater.from(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">    viewList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    viewList.add(inflater.inflate(R.layout.guide_page1, <span class="keyword">null</span>));</div><div class="line">    viewList.add(inflater.inflate(R.layout.guide_page2, <span class="keyword">null</span>));</div><div class="line">    viewList.add(inflater.inflate(R.layout.guide_page3, <span class="keyword">null</span>));</div><div class="line"></div><div class="line">    <span class="comment">// bind Id with imageView</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; indicatorDotIds.length; i++) &#123;</div><div class="line">        imageViews[i] = (ImageView) findViewById(indicatorDotIds[i]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    adapterGuideViewPager = <span class="keyword">new</span> AdapterGuideViewPager(<span class="keyword">this</span>, viewList);</div><div class="line"></div><div class="line">    viewPager = (ViewPager) findViewById(R.id.vp_guide);</div><div class="line">    viewPager.setAdapter(adapterGuideViewPager);</div><div class="line">    viewPager.addOnPageChangeListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">    btnToMain = (Button) (viewList.get(<span class="number">2</span>)).findViewById(R.id.btn_to_main);</div><div class="line">    btnToMain.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(AtyGuide.<span class="keyword">this</span>, AtyLoginOrRegister.class);</div><div class="line">            startActivity(intent);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>指示器实现</li>
</ul>
<p>当前页面是第几页，要给用户一个比较明显的提示，可以利用两个不同颜色的小圆点。但是要想知道移动的改变就要实现监听事件</p>
<p>实现onPageSelected()方法就可以了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">AtyGuide.<span class="function">java</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; indicatorDotIds.length; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (i != position) &#123;</div><div class="line">            imageViews[i].setImageResource(R.drawable.unselected);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            imageViews[i].setImageResource(R.drawable.selected);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="登录注册"><a href="#登录注册" class="headerlink" title="登录注册"></a>登录注册</h5><ul>
<li>界面</li>
</ul>
<p>这里可以自己设计，我使用TabHost实现，学习使用不同控件，不过布局值得主页的是ID的设置，自己可以试试如果不这样会出现什么效果。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"@drawable/shot1"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TabHost</span> <span class="attr">android:id</span>=<span class="string">"@+id/tabHost"</span>&gt;</span></div><div class="line">        </div><div class="line">        <span class="tag">&lt;<span class="name">TabWidget</span> <span class="attr">android:id</span>=<span class="string">"@android:id/tabs"</span>&gt;</span> </div><div class="line">        <span class="tag">&lt;/<span class="name">TabWidget</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">android:id</span>=<span class="string">"@android:id/tabcontent"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span> Login Layout <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">LinearLayout</span>&gt;</span> Register Layout <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">TabHost</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>跳转</li>
</ul>
<p>目前还没进行数据处理，所以我们直接跳转进入界面</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    tabHost = (TabHost) findViewById(R.id.tabHost);</div><div class="line"></div><div class="line">    btnLogin = (Button) findViewById(R.id.btn_login);</div><div class="line">    etLoginUsername = (EditText) findViewById(R.id.et_login_username);</div><div class="line">    etLoginPassword = (EditText) findViewById(R.id.et_login_password);</div><div class="line"></div><div class="line">    btnRegister = (Button) findViewById(R.id.btn_register);</div><div class="line">    etRegisterUsername = (EditText) findViewById(R.id.et_register_username);</div><div class="line">    etRegisterPassword = (EditText) findViewById(R.id.et_register_password);</div><div class="line">    etInsurePassword = (EditText) findViewById(R.id.et_insure_password);</div><div class="line"></div><div class="line">    tabHost.setup();</div><div class="line">    tabHost.addTab(tabHost.newTabSpec(<span class="string">"Login"</span>).setIndicator(<span class="string">"Login"</span>).setContent(R.id.layout_login));</div><div class="line">    tabHost.addTab(tabHost.newTabSpec(<span class="string">"Register"</span>).setIndicator(<span class="string">"Register"</span>).setContent(R.id.layout_register));</div><div class="line"></div><div class="line">    btnLogin.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    btnRegister.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">        <span class="keyword">case</span> R.id.btn_login: &#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AtyMain.class);</div><div class="line">            startActivity(intent);</div><div class="line">            finish();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> R.id.btn_register: &#123;</div><div class="line">            Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, AtyMain.class);</div><div class="line">            startActivity(intent);</div><div class="line">            finish();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>添加依赖库</li>
</ul>
<p><img src="/2017/04/14/ZZChatApp1/packageerror.png" alt=""><br>如果你遇到上面的bug，说明到现在我们的TabHost是无法工作的，因为缺少一个依赖库。<br>compile ‘com.android.support:design:2x.x.x’</p>
<p>添加方式是在File-&gt;Project Structure 在弹出的窗口中选择app,之后操作看图<br><img src="/2017/04/14/ZZChatApp1/addpackage.png" alt=""><br>此时需要重新Gradle, 这时可能一个错误在build.gradle。按Alt + Enter, 选择忽略就好。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span></span></div><div class="line">    <span class="title">androidTestCompile</span><span class="params">(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span></div><div class="line">        exclude group: <span class="string">'com.android.support'</span>, <span class="keyword">module</span>: <span class="string">'support-annotations'</span></div><div class="line">    &#125;)</div><div class="line">    compile 'com.android.support:appcompat-v7:25.3.1'</div><div class="line">    compile 'com.android.support.constraint:constraint-layout:1.0.1'</div><div class="line">    testCompile 'junit:junit:4.12'</div><div class="line">    compile 'com.android.support:design:26.0.0-alpha1'</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><p>之前的页面基本实现，那么主界面如何实现，参考QQ，为了避免控件上的使用难度，我们直接用google提供的DrawerLayout<br>写代码之前先理清思路，这个主界面明显是包含三个页面加一个侧换页面，也就是四个。<br>新建一个view资源文件，创建四个视图类<br>接着新建四个布局供类加载</p>
<ul>
<li>布局</li>
</ul>
<p>这个布局有要主页的地方<br>侧滑视图要设置android:layout_gravity=”start” 属性。<br>DrawerLayout最好为根容器<br>推荐如下布局<br>最外层就是DrawerLayout，中间只有一个主内容和一个侧滑布局。你要添加的内容全部在主内容中实现。</p>
<p>这里采用ViewPager + TabLayout 来实现，不熟悉的点<a href="http://fitzeng.org/2017/04/07/TabLayout/">这里</a></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">aty_main.xml</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.widget.DrawerLayout</span> &gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span> &gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span> &gt;</span> <span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span> &gt;</span> <span class="tag">&lt;/<span class="name">android.support.design.widget.TabLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">org.fitzeng.zzchat.view.SlideLayout</span> <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span>&gt;</span>侧换视图<span class="tag">&lt;/<span class="name">org.fitzeng.zzchat.view.SlideLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.widget.DrawerLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>加载页面</li>
</ul>
<p>以Chats为例</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#09868f"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LayoutChats</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> View rootView;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        rootView = inflater.inflate(R.layout.layout_chats, container, <span class="keyword">false</span>);</div><div class="line">        <span class="keyword">return</span> rootView;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>十分简单，看代码就能懂</p>
<p>之前已经使用了侧滑视图，接下来的三个视图分别对应加载进了三个类。如何将这些视图加载进主界面，前面已经说过如何加载经viewPager了，这里也是一样的。实现一个适配器。</p>
<ul>
<li>适配器</li>
</ul>
<p>和前面不一样的是前面直接inflate一个布局进资源列表，而这里是把布局加载进类中了。所以实现方式稍微有点不一样, 这样对布局的内容控制性个人认为较好,因为布局中的子控件逻辑可以在各自的类中实现。看代码就懂了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">adapter/AdapterMainViewPager.java</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdapterMainViewPager</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> List&lt;Fragment&gt; fragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AdapterMainViewPager</span><span class="params">(FragmentManager fragmentManager)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(fragmentManager);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFragment</span><span class="params">(Fragment fragment)</span> </span>&#123;</div><div class="line">        fragmentList.add(fragment);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> fragmentList.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> fragmentList.size();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">()</span> </span>&#123;</div><div class="line">    drawable = (DrawerLayout) findViewById(R.id.dl_main);</div><div class="line">    viewPager = (ViewPager) findViewById(R.id.vp_main);</div><div class="line">    tabLayout = (TabLayout) findViewById(R.id.tl_main);</div><div class="line"></div><div class="line">    tabList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    AdapterMainViewPager adapter = <span class="keyword">new</span> AdapterMainViewPager(getSupportFragmentManager());</div><div class="line"></div><div class="line">    adapter.addFragment(<span class="keyword">new</span> LayoutChats());</div><div class="line">    adapter.addFragment(<span class="keyword">new</span> LayoutContacts());</div><div class="line">    adapter.addFragment(<span class="keyword">new</span> LayoutMoments());</div><div class="line"></div><div class="line">    viewPager.setAdapter(adapter);</div><div class="line"></div><div class="line">    tabLayout.setupWithViewPager(viewPager);</div><div class="line"></div><div class="line">    tabList.add(tabLayout.getTabAt(<span class="number">0</span>));</div><div class="line">    tabList.add(tabLayout.getTabAt(<span class="number">1</span>));</div><div class="line">    tabList.add(tabLayout.getTabAt(<span class="number">2</span>));</div><div class="line">    tabList.get(<span class="number">0</span>).setIcon(R.drawable.icon).setText(<span class="string">"Chats"</span>);</div><div class="line">    tabList.get(<span class="number">1</span>).setIcon(R.drawable.icon).setText(<span class="string">"Contacts"</span>);</div><div class="line">    tabList.get(<span class="number">2</span>).setIcon(R.drawable.icon).setText(<span class="string">"Moments"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码比较简洁，不知道意思的可以按ctrl点击类名或方法名看源码注释。</p>
<p><img src="/2017/04/14/ZZChatApp1/showfile2.png" alt=""><br>到这里基本的效果实现了，不清楚了可以参考阶段性源码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/ZZChat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现一个类似QQ的社交聊天工具-1&quot;&gt;&lt;a href=&quot;#实现一个类似QQ的社交聊天工具-1&quot; class=&quot;headerlink&quot; title=&quot;实现一个类似QQ的社交聊天工具-1&quot;&gt;&lt;/a&gt;实现一个类似QQ的社交聊天工具-1&lt;/h2&gt;&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AndroidStudio&lt;/li&gt;
&lt;li&gt;模拟器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1c1SabD2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料&lt;/a&gt; 密码: jme4&lt;br&gt;大家将图片复制到drawable供接下来的使用，部分图片源于网络，不做商业用途应该不算侵权吧。如果有，我会删除资源的。&lt;/p&gt;
&lt;h3 id=&quot;实现目标&quot;&gt;&lt;a href=&quot;#实现目标&quot; class=&quot;headerlink&quot; title=&quot;实现目标&quot;&gt;&lt;/a&gt;实现目标&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2017/04/14/ZZChatApp1/Demo.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;按照最先开始的计划，我们只实现一个静态的ZZChat界面，考验的就是Android控件的基本知识。如果碰到没见到过的控件可以去Google看开发文档。&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="ZZChat" scheme="http://fitzeng.org/tags/ZZChat/"/>
    
  </entry>
  
  <entry>
    <title>实现一个类似QQ的社交聊天工具-0</title>
    <link href="http://fitzeng.org/2017/04/14/ZZChatApp0/"/>
    <id>http://fitzeng.org/2017/04/14/ZZChatApp0/</id>
    <published>2017-04-14T02:00:00.000Z</published>
    <updated>2017-07-01T10:10:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a></p>
<h2 id="实现一个类似QQ的社交聊天工具-0"><a href="#实现一个类似QQ的社交聊天工具-0" class="headerlink" title="实现一个类似QQ的社交聊天工具-0"></a>实现一个类似QQ的社交聊天工具-0</h2><ul>
<li>实现效果</li>
</ul>
<p><img src="/2017/04/14/ZZChatApp0/Demo.gif" alt=""> <img src="/2017/04/14/ZZChatApp0/Demo1.gif" alt=""></p>
<ul>
<li><p>原因<br>由于在间间断断的学Android，所以学的知识比较杂，想做个小项目来复习复习。所以之前在课后十天左右的时间完成了一个刚刚具备聊天功能的App，由于这几天拼命的搜寻资料，发现网上并没有一个完整的开发过程的文章。平时也就是看看大牛们的博客学习，现在觉得也要多和大家分享自己学到的知识，共同进步。可能你在这学不到技术深度的东西，但是说不定可以扩展你的技术广度。</p>
</li>
<li><p>目标人群<br>推荐给正处于Android进阶的人群，想写一个App却不知道如何开始。希望我的这些文字对你能有帮助。最少基本过了一遍《第一行代码》，读过《Android群英传》就更好了。由于我是以一个遇到问题解决问题的视角来写的，所以基本会让你的开发过程思路清晰，知道这么做的目的和好处。同时这也是一个开始完全不知道怎么写到实现基本功能的心路历程描述。所以应该会有点价值吧。当然涉及的东西确实有点多，所以不可能一一叙述，欢迎大家留言讨论。</p>
</li>
<li><p>知识<br>数据库相关知识（基本的增删改查）<br>Java（Java可视化界面编程，Socket网络通信）<br>Android</p>
</li>
<li><p>软件<br>Android: Android Studio<br>本地服务器搭建： XAMPP（Apache + MySQL）<br>服务器界面：Eclipse JavaEE</p>
</li>
</ul>
<a id="more"></a>
<ul>
<li>实现思路<br>在电脑上利用Apache + MySQL搭建一个供服务端访问的数据库，有了数据库，就要写一个服务端在电脑上运行，读写数据库数据。开启一个线程一直检测是否有客户发送连接请求，有的话accept，并且给这个连接的用户开一个单独线程供客户端进行通讯。而客户端发送请求给服务器，所以客户端要有一个Action来激活发送请求，也就是我们的点击滑动等事件。但是同时又要接受来自服务端的数据，所以我们要使客户端的Action操作和与服务端通讯分别用两个不同的线程管理。不知道我讲没讲请，下面用图来描述一下。</li>
</ul>
<p><img src="/2017/04/14/ZZChatApp0/ChartApp.png" alt=""></p>
<ul>
<li><p>实现程度<br>由于学业较忙，博客只会更新到目前程度，接下的过程大家可以定制属于你自己的聊天软件。<br>逻辑框架完成度：60%<br>界面设计完成度：40%<br>已实现：服务端，通讯协议，登录，聊天。<br>接下来的功能基本可以根据上面的功能实现。</p>
</li>
<li><p>建议<br>1 使用真机调试<br>2 在整个过程中一定会遇到各种问题 Log + 断点 -&gt; StackOverflow 基本可以解决初学者99%的问题。</p>
</li>
<li><p>开始学习<br><a href="http://fitzeng.org/2017/04/14/ZZChatApp1/">实现一个类似QQ的社交聊天工具-1</a><br><a href="http://fitzeng.org/2017/04/14/ZZChatApp2/">实现一个类似QQ的社交聊天工具-2</a><br><a href="http://fitzeng.org/2017/04/14/ZZChatApp3/">实现一个类似QQ的社交聊天工具-3</a><br><a href="http://fitzeng.org/2017/04/14/ZZChatApp4/">实现一个类似QQ的社交聊天工具-4</a></p>
</li>
</ul>
<ul>
<li>最后<br>这个App我会继续在<a href="https://github.com/mk43/ZZChat" target="_blank" rel="external">GitHub</a>完善，Blog是否更看课余时间，欢迎大家关注。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/ZZChat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现一个类似QQ的社交聊天工具-0&quot;&gt;&lt;a href=&quot;#实现一个类似QQ的社交聊天工具-0&quot; class=&quot;headerlink&quot; title=&quot;实现一个类似QQ的社交聊天工具-0&quot;&gt;&lt;/a&gt;实现一个类似QQ的社交聊天工具-0&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;实现效果&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2017/04/14/ZZChatApp0/Demo.gif&quot; alt=&quot;&quot;&gt; &lt;img src=&quot;/2017/04/14/ZZChatApp0/Demo1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;原因&lt;br&gt;由于在间间断断的学Android，所以学的知识比较杂，想做个小项目来复习复习。所以之前在课后十天左右的时间完成了一个刚刚具备聊天功能的App，由于这几天拼命的搜寻资料，发现网上并没有一个完整的开发过程的文章。平时也就是看看大牛们的博客学习，现在觉得也要多和大家分享自己学到的知识，共同进步。可能你在这学不到技术深度的东西，但是说不定可以扩展你的技术广度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;目标人群&lt;br&gt;推荐给正处于Android进阶的人群，想写一个App却不知道如何开始。希望我的这些文字对你能有帮助。最少基本过了一遍《第一行代码》，读过《Android群英传》就更好了。由于我是以一个遇到问题解决问题的视角来写的，所以基本会让你的开发过程思路清晰，知道这么做的目的和好处。同时这也是一个开始完全不知道怎么写到实现基本功能的心路历程描述。所以应该会有点价值吧。当然涉及的东西确实有点多，所以不可能一一叙述，欢迎大家留言讨论。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;知识&lt;br&gt;数据库相关知识（基本的增删改查）&lt;br&gt;Java（Java可视化界面编程，Socket网络通信）&lt;br&gt;Android&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件&lt;br&gt;Android: Android Studio&lt;br&gt;本地服务器搭建： XAMPP（Apache + MySQL）&lt;br&gt;服务器界面：Eclipse JavaEE&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
      <category term="ZZChat" scheme="http://fitzeng.org/tags/ZZChat/"/>
    
  </entry>
  
  <entry>
    <title>实现一个表情键盘控件</title>
    <link href="http://fitzeng.org/2017/04/07/EmojiKeyboard/"/>
    <id>http://fitzeng.org/2017/04/07/EmojiKeyboard/</id>
    <published>2017-04-07T05:00:00.000Z</published>
    <updated>2017-07-01T10:12:31.000Z</updated>
    
    <content type="html"><![CDATA[<hr>
<p><a href="https://github.com/mk43/BaiduAcademy" target="_blank" rel="external">GitHub</a></p>
<h3 id="任务目的"><a href="#任务目的" class="headerlink" title="任务目的"></a>任务目的</h3><hr>
<ul>
<li>学习android控件的封装，viewPager的使用，以及SpannableString对文字加图片的处理</li>
</ul>
<h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><hr>
<ul>
<li>能进行表情的输入，删除</li>
<li>表情大于一页，且可以翻页</li>
<li>表情键盘和输入法键盘的弹出逻辑要正确</li>
</ul>
<h3 id="结果演示"><a href="#结果演示" class="headerlink" title="结果演示"></a>结果演示</h3><hr>
<p><img src="/2017/04/07/EmojiKeyboard/show.png" alt=""><img src="/2017/04/07/EmojiKeyboard/EmojiDemo.gif" alt=""></p>
<a id="more"></a>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><hr>
<p>一开始，其实也不知道从哪里下手，开始在网上浏览了一些博客，大概有了解决的思路，下面就从我个人的解决思路出发实现一个一个小功能。</p>
<ul>
<li>step 1: 设计总体布局</li>
</ul>
<p>采用LinearLayout基本上是上(textView)中(func Bar)下(keyboard)的设计，为了方便控制，keyboard的布局采用自定义，布局代码如下。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">org.fitzeng.emojikeyboard.simpleemojikeyboard.SimpleEmojiEditLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/etSimpleEmojiEdit"</span></div><div class="line">    <span class="attr">android:hint</span>=<span class="string">"@string/typeing_something_here"</span></div><div class="line">    <span class="attr">android:maxLines</span>=<span class="string">"30"</span></div><div class="line">    <span class="attr">android:textSize</span>=<span class="string">"24sp"</span></div><div class="line">    <span class="attr">android:gravity</span>=<span class="string">"top"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"@null"</span></div><div class="line">    <span class="attr">android:layout_margin</span>=<span class="string">"8dp"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"@color/colorPrimary"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span>&gt;</div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/touchIcon"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/an_icon_button"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/btnDelete"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@drawable/icon_delete_normal"</span></div><div class="line">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"@dimen/dp40"</span></div><div class="line">        <span class="attr">android:contentDescription</span>=<span class="string">"@string/delete"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">org.fitzeng.emojikeyboard.simpleemojikeyboard.SimpleEmojiKeyboardLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/simpleEmojiKeyboardLayout"</span></div><div class="line">    <span class="attr">android:visibility</span>=<span class="string">"gone"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">org.fitzeng.emojikeyboard.simpleemojikeyboard.SimpleEmojiKeyboardLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>step 2：大概实现布局控件</li>
</ul>
<p>设计好控件，就进行实现，通过对func Bar的设计，实现键盘的收缩功能。</p>
<p><img src="/2017/04/07/EmojiKeyboard/slipDown.png" alt=""><br><img src="/2017/04/07/EmojiKeyboard/slipUp.png" alt=""></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Click icon to make keyboard hide or appear</span></div><div class="line">touchIcon.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (simpleEmojiKeyboardLayout.getVisibility() == View.GONE) &#123;</div><div class="line">            simpleEmojiKeyboardLayout.setVisibility(View.VISIBLE);</div><div class="line">            simpleEmojiKeyboardLayout.slipUp();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            simpleEmojiKeyboardLayout.setVisibility(View.GONE);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// Make keyboard appear when click to edit</span></div><div class="line">simpleEmojiEditLayout.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (simpleEmojiKeyboardLayout.getVisibility() == View.GONE) &#123;</div><div class="line">            simpleEmojiKeyboardLayout.slipUp();</div><div class="line">            simpleEmojiKeyboardLayout.setVisibility(View.VISIBLE);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * keyboard slip out</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">slipUp</span><span class="params">()</span> </span>&#123;</div><div class="line">    LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) <span class="keyword">this</span>.getLayoutParams();</div><div class="line">    layoutParams.height = (<span class="keyword">int</span>) (getMeasuredWidth() * <span class="number">0.7</span>);</div><div class="line">    <span class="keyword">this</span>.setLayoutParams(layoutParams);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>step 3: 封装表情加入keyboard</li>
</ul>
<p>将emoji封装成一个对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Smile</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resId;</div><div class="line">    <span class="keyword">private</span> String info;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Smile</span><span class="params">(<span class="keyword">int</span> resId, String info)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.resId = resId;</div><div class="line">        <span class="keyword">this</span>.info = info;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getResId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> resId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResId</span><span class="params">(<span class="keyword">int</span> resId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.resId = resId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> info;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(String info)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.info = info;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>为了方便管理，把表情资源都添加进一个Manager类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmojiManager</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Smile&gt; smileList;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmojiManager</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.context = context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Smile&gt; <span class="title">getSmileList</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(smileList==<span class="keyword">null</span>)&#123;</div><div class="line">            smileList=<span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1001,<span class="string">"[e]1001[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1002,<span class="string">"[e]1002[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1003,<span class="string">"[e]1003[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1004,<span class="string">"[e]1004[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1005,<span class="string">"[e]1005[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1006,<span class="string">"[e]1006[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1007,<span class="string">"[e]1007[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1008,<span class="string">"[e]1008[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1009,<span class="string">"[e]1009[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1010,<span class="string">"[e]1010[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1011,<span class="string">"[e]1011[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1012,<span class="string">"[e]1012[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1013,<span class="string">"[e]1013[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1014,<span class="string">"[e]1014[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1015,<span class="string">"[e]1015[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1016,<span class="string">"[e]1016[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1017,<span class="string">"[e]1017[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1018,<span class="string">"[e]1018[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1019,<span class="string">"[e]1019[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1020,<span class="string">"[e]1020[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1021,<span class="string">"[e]1021[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1022,<span class="string">"[e]1022[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1023,<span class="string">"[e]1023[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1024,<span class="string">"[e]1024[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1025,<span class="string">"[e]1025[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1026,<span class="string">"[e]1026[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1027,<span class="string">"[e]1027[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1028,<span class="string">"[e]1028[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1029,<span class="string">"[e]1029[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1030,<span class="string">"[e]1030[/e]"</span>));</div><div class="line"></div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1031,<span class="string">"[e]1031[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1032,<span class="string">"[e]1032[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1033,<span class="string">"[e]1033[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1034,<span class="string">"[e]1034[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1035,<span class="string">"[e]1035[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1036,<span class="string">"[e]1036[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1037,<span class="string">"[e]1037[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1038,<span class="string">"[e]1038[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1039,<span class="string">"[e]1039[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1040,<span class="string">"[e]1040[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1041,<span class="string">"[e]1041[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1042,<span class="string">"[e]1042[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1043,<span class="string">"[e]1043[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1044,<span class="string">"[e]1044[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1045,<span class="string">"[e]1045[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1046,<span class="string">"[e]1046[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1047,<span class="string">"[e]1047[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1048,<span class="string">"[e]1048[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1049,<span class="string">"[e]1049[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1050,<span class="string">"[e]1050[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1051,<span class="string">"[e]1051[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1052,<span class="string">"[e]1052[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1053,<span class="string">"[e]1053[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1054,<span class="string">"[e]1054[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1055,<span class="string">"[e]1055[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1056,<span class="string">"[e]1056[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1057,<span class="string">"[e]1057[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1058,<span class="string">"[e]1058[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1059,<span class="string">"[e]1059[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1060,<span class="string">"[e]1060[/e]"</span>));</div><div class="line"></div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1061,<span class="string">"[e]1061[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1062,<span class="string">"[e]1062[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1063,<span class="string">"[e]1063[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1064,<span class="string">"[e]1064[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1065,<span class="string">"[e]1065[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1066,<span class="string">"[e]1066[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1067,<span class="string">"[e]1067[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1068,<span class="string">"[e]1068[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1069,<span class="string">"[e]1069[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1070,<span class="string">"[e]1070[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1071,<span class="string">"[e]1071[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1072,<span class="string">"[e]1072[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1073,<span class="string">"[e]1073[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1074,<span class="string">"[e]1074[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1075,<span class="string">"[e]1075[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1076,<span class="string">"[e]1076[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1077,<span class="string">"[e]1077[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1078,<span class="string">"[e]1078[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1079,<span class="string">"[e]1079[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1080,<span class="string">"[e]1080[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1081,<span class="string">"[e]1081[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1082,<span class="string">"[e]1082[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1083,<span class="string">"[e]1083[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1084,<span class="string">"[e]1084[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1085,<span class="string">"[e]1085[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1086,<span class="string">"[e]1086[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1087,<span class="string">"[e]1087[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1088,<span class="string">"[e]1088[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1089,<span class="string">"[e]1089[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1090,<span class="string">"[e]1090[/e]"</span>));</div><div class="line"></div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1091,<span class="string">"[e]1091[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1092,<span class="string">"[e]1092[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1093,<span class="string">"[e]1093[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1094,<span class="string">"[e]1094[/e]"</span>));</div><div class="line">            smileList.add(<span class="keyword">new</span> Smile(R.drawable.emotion_1095,<span class="string">"[e]1095[/e]"</span>));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> smileList;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>表情资源基本准备好，现在要实现的功能是把表情添加进keyboard。可以通过GridView添加资源。</p>
<p>但是在添加资源时，需要借助适配器，所以还要自己构造一个表情的适配器，基本实现是将一个imageView(表情)添加进LinearLayout作为一个布局元素。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmojiAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Smile&gt; smileList;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Context context;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EmojiAdapter</span><span class="params">(Context context, List&lt;Smile&gt; list)</span> </span>&#123;</div><div class="line">        EmojiAdapter.context = context;</div><div class="line">        smileList = list;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class="line">        ImageView imageView = <span class="keyword">new</span> ImageView(context);</div><div class="line">        imageView.setImageResource(smileList.get(position).getResId());</div><div class="line">        LinearLayout layout = <span class="keyword">new</span> LinearLayout(context);</div><div class="line">        layout.setGravity(Gravity.CENTER);</div><div class="line">        layout.addView(imageView, dp2px(<span class="number">28</span>), dp2px(<span class="number">28</span> + <span class="number">20</span>));</div><div class="line">        <span class="keyword">return</span> layout;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dp2px</span><span class="params">(<span class="keyword">float</span> dpValue)</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">float</span> scale = context.getResources().getDisplayMetrics().density;</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) (dpValue * scale + <span class="number">0.5f</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> smileList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> smileList.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> smileList.get(position).getResId();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>构造好了资源适配器就可以往GridView中加载资源了，再把GridView添加进键盘这个视图</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addEmojiToKeyBoard</span><span class="params">()</span> </span>&#123;</div><div class="line">    gridView.setNumColumns(<span class="number">8</span>);</div><div class="line">    gridView.setId(R.id.gridView);</div><div class="line">    EmojiAdapter adapter = <span class="keyword">new</span> EmojiAdapter(getContext(), EmojiManager.getSmileList());</div><div class="line">    gridView.setAdapter(adapter);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    addEmojiToKeyBoard();</div><div class="line">    <span class="keyword">this</span>.addView(gridView, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>step 4：实现编辑相关功能模块</li>
</ul>
<p>现在基本UI已经实现，接下来就是实现对emoji的点击事件监听，从而实现在EditText中显示表情元素</p>
<p>表情的添加，在主Activity实现监听</p>
<p>参考:</p>
<ul>
<li><a href="https://www.cnblogs.com/tianzhijiexian/p/3867749.html" target="_blank" rel="external">在EditText中添加QQ表情</a></li>
<li><a href="http://blog.csdn.net/centralperk/article/details/8548075" target="_blank" rel="external">android EditText获取光标位置并插入字符删除字符</a></li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Called by click an emoji</span></div><div class="line">gridView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</div><div class="line">        <span class="comment">// Calc lineHeight for ensure icon size</span></div><div class="line">        <span class="keyword">int</span> lineHeight = simpleEmojiEditLayout.getLineHeight();</div><div class="line">        <span class="comment">// Create a bitmap</span></div><div class="line">        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), (<span class="keyword">int</span>) id);</div><div class="line">        <span class="comment">// Set width and height</span></div><div class="line">        bitmap = Bitmap.createScaledBitmap(bitmap, lineHeight - <span class="number">10</span>, lineHeight - <span class="number">10</span>, <span class="keyword">true</span>);</div><div class="line">        <span class="comment">//</span></div><div class="line">        ImageSpan imageSpan = <span class="keyword">new</span> ImageSpan(SimpleEmojiKeyboardActivity.<span class="keyword">this</span>, bitmap);</div><div class="line">        SpannableString spannableString = <span class="keyword">new</span> SpannableString(<span class="string">"e"</span>);</div><div class="line">        spannableString.setSpan(imageSpan, <span class="number">0</span>, <span class="number">1</span>, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</div><div class="line"></div><div class="line">        <span class="comment">// Get texts from textView</span></div><div class="line">        content = simpleEmojiEditLayout.getText();</div><div class="line">        <span class="comment">// Get cursor location</span></div><div class="line">        location = simpleEmojiEditLayout.getSelectionStart();</div><div class="line">        <span class="comment">// Insert text</span></div><div class="line">        content.insert(location, spannableString);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>接下来实现func Bar的delete功能</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">btndelete.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        content = simpleEmojiEditLayout.getText();</div><div class="line">        location = simpleEmojiEditLayout.getSelectionStart();</div><div class="line">        <span class="keyword">if</span> (location != <span class="number">0</span>) &#123;</div><div class="line">            content.delete(location - <span class="number">1</span>, location);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Toast.makeText(SimpleEmojiKeyboardActivity.<span class="keyword">this</span>, <span class="string">"Nothing to delete"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>到这一个简单的表情键盘就实现了，其中还有很多小bug需要优化，最后把文件名列出来熟悉下这个过程。</p>
<ul>
<li>emoji<ul>
<li>Smile</li>
<li>EmojiManager</li>
<li>EmojiAdapter</li>
</ul>
</li>
<li>SimpleEmojiKeyboard<ul>
<li>SimpleEmojiEditLayout</li>
<li>SimpleEmojiKeyboardLayout</li>
<li>SimpleEmojiKeyboardActivity</li>
</ul>
</li>
</ul>
<p>推荐阅读：</p>
<ul>
<li><a href="http://www.jianshu.com/p/328784b363b6#" target="_blank" rel="external">Android 软键盘和emoji表情切换方案，和微信几乎一样的体验</a></li>
<li><a href="https://github.com/Jacksgong/JKeyboardPanelSwitch" target="_blank" rel="external">The handler for the keyboard and panel layout conflict in Android</a></li>
</ul>
<p>有机会要写一个更加完善的^_^</p>
<p>Tips: 作为一个Android小白，自然有很多不知道不理解的地方。如果文中有错或者有哪些值得改进的地方，欢迎大家提意见，我很开心能和大家一起交流学习，共同进步。</p>
<p>多谢阅读</p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/mk43/BaiduAcademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务目的&quot;&gt;&lt;a href=&quot;#任务目的&quot; class=&quot;headerlink&quot; title=&quot;任务目的&quot;&gt;&lt;/a&gt;任务目的&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;学习android控件的封装，viewPager的使用，以及SpannableString对文字加图片的处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;任务描述&quot;&gt;&lt;a href=&quot;#任务描述&quot; class=&quot;headerlink&quot; title=&quot;任务描述&quot;&gt;&lt;/a&gt;任务描述&lt;/h3&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;能进行表情的输入，删除&lt;/li&gt;
&lt;li&gt;表情大于一页，且可以翻页&lt;/li&gt;
&lt;li&gt;表情键盘和输入法键盘的弹出逻辑要正确&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;结果演示&quot;&gt;&lt;a href=&quot;#结果演示&quot; class=&quot;headerlink&quot; title=&quot;结果演示&quot;&gt;&lt;/a&gt;结果演示&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/2017/04/07/EmojiKeyboard/show.png&quot; alt=&quot;&quot;&gt;&lt;img src=&quot;/2017/04/07/EmojiKeyboard/EmojiDemo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>实现一个自动无线循环轮播图</title>
    <link href="http://fitzeng.org/2017/04/07/SlideShow/"/>
    <id>http://fitzeng.org/2017/04/07/SlideShow/</id>
    <published>2017-04-07T04:00:00.000Z</published>
    <updated>2017-07-01T10:12:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/BaiduAcademy" target="_blank" rel="external">GitHub</a></p>
<h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><hr>
<p>每隔3秒轮播图自动滚动<br>触摸改轮播图的时候，轮播图停止自动滚动<br>轮播图能够循环滚动，并且第一幅图向左滚动的效果和其他图片滚动的效果要求一致。<br>同理，最后一幅图向右滚动的效果也要求和其他图片的效果一致<br>demo的轮播图至少包含3幅图</p>
<h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><hr>
<p><img src="/2017/04/07/SlideShow/SlideShowDemo.gif" alt=""></p>
<a id="more"></a>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><hr>
<ul>
<li>界面设计</li>
</ul>
<p>首先要知道我们的UI界面是怎么样的，此处的设计如下图所示</p>
<p><img src="/2017/04/07/SlideShow/UI.png" alt=""></p>
<p>代码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/vpWallpaper"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/dotLayout"</span></div><div class="line">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">    <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"28dp"</span></div><div class="line">    <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>绘制UI(先设计滚动的页面，再设计指示器)</li>
</ul>
<p>要给ViewPager添加图片，就要设置适配器和资源</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Set ViewPager Fragment</div><div class="line"> */</div><div class="line">public static class ViewPagerFragment extends Fragment &#123;</div><div class="line">    private ImageView image;</div><div class="line">    private int id;</div><div class="line"></div><div class="line">    public ViewPagerFragment(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Nullable</div><div class="line">    @Override</div><div class="line">    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) &#123;</div><div class="line">        View rootView = inflater.inflate(R.layout.fragment_adapter, container, false);</div><div class="line">        image  = (ImageView) rootView.findViewById(R.id.image);</div><div class="line">        image.setImageResource(id);</div><div class="line">        return rootView;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// fragement layout(fragment_adapter)</div><div class="line">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"</div><div class="line">    android:orientation="horizontal"</div><div class="line">    android:layout_width="match_parent"</div><div class="line">    android:layout_height="match_parent"&gt;</div><div class="line"></div><div class="line">    &lt;ImageView</div><div class="line">        android:id="@+id/image"</div><div class="line">        android:scaleType="fitXY"</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="match_parent"</div><div class="line">        android:contentDescription="@string/image" /&gt;</div><div class="line">&lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Set ViewPager Adapter</div><div class="line"> */</div><div class="line">private class ViewPagerAdapter extends FragmentPagerAdapter &#123;</div><div class="line"></div><div class="line">    private List&lt;Fragment&gt; fragmentList = new ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    // Add pages to ViewPager</div><div class="line">    private void addPage(Fragment fragment) &#123;</div><div class="line">        fragmentList.add(fragment);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ViewPagerAdapter(FragmentManager fm) &#123;</div><div class="line">        super(fm);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Fragment getItem(int position) &#123;</div><div class="line">        return fragmentList.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int getCount() &#123;</div><div class="line">        return fragmentList.size();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>添加资源</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] srcId = &#123;</div><div class="line">        R.drawable.pic0,</div><div class="line">        R.drawable.pic1,</div><div class="line">        R.drawable.pic2,</div><div class="line">        R.drawable.pic3,</div><div class="line">        R.drawable.pic4,</div><div class="line">        R.drawable.pic5,</div><div class="line">        R.drawable.pic6</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line">ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</div><div class="line"><span class="comment">// Add Fragments</span></div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</div><div class="line">    ViewPagerFragment fragment = <span class="keyword">new</span> ViewPagerFragment(srcId[i]);</div><div class="line">    adapter.addPage(fragment);</div><div class="line">&#125;</div><div class="line">viewPager.setAdapter(adapter);</div></pre></td></tr></table></figure>
<ul>
<li>设置循环效果</li>
</ul>
<p>这里就是难点，要想实现两端的平缓循环滚动可以在两端添加一个cache page，[ 0 ( 1 2 3 4 0) 1]，只显示（）中的页，但是一旦出现cache page立马进行跳转。这样就能实现循环。<br>接下来就是设置计时器了。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Set page change timer</div><div class="line"> */</div><div class="line"><span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setTimer</span><span class="params">()</span> </span>&#123;</div><div class="line">    timer = <span class="keyword">new</span> Timer();</div><div class="line">    timer.schedule(<span class="keyword">new</span> TimerTask() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            handler.sendEmptyMessage(viewPager.getCurrentItem());</div><div class="line">        &#125;</div><div class="line">    &#125;, <span class="number">2000</span>, <span class="number">2000</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.handleMessage(msg);</div><div class="line">        <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">            <span class="keyword">case</span> <span class="number">5</span>: &#123;</div><div class="line">                viewPager.setCurrentItem(msg.what + <span class="number">1</span>, <span class="keyword">true</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// To make start or end slip smoothly</span></div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>: &#123;</div><div class="line">                viewPager.setCurrentItem(<span class="number">5</span>, <span class="keyword">false</span>);</div><div class="line">                viewPager.setCurrentItem(<span class="number">6</span>, <span class="keyword">true</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">case</span> <span class="number">6</span>: &#123;</div><div class="line">                viewPager.setCurrentItem(<span class="number">1</span>, <span class="keyword">false</span>);</div><div class="line">                viewPager.setCurrentItem(<span class="number">2</span>, <span class="keyword">true</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>设置平缓的滑动效果<br>但是这种效果不能满足要求,我们可以设计一个滑动延时</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Set Duration</div><div class="line"> */</div><div class="line"><span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setDuration</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Field field = ViewPager.class.getDeclaredField(<span class="string">"mScroller"</span>);</div><div class="line">        field.setAccessible(<span class="keyword">true</span>);</div><div class="line">        FixSpeedScroller scroller = <span class="keyword">new</span> FixSpeedScroller(<span class="keyword">this</span>, <span class="keyword">new</span> AccelerateInterpolator());</div><div class="line">        scroller.setDuration(<span class="number">500</span>);</div><div class="line">        field.set(viewPager, scroller);</div><div class="line">    &#125; <span class="keyword">catch</span> (NoSuchFieldException | IllegalAccessException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Set scroller duration, make it smoothly</div><div class="line"> */</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FixSpeedScroller</span> <span class="keyword">extends</span> <span class="title">Scroller</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> _duration = <span class="number">1000</span>;</div><div class="line"></div><div class="line">    FixSpeedScroller(Context context, Interpolator interpolator) &#123;</div><div class="line">        <span class="keyword">super</span>(context, interpolator);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startScroll</span><span class="params">(<span class="keyword">int</span> startX, <span class="keyword">int</span> startY, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.startScroll(startX, startY, dx, dy, _duration);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startScroll</span><span class="params">(<span class="keyword">int</span> startX, <span class="keyword">int</span> startY, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy, <span class="keyword">int</span> duration)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.startScroll(startX, startY, dx, dy, _duration);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDuration</span><span class="params">(<span class="keyword">int</span> duration)</span> </span>&#123;</div><div class="line">        _duration = duration;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>基本效果就已经实现了，但是如果有触摸事件发生，我们要另行处理</p>
<ul>
<li>添加点击监听</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">viewPager.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="comment">// Cancel the timer</span></div><div class="line">        <span class="keyword">if</span> (timer != <span class="keyword">null</span>) &#123;</div><div class="line">            timer.cancel();</div><div class="line">            timer = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// when slip out cache view(page0, page6), set an another same page instantly</span></div><div class="line">        <span class="keyword">if</span> (viewPager.getCurrentItem() == <span class="number">0</span>) &#123;</div><div class="line">            viewPager.setCurrentItem(<span class="number">5</span>, <span class="keyword">false</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (viewPager.getCurrentItem() == <span class="number">6</span>) &#123;</div><div class="line">            viewPager.setCurrentItem(<span class="number">1</span>, <span class="keyword">false</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>在滑动监听中恢复计时</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">viewPager.setOnPageChangeListener(<span class="keyword">new</span> ViewPager.OnPageChangeListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> positionOffsetPixels)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</div><div class="line">        <span class="comment">// if this page was showed by figure slip, then set timer to continue auto slip for next page</span></div><div class="line">        <span class="keyword">if</span> (timer == <span class="keyword">null</span>) &#123;</div><div class="line">            setTimer();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>ViewPager的效果已经实现。下面开始实现指示器</p>
<ul>
<li>指示器UI</li>
</ul>
<p>利用两张图片实现选中和没选中效果，每张图片添加进一个LinearLayout，把所有的LinearLayout排列经另一个LinearLayout就可以实现效果</p>
<p>值得注意的是，在添加视图时，要加判断</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (viewSelected.getParent() != <span class="keyword">null</span>) &#123;</div><div class="line">    ((ViewGroup) viewSelected.getParent()).removeView(viewSelected);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>否则在有父布局的情况下添加不进别的视图。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Create a dot view for an select view</div><div class="line"> * <span class="doctag">@return</span> view</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> View <span class="title">createViewSelected</span><span class="params">()</span> </span>&#123;</div><div class="line">    LinearLayout view = <span class="keyword">new</span> LinearLayout(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">    LinearLayout.LayoutParams lp = <span class="keyword">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">    lp.setMargins(<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>);</div><div class="line">    view.setLayoutParams(lp);</div><div class="line"></div><div class="line">    ImageView imageView = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</div><div class="line">    imageView.setImageResource(R.drawable.dot_selected);</div><div class="line">    imageView.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">30</span>, <span class="number">30</span>));</div><div class="line">    imageView.setScaleType(ImageView.ScaleType.FIT_XY);</div><div class="line">    view.addView(imageView);</div><div class="line">    <span class="keyword">return</span> view;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Create a dot view for an unselected view</div><div class="line"> * <span class="doctag">@return</span> view</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> View <span class="title">createViewUnselected</span><span class="params">()</span> </span>&#123;</div><div class="line">    LinearLayout view = <span class="keyword">new</span> LinearLayout(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">    LinearLayout.LayoutParams lp = <span class="keyword">new</span> LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);</div><div class="line">    lp.setMargins(<span class="number">10</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>);</div><div class="line">    view.setLayoutParams(lp);</div><div class="line"></div><div class="line">    ImageView imageView = <span class="keyword">new</span> ImageView(<span class="keyword">this</span>);</div><div class="line">    imageView.setImageResource(R.drawable.dot_unselect);</div><div class="line">    imageView.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(<span class="number">30</span>, <span class="number">30</span>));</div><div class="line">    imageView.setScaleType(ImageView.ScaleType.FIT_XY);</div><div class="line">    view.addView(imageView);</div><div class="line">    <span class="keyword">return</span> view;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Refresh the Dot View when sliped</div><div class="line"> * <span class="doctag">@param</span> selectId  current Id</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshDotView</span><span class="params">(<span class="keyword">int</span> selectId)</span> </span>&#123;</div><div class="line">    dotLayout.removeAllViews();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (selectId != i) &#123;</div><div class="line">            View viewUnselect = createViewUnselected();</div><div class="line">            <span class="keyword">if</span> (viewUnselect.getParent() != <span class="keyword">null</span>) &#123;</div><div class="line">                ((ViewGroup) viewUnselect.getParent()).removeView(viewUnselect);</div><div class="line">            &#125;</div><div class="line">            dotLayout.addView(viewUnselect);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            View viewSelected = createViewSelected();</div><div class="line">            <span class="keyword">if</span> (viewSelected.getParent() != <span class="keyword">null</span>) &#123;</div><div class="line">                ((ViewGroup) viewSelected.getParent()).removeView(viewSelected);</div><div class="line">            &#125;</div><div class="line">            dotLayout.addView(viewSelected);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>实现指示器功能</li>
</ul>
<p>UI实现了之后就是实现指示功能<br>就是直接在PageChange监听处加码就可以了，逻辑很简单，不过注意在恶劣环境下有可能会滑到cache page，这是传入的page ID要进行相应的变换</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Delay to change dotview</span></div><div class="line">Timer timer = <span class="keyword">new</span> Timer();</div><div class="line">timer.schedule(<span class="keyword">new</span> TimerTask() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        handler.sendEmptyMessage(DOT_VIEW_CHANGE_SELECTED);</div><div class="line">    &#125;</div><div class="line">&#125;, <span class="number">500</span>);</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// Refresh the dotView when page was loaded</span></div><div class="line"><span class="keyword">case</span> DOT_VIEW_CHANGE_SELECTED:</div><div class="line">    <span class="keyword">int</span> currentId = viewPager.getCurrentItem();</div><div class="line">    <span class="keyword">switch</span> (currentId) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>: &#123;</div><div class="line">            refreshDotView(<span class="number">5</span>);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">        <span class="keyword">case</span> <span class="number">5</span>: &#123;</div><div class="line">            refreshDotView(currentId);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> <span class="number">6</span>: &#123;</div><div class="line">            refreshDotView(<span class="number">1</span>);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>onCreate()调用顺序如下</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.activity_wallpaper);</div><div class="line"></div><div class="line">    init();</div><div class="line"></div><div class="line">    listener();</div><div class="line">    setTimer();</div><div class="line">    setDuration();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><p>不足比较多，在极端的操作下不流畅，比如在设置的延时中滑动次数过多会造成切换不自然，在手指滑动时更好的做法是直接监听手机的移动速度进行相关图片的移动。还有就是耗内存，内存溢出的话，可以自己在Manifest文件加两句代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">android:hardwareAccelerated="false"</div><div class="line">android:largeHeap="true"</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/BaiduAcademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务描述&quot;&gt;&lt;a href=&quot;#任务描述&quot; class=&quot;headerlink&quot; title=&quot;任务描述&quot;&gt;&lt;/a&gt;任务描述&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;每隔3秒轮播图自动滚动&lt;br&gt;触摸改轮播图的时候，轮播图停止自动滚动&lt;br&gt;轮播图能够循环滚动，并且第一幅图向左滚动的效果和其他图片滚动的效果要求一致。&lt;br&gt;同理，最后一幅图向右滚动的效果也要求和其他图片的效果一致&lt;br&gt;demo的轮播图至少包含3幅图&lt;/p&gt;
&lt;h3 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/2017/04/07/SlideShow/SlideShowDemo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>自定义滑动删除列表</title>
    <link href="http://fitzeng.org/2017/04/07/SlideDeleteList/"/>
    <id>http://fitzeng.org/2017/04/07/SlideDeleteList/</id>
    <published>2017-04-07T03:00:00.000Z</published>
    <updated>2017-07-01T10:12:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/BaiduAcademy" target="_blank" rel="external">GitHub</a></p>
<h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><hr>
<p>实现一个可以滑动删除的ListView列表，列表中的每一行可以通过从左向右滑动显示出删除按钮，点击该按钮之后删除该行</p>
<h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><hr>
<p><img src="/2017/04/07/SlideDeleteList/slideDeleteListDemo.gif" alt=""></p>
<a id="more"></a>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><hr>
<p>最开始还是要设计layout，这决定着你的代码写法。</p>
<ul>
<li>layout<ul>
<li>activity_listview</li>
<li>listitem</li>
<li>content_view</li>
<li>menu_view</li>
</ul>
</li>
</ul>
<p>我们可以把每一个Item设为一个布局控件，也就是listitem</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">merge</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"60dp"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/content"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/menu"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"80dp"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">merge</span>&gt;</span></div></pre></td></tr></table></figure>
<p>接着分别连个布局设置content和menu</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">content_view</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"@string/init_text"</span></div><div class="line">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></div><div class="line">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"20dp"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div><div class="line"></div><div class="line">menu_view</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/delete"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"@string/delete"</span></div><div class="line">        <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span></div><div class="line">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@color/colorAccent"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>接下来就很清楚了。利用listview添加控件listitem作为适配器的布局。</p>
<ul>
<li>ViewHolder缓存加载</li>
</ul>
<p>避免重复加载控件，采用缓存机制是比较合理的<br>下面我们看看adapter的getView()</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</div><div class="line"></div><div class="line">    ViewHolder holder;</div><div class="line">    SlideItemView slideItemView = (SlideItemView) convertView;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (convertView == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="comment">// get content and menu view</span></div><div class="line">        View contentView = inflater.inflate(R.layout.content_view, <span class="keyword">null</span>);</div><div class="line">        View menuView = inflater.inflate(R.layout.menu_view, <span class="keyword">null</span>);</div><div class="line">        <span class="comment">// add content and menu to slideItemView</span></div><div class="line">        slideItemView = <span class="keyword">new</span> SlideItemView(context);</div><div class="line">        slideItemView.setContentView(contentView);</div><div class="line">        slideItemView.setMenuView(menuView);</div><div class="line">        <span class="comment">// setting widgets</span></div><div class="line">        holder = <span class="keyword">new</span> ViewHolder(contentView, menuView);</div><div class="line">        <span class="comment">// setting slide listener</span></div><div class="line">        slideItemView.setOnSlideListener((SlideItemView.OnSlideListener) context);</div><div class="line">        slideItemView.setTag(holder);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        holder = (ViewHolder) convertView.getTag();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// init widgets</span></div><div class="line">    ItemMsg itemMsg = itemMsgList.get(position);</div><div class="line">    itemMsg.setSlideItemView(slideItemView);</div><div class="line">    itemMsg.getSlideItemView().shrink();</div><div class="line"></div><div class="line">    holder.text.setText(itemMsg.getContent());</div><div class="line">    holder.btnDel.setText(R.string.delete);</div><div class="line">    holder.btnDel.setOnClickListener((View.OnClickListener) context);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> slideItemView;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> </span>&#123;</div><div class="line">    TextView text;</div><div class="line">    Button btnDel;</div><div class="line">    ViewHolder(View content, View menu) &#123;</div><div class="line">        text = (TextView) content.findViewById(R.id.textView);</div><div class="line">        btnDel = (Button) menu.findViewById(R.id.delete);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>代码基本都有注释，逻辑比较清晰，主要是对适配器的控件初始化。注意返回的是slideItemView，同时也设置了监听，所以此处是加载两个布局（content,menu）合成一个slideItemView，这样便于以后的布局更改。也方便视图的添加和控件的监测。</p>
<ul>
<li>构造slideItemView</li>
</ul>
<p>部分函数</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">    Context context = getContext();</div><div class="line">    scroller = <span class="keyword">new</span> Scroller(context);</div><div class="line">    <span class="comment">// inflate layout</span></div><div class="line">    View.inflate(context, R.layout.listitem, <span class="keyword">this</span>);</div><div class="line">    contentView = (LinearLayout) findViewById(R.id.content);</div><div class="line">    menuView = (LinearLayout) findViewById(R.id.menu);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContentView</span><span class="params">(View content)</span> </span>&#123;</div><div class="line">    contentView.addView(content);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMenuView</span><span class="params">(View menu)</span> </span>&#123;</div><div class="line">    menuView.addView(menu);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>滑动监听</li>
</ul>
<p>这个才是重点难点<br>代码如下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">    <span class="comment">// Get event start coordinate</span></div><div class="line">    <span class="keyword">int</span> x = (<span class="keyword">int</span>) event.getX();</div><div class="line">    <span class="keyword">int</span> y = (<span class="keyword">int</span>) event.getY();</div><div class="line">    <span class="keyword">int</span> scrollX = getScrollX();</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (event.getAction()) &#123;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN: &#123;</div><div class="line">            <span class="comment">// if another event unfinished, then finished</span></div><div class="line">            <span class="keyword">if</span> (!scroller.isFinished()) &#123;</div><div class="line">                scroller.abortAnimation();</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// get menu width</span></div><div class="line">            btnWidth = menuView.getMeasuredWidth();</div><div class="line">            <span class="keyword">if</span> (onSlideListener != <span class="keyword">null</span>) &#123;</div><div class="line">                onSlideListener.onSlide(<span class="keyword">this</span>, OnSlideListener.STATUS_SLIDE_SCROLL);</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// represent the event was handled or consumed, see the resource code</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE: &#123;</div><div class="line">            <span class="comment">// get offset</span></div><div class="line">            <span class="keyword">int</span> offsetX = x - lastX;</div><div class="line">            <span class="keyword">int</span> offsetY = y - lastY;</div><div class="line">            <span class="comment">// if offsetX miner than offsetY or offsetY more than 20, then cancel this event</span></div><div class="line">            <span class="keyword">if</span> (offsetY &gt; <span class="number">20</span>) &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">int</span> newScrollX = scrollX - offsetX;</div><div class="line">            <span class="keyword">if</span> (offsetX != <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (newScrollX &lt; <span class="number">0</span>) &#123;</div><div class="line">                    newScrollX = <span class="number">0</span>;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newScrollX &gt; btnWidth)&#123;</div><div class="line">                    newScrollX = btnWidth;</div><div class="line">                &#125;</div><div class="line">                scrollTo(newScrollX, <span class="number">0</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_CANCEL: &#123;</div><div class="line">            <span class="keyword">int</span> newScroll = <span class="number">0</span>;</div><div class="line">            <span class="comment">// more than half of button width, scroll out. otherwise scroll in.</span></div><div class="line">            <span class="keyword">if</span> (scrollX - btnWidth * <span class="number">0.7</span> &gt; <span class="number">0</span>) &#123;</div><div class="line">                newScroll = btnWidth;</div><div class="line">            &#125;</div><div class="line">            smoothScrollTo(newScroll);</div><div class="line">            <span class="comment">// set item slide status</span></div><div class="line">            <span class="keyword">if</span> (onSlideListener != <span class="keyword">null</span>) &#123;</div><div class="line">                onSlideListener.onSlide(<span class="keyword">this</span>, newScroll == <span class="number">0</span> ? OnSlideListener.STATUS_SLIDE_OFF</div><div class="line">                        : OnSlideListener.STATUS_SLIDE_ON);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    lastX = x;</div><div class="line">    lastY = y;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onTouchEvent(event);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">smoothScrollTo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> scrollX = getScrollX();</div><div class="line">    <span class="keyword">int</span> offsetX = x - scrollX;</div><div class="line">    scroller.startScroll(scrollX, <span class="number">0</span>, offsetX, <span class="number">0</span>, Math.abs(offsetX));</div><div class="line">    invalidate();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">computeScroll</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (scroller.computeScrollOffset()) &#123;</div><div class="line">        scrollTo(scroller.getCurrX(), scroller.getCurrY());</div><div class="line">        postInvalidate();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shrink</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (getScaleX() != <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">this</span>.smoothScrollTo(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参考</p>
<ul>
<li><a href="http://blog.csdn.net/singwhatiwanna/article/details/17515543" target="_blank" rel="external">列表滑动删除效果</a></li>
<li><a href="http://blog.csdn.net/yanbober/article/details/45887547" target="_blank" rel="external">Android触摸屏事件派发机制详解与源码分析一(View篇)</a></li>
<li><a href="http://www.jianshu.com/p/35a8309b9597#" target="_blank" rel="external">android中的dispatchTouchEvent、onInterceptTouchEvent和onTouchEvent</a></li>
</ul>
<p>后两篇主要是讲Android中的事件分发，也就是为什么在MotionEvent.ACTION_DOWN中return true才能实现滑动效果。看了源码我们知道true代表这个控件的函数消耗这个事件，不会再分发，所以我们后面的处理事件的代码才能够执行。</p>
<ul>
<li>设置接口</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">OnSlideListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> STATUS_SLIDE_OFF = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> STATUS_SLIDE_ON = <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> STATUS_SLIDE_SCROLL = <span class="number">2</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onSlide</span><span class="params">(View view, <span class="keyword">int</span> status)</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnSlideListener</span><span class="params">(OnSlideListener onSlideListener)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.onSlideListener = onSlideListener;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSlide</span><span class="params">(View view, <span class="keyword">int</span> status)</span> </span>&#123;</div><div class="line">    <span class="comment">// if last slide item is on, close it</span></div><div class="line">    <span class="keyword">if</span> (mLastSlideViewWithStatusOn != <span class="keyword">null</span> &amp;&amp; mLastSlideViewWithStatusOn != view) &#123;</div><div class="line">        mLastSlideViewWithStatusOn.shrink();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// if a new item slide out, mark it</span></div><div class="line">    <span class="keyword">if</span> (status == STATUS_SLIDE_ON) &#123;</div><div class="line">        mLastSlideViewWithStatusOn = (SlideItemView) view;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个接口的主要目的是对这个ListView中Item的管理，保证当前只有一个侧滑出来。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/BaiduAcademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务描述&quot;&gt;&lt;a href=&quot;#任务描述&quot; class=&quot;headerlink&quot; title=&quot;任务描述&quot;&gt;&lt;/a&gt;任务描述&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;实现一个可以滑动删除的ListView列表，列表中的每一行可以通过从左向右滑动显示出删除按钮，点击该按钮之后删除该行&lt;/p&gt;
&lt;h3 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;/2017/04/07/SlideDeleteList/slideDeleteListDemo.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>实现一个TAB布局</title>
    <link href="http://fitzeng.org/2017/04/07/TabLayout/"/>
    <id>http://fitzeng.org/2017/04/07/TabLayout/</id>
    <published>2017-04-07T02:30:00.000Z</published>
    <updated>2017-07-01T10:12:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/BaiduAcademy" target="_blank" rel="external">GitHub</a></p>
<h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><hr>
<p>实现常见的标签tab，并且点击tab跳转至对应页面<br>实现页面滑动效果</p>
<h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><hr>
<p>TabLayout + ViewPager（GIF）</p>
<p><img src="/2017/04/07/TabLayout/TabLayoutAndViewPager.gif" alt=""></p>
<a id="more"></a>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><hr>
<ul>
<li>绘制页面</li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">android.support.v4.view.ViewPager</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/viewPager"</span></div><div class="line">    <span class="attr">android:scrollbars</span>=<span class="string">"none"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"8"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.v4.view.ViewPager</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.TabLayout</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/tabLayout"</span></div><div class="line">    <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">app:tabGravity</span>=<span class="string">"fill"</span></div><div class="line">    <span class="attr">app:tabIndicatorHeight</span>=<span class="string">"0dp"</span></div><div class="line">    <span class="attr">app:tabMode</span>=<span class="string">"fixed"</span></div><div class="line">    <span class="attr">app:tabSelectedTextColor</span>=<span class="string">"#FF4081"</span></div><div class="line">    <span class="attr">app:tabTextColor</span>=<span class="string">"#000"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.TabLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>需要在配置文件中添加 compile ‘com.android.support:design:23.2.0’</p>
<ul>
<li>准备Adapter</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title">FragmentPagerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> List&lt;Fragment&gt; fragmentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">private</span> List&lt;String&gt; fragmentTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    ViewPagerAdapter(FragmentManager fm) &#123;</div><div class="line">        <span class="keyword">super</span>(fm);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addPage</span><span class="params">(Fragment fragment, String title)</span> </span>&#123;</div><div class="line">        fragmentList.add(fragment);</div><div class="line">        fragmentTitleList.add(title);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Fragment <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> fragmentList.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> fragmentTitleList.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> CharSequence <span class="title">getPageTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> fragmentTitleList.get(position);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>准备Fragment布局</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String content;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerFragment</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.content = content;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        View rootView = inflater.inflate(R.layout.fragment_view_pager, container, <span class="keyword">false</span>);</div><div class="line">        TextView tvContent = (TextView) rootView.findViewById(R.id.tvContent);</div><div class="line">        tvContent.setText(content);</div><div class="line">        <span class="keyword">return</span> rootView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/tvContent"</span></div><div class="line">    <span class="attr">android:textSize</span>=<span class="string">"30sp"</span></div><div class="line">    <span class="attr">android:hint</span>=<span class="string">"@string/default_text"</span></div><div class="line">    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">    <span class="attr">android:textAlignment</span>=<span class="string">"center"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</div></pre></td></tr></table></figure>
<p>为了方便，此处所有Fragment共用一个</p>
<ul>
<li>初始化布局</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Init Layout, Load Fragments and draw Layouts.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initLayout</span><span class="params">()</span> </span>&#123;</div><div class="line">    viewPager = (ViewPager) findViewById(R.id.viewPager);</div><div class="line">    tabLayout = (TabLayout) findViewById(R.id.tabLayout);</div><div class="line"></div><div class="line">    ViewPagerAdapter adapter = <span class="keyword">new</span> ViewPagerAdapter(getSupportFragmentManager());</div><div class="line">    <span class="comment">// Add Fragments</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">        adapter.addPage(<span class="keyword">new</span> ViewPagerFragment(<span class="string">"PAGE"</span> + i), <span class="string">"PAGE"</span> + i);</div><div class="line">    &#125;</div><div class="line">    viewPager.setAdapter(adapter);</div><div class="line">    <span class="comment">// Connect TabLayout and ViewPage</span></div><div class="line">    tabLayout.setupWithViewPager(viewPager);</div><div class="line"></div><div class="line">    <span class="comment">// Draw Tab View</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</div><div class="line">        tabListView.add(tabLayout.getTabAt(i));</div><div class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</div><div class="line">            tabListView.get(i).setIcon(R.mipmap.selected_icon);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            tabListView.get(i).setIcon(R.mipmap.ic_launcher);</div><div class="line">        &#125;</div><div class="line">        tabListView.get(i).setText(<span class="string">"PAGE"</span> + i);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>设置监听</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Setting Tab Click Listener</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initEvents</span><span class="params">()</span> </span>&#123;</div><div class="line">    tabLayout.setOnTabSelectedListener(<span class="keyword">new</span> TabLayout.OnTabSelectedListener() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabSelected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line">            <span class="comment">// Called when the tab was selected</span></div><div class="line">            tabListView.get(tab.getPosition()).setIcon(R.mipmap.selected_icon);</div><div class="line">            viewPager.setCurrentItem(tab.getPosition());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabUnselected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line">            <span class="comment">// Called when a tab from selected switch to unselected</span></div><div class="line">            tabListView.get(tab.getPosition()).setIcon(R.mipmap.ic_launcher);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTabReselected</span><span class="params">(TabLayout.Tab tab)</span> </span>&#123;</div><div class="line">            <span class="comment">// Called when a tab selected more than twice consecutively</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><hr>
<p>利用控件已有的性质，基本的Tab切换已经实现。但是没有自己手动实现滑动等控件的效果。实现方式有很多种，以后来补充。</p>
<p>Tips: 作为一个Android小白，自然有很多不知道不理解的地方。如果文中有错或者有哪些值得改进的地方，欢迎大家提意见，我很开心能和大家一起交流学习，共同进步。</p>
<p>多谢阅读</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/BaiduAcademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务描述&quot;&gt;&lt;a href=&quot;#任务描述&quot; class=&quot;headerlink&quot; title=&quot;任务描述&quot;&gt;&lt;/a&gt;任务描述&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;实现常见的标签tab，并且点击tab跳转至对应页面&lt;br&gt;实现页面滑动效果&lt;/p&gt;
&lt;h3 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;TabLayout + ViewPager（GIF）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2017/04/07/TabLayout/TabLayoutAndViewPager.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>复现ANR</title>
    <link href="http://fitzeng.org/2017/04/07/RecurrentANR/"/>
    <id>http://fitzeng.org/2017/04/07/RecurrentANR/</id>
    <published>2017-04-07T02:00:00.000Z</published>
    <updated>2017-07-01T10:11:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/mk43/BaiduAcademy" target="_blank" rel="external">GitHub</a></p>
<h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><p>写出不少于3种常见ANR错误的Android代码</p>
<hr>
<ul>
<li>主线程复现ANR</li>
<li>BroadcastReceiver复现ANR</li>
<li>Service复现ANR</li>
</ul>
<h3 id="1-什么是ANR"><a href="#1-什么是ANR" class="headerlink" title="1.什么是ANR?"></a>1.什么是ANR?</h3><hr>
<p>ANR(Application Not Responding),应用程序无响应. 参考<a href="https://blog.saymagic.tech/2014/03/25/anr-analyze.html" target="_blank" rel="external">ANR完全解析</a></p>
<a id="more"></a>
<h3 id="2-ANR的三种类型"><a href="#2-ANR的三种类型" class="headerlink" title="2.ANR的三种类型"></a>2.ANR的三种类型</h3><hr>
<ul>
<li>KeyDispatchTimeout(5 seconds) 主要类型按键或触摸事件在特定时间内无响应</li>
<li>BroadcastTimeout(10 seconds) BroadcastReceiver在特定时间内无法处理完成</li>
<li>ServiceTimeout(20 seconds) 小概率类型 Service在特定的时间内无法处理完成</li>
</ul>
<h3 id="3-复现ANR"><a href="#3-复现ANR" class="headerlink" title="3.复现ANR"></a>3.复现ANR</h3><h4 id="I-主线程复现ANR"><a href="#I-主线程复现ANR" class="headerlink" title="I 主线程复现ANR"></a>I 主线程复现ANR</h4><hr>
<ul>
<li>代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Recurrent ANR in main Thread</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mainThreadANR</span><span class="params">()</span> </span>&#123;</div><div class="line">    Looper myLooper = Looper.myLooper();</div><div class="line">    Looper mainLooper = Looper.getMainLooper();</div><div class="line">    Log.i(<span class="string">"MainThreadANR"</span>, <span class="string">"myLooper="</span> + myLooper + <span class="string">";   mainLooper="</span> + mainLooper);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Thread.sleep(<span class="number">20</span> * <span class="number">1000</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    Log.i(<span class="string">"MainThreadANR"</span>, <span class="string">"mainThreadANR() Done"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>结果</li>
</ul>
<p><img src="/2017/04/07/RecurrentANR/ANR.png" alt=""></p>
<h4 id="II-BroadcastReceiver复现ANR"><a href="#II-BroadcastReceiver复现ANR" class="headerlink" title="II BroadcastReceiver复现ANR"></a>II BroadcastReceiver复现ANR</h4><ul>
<li>代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BroadcastANR</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">        Looper myLooper = Looper.myLooper();</div><div class="line">        Looper mainLooper = Looper.getMainLooper();</div><div class="line">        Log.i(<span class="string">"BroadcastANR"</span>, <span class="string">"myLooper="</span> + myLooper + <span class="string">";   mainLooper="</span> + mainLooper);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Thread.sleep(<span class="number">80</span> * <span class="number">1000</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="III-Service复现ANR"><a href="#III-Service复现ANR" class="headerlink" title="III Service复现ANR"></a>III Service复现ANR</h4><ul>
<li>代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceANR</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">        Looper myLooper = Looper.myLooper();</div><div class="line">        Looper mainLooper = Looper.getMainLooper();</div><div class="line">        Log.i(<span class="string">"ServiceANR"</span>, <span class="string">"myLooper="</span> + myLooper + <span class="string">";   mainLooper="</span> + mainLooper);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Thread.sleep(<span class="number">60</span> * <span class="number">1000</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="4-避免ANR"><a href="#4-避免ANR" class="headerlink" title="4.避免ANR"></a>4.避免ANR</h3><p>要想避免ANR，首先要分析为什么会发生ANR，主要是在一些不能耗时操作的函数中处理代码的时间过长，所以把耗时长的程序写入其他子进程中就可以避免。<a href="https://duanqz.github.io/2015-10-12-ANR-Analysis#service" target="_blank" rel="external">ANR机制以及问题分析</a>写的很详细。</p>
<p><img src="/2017/04/07/RecurrentANR/ReANR.png" alt=""></p>
<p>首先我们看看Log</p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">MainThreadANR: </div><div class="line">I/MainThreadANR: myLooper=Looper (main, tid 1) &#123;13467e36&#125;;   mainLooper=Looper (main, tid 1) &#123;13467e36&#125;</div><div class="line"></div><div class="line">BroadcastANR:</div><div class="line">I/BroadcastANR: myLooper=Looper (main, tid 1) &#123;33c6137&#125;;   mainLooper=Looper (main, tid 1) &#123;33c6137&#125;</div><div class="line"></div><div class="line">ServiceANR:</div><div class="line">I/ServiceANR: myLooper=Looper (main, tid 1) &#123;303e756a&#125;;   mainLooper=Looper (main, tid 1) &#123;303e756a&#125;</div></pre></td></tr></table></figure>
<p>前面的三个ANR都有一个特点，那就是当前的线程都是主线程，细心点会发现其实还有一句丢帧Log打印</p>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Skipped 1204 frames!  The application may be doing too much work on its main thread.</div></pre></td></tr></table></figure>
<p>我实现下通过在主线程中创建一个新线程的方法来避免ANR</p>
<ul>
<li>代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Deal ANR in main Thread</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mainThreadNotANR</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            Looper myLooper = Looper.myLooper();</div><div class="line">            Looper mainLooper = Looper.getMainLooper();</div><div class="line">            Log.i(<span class="string">"MainThreadNotANR"</span>, <span class="string">"myLooper="</span> + myLooper + <span class="string">";   mainLooper="</span> + mainLooper);</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Thread.sleep(<span class="number">20</span> * <span class="number">1000</span>);</div><div class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">            Log.i(<span class="string">"MainThreadNotANR"</span>, <span class="string">"Thread Run() Done"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;).start();</div><div class="line">    Log.i(<span class="string">"MainThreadNotANR"</span>, <span class="string">"mainThreadNotANR() Done"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面我们来对比下和主线程中直接处理的Log有什么不同</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">MainThreadNotANR:</div><div class="line">点击按钮MainThreadNotANR</div><div class="line">I/MainThreadNotANR: mainThreadNotANR() Done</div><div class="line">I/MainThreadNotANR: myLooper=null;   mainLooper=Looper (main, tid 1) &#123;303e756a&#125;</div><div class="line">I/MainThreadNotANR: ThreadRun() Done</div><div class="line">W/art: Suspending all threads took: 6.032ms</div><div class="line"></div><div class="line">MainThreadANR:</div><div class="line">点击按钮MainThreadANR</div><div class="line">I/MainThreadANR: myLooper=Looper (main, tid 1) &#123;303e756a&#125;;   mainLooper=Looper (main, tid 1) &#123;303e756a&#125;</div><div class="line">I/MainThreadANR: mainThreadANR() Done</div><div class="line">再多次点击按钮MainThreadANR</div><div class="line">I/Choreographer: Skipped 1200 frames!  The application may be doing too much work on its main thread.</div><div class="line">I/MainThreadANR: myLooper=Looper (main, tid 1) &#123;303e756a&#125;;   mainLooper=Looper (main, tid 1) &#123;303e756a&#125;</div><div class="line">I/art: Thread[5,tid=2037,WaitingInMainSignalCatcherLoop,Thread*=0xef70d400,peer=0x12c00080,&quot;Signal Catcher&quot;]: reacting to signal 3</div><div class="line">I/art: Wrote stack traces to &apos;/data/anr/traces.txt&apos;</div></pre></td></tr></table></figure>
<p>从Log中可以看出MainThreadNotANR中先打印mainThreadNotANR() Done后打印ThreadRun() Done说明代码没在MainThreadNotANR这个线程中运行，从myLooper=null;   mainLooper=Looper (main, tid 1) {303e756a}可以验证我们的猜想。<br>而MainThreadANR中就很明显，各种丢帧奔溃。不过I/art: Wrote stack traces to ‘/data/anr/traces.txt’告诉我们可以在/data/anr/traces.txt中追踪奔溃的缘由<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">traces.txt</div><div class="line"></div><div class="line">DALVIK THREADS (18):</div><div class="line">&quot;main&quot; prio=5 tid=1 Sleeping</div><div class="line">  | group=&quot;main&quot; sCount=1 dsCount=0 obj=0x73581970 self=0xf4306800</div><div class="line">  | sysTid=2030 nice=0 cgrp=apps sched=0/0 handle=0xf7761160</div><div class="line">  | state=S schedstat=( 545706267 72336573 314 ) utm=30 stm=23 core=3 HZ=100</div><div class="line">  | stack=0xff7c7000-0xff7c9000 stackSize=8MB</div><div class="line">  | held mutexes=</div><div class="line">  at java.lang.Thread.sleep!(Native method)</div><div class="line">  - sleeping on &lt;0x2ce90c0d&gt; (a java.lang.Object)</div><div class="line">  at java.lang.Thread.sleep(Thread.java:1031)</div><div class="line">  - locked &lt;0x2ce90c0d&gt; (a java.lang.Object)</div><div class="line">  at java.lang.Thread.sleep(Thread.java:985)</div><div class="line">  at org.fitzeng.recurrentanr.MainActivity.mainThreadANR(MainActivity.java:47)</div><div class="line">  at org.fitzeng.recurrentanr.MainActivity.onClick(MainActivity.java:81)</div><div class="line">  at android.view.View.performClick(View.java:4756)</div><div class="line">  at android.view.View$PerformClick.run(View.java:19749)</div><div class="line">  at android.os.Handler.handleCallback(Handler.java:739)</div><div class="line">  at android.os.Handler.dispatchMessage(Handler.java:95)</div><div class="line">  at android.os.Looper.loop(Looper.java:135)</div><div class="line">  at android.app.ActivityThread.main(ActivityThread.java:5221)</div><div class="line">  at java.lang.reflect.Method.invoke!(Native method)</div><div class="line">  at java.lang.reflect.Method.invoke(Method.java:372)</div><div class="line">  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:899)</div><div class="line">  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:694)</div></pre></td></tr></table></figure></p>
<p>这是定位ANR的有效手段。</p>
<p>Tips: 作为一个Android小白，自然有很多不知道不理解的地方。如果文中有错或者有哪些值得改进的地方，欢迎大家提意见，我很开心能和大家一起交流学习，共同进步。</p>
<p>多谢阅读</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/mk43/BaiduAcademy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;任务描述&quot;&gt;&lt;a href=&quot;#任务描述&quot; class=&quot;headerlink&quot; title=&quot;任务描述&quot;&gt;&lt;/a&gt;任务描述&lt;/h3&gt;&lt;p&gt;写出不少于3种常见ANR错误的Android代码&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;主线程复现ANR&lt;/li&gt;
&lt;li&gt;BroadcastReceiver复现ANR&lt;/li&gt;
&lt;li&gt;Service复现ANR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-什么是ANR&quot;&gt;&lt;a href=&quot;#1-什么是ANR&quot; class=&quot;headerlink&quot; title=&quot;1.什么是ANR?&quot;&gt;&lt;/a&gt;1.什么是ANR?&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;ANR(Application Not Responding),应用程序无响应. 参考&lt;a href=&quot;https://blog.saymagic.tech/2014/03/25/anr-analyze.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ANR完全解析&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://fitzeng.org/tags/Android/"/>
    
  </entry>
  
</feed>
